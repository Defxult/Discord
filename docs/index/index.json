{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/applicationcommandinteractiondataoption\/focused","title":"let focused: Bool?","type":"property"},{"path":"\/documentation\/discord\/applicationcommandinteractiondataoption\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/discord\/applicationcommandinteractiondataoption\/options","title":"var options: [ApplicationCommandInteractionDataOption]?","type":"property"},{"path":"\/documentation\/discord\/applicationcommandinteractiondataoption\/type","title":"let type: ApplicationCommandOptionType","type":"property"},{"path":"\/documentation\/discord\/applicationcommandinteractiondataoption\/value","title":"let value: Any?","type":"property"}],"path":"\/documentation\/discord\/applicationcommandinteractiondataoption","title":"ApplicationCommandInteractionDataOption","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/button\/init(style:label:emoji:customid:url:disabled:)","title":"init(style: Style, label: String?, emoji: String?, customId: String?, url: String?, disabled: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/button\/customid","title":"var customId: String","type":"property"},{"path":"\/documentation\/discord\/button\/disabled","title":"var disabled: Bool","type":"property"},{"path":"\/documentation\/discord\/button\/emoji","title":"var emoji: String?","type":"property"},{"path":"\/documentation\/discord\/button\/label","title":"var label: String?","type":"property"},{"path":"\/documentation\/discord\/button\/style-swift.property","title":"var style: Style","type":"property"},{"path":"\/documentation\/discord\/button\/type","title":"let type: ComponentType","type":"property"},{"path":"\/documentation\/discord\/button\/url","title":"var url: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/button\/style-swift.enum\/danger","title":"case danger","type":"case"},{"path":"\/documentation\/discord\/button\/style-swift.enum\/link","title":"case link","type":"case"},{"path":"\/documentation\/discord\/button\/style-swift.enum\/primary","title":"case primary","type":"case"},{"path":"\/documentation\/discord\/button\/style-swift.enum\/secondary","title":"case secondary","type":"case"},{"path":"\/documentation\/discord\/button\/style-swift.enum\/success","title":"case success","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/button\/style-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/button\/style-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/button\/style-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/button\/style-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/button\/style-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/button\/style-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/button\/style-swift.enum","title":"Button.Style","type":"enum"}],"path":"\/documentation\/discord\/button","title":"Button","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/categorychannel\/==(_:_:)","title":"static func == (CategoryChannel, CategoryChannel) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/categorychannel\/bot","title":"var bot: Discord?","type":"property"},{"path":"\/documentation\/discord\/categorychannel\/categoryid","title":"let categoryId: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/categorychannel\/channels","title":"var channels: [GuildChannel]","type":"property"},{"path":"\/documentation\/discord\/categorychannel\/guildid","title":"let guildId: Snowflake","type":"property"},{"path":"\/documentation\/discord\/categorychannel\/id","title":"let id: Snowflake","type":"property"},{"path":"\/documentation\/discord\/categorychannel\/lastmessageid","title":"let lastMessageId: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/categorychannel\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/discord\/categorychannel\/overwrites","title":"var overwrites: [PermissionOverwrites]","type":"property"},{"path":"\/documentation\/discord\/categorychannel\/position","title":"var position: Int","type":"property"},{"path":"\/documentation\/discord\/categorychannel\/type","title":"let type: ChannelType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/categorychannel\/edit(_:reason:)","title":"func edit(Edit..., reason: String?) async throws -> CategoryChannel","type":"method"},{"path":"\/documentation\/discord\/categorychannel\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/categorychannel\/edit\/name(_:)","title":"case name(String)","type":"case"},{"path":"\/documentation\/discord\/categorychannel\/edit\/overwrites(_:)","title":"case overwrites([PermissionOverwrites]?)","type":"case"},{"path":"\/documentation\/discord\/categorychannel\/edit\/position(_:)","title":"case position(Int?)","type":"case"}],"path":"\/documentation\/discord\/categorychannel\/edit","title":"CategoryChannel.Edit","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/categorychannel\/ismessageable","title":"var isMessageable: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/categorychannel\/delete(reason:)","title":"func delete(reason: String?) async throws","type":"method"}],"path":"\/documentation\/discord\/categorychannel\/channel-implementations","title":"Channel Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/categorychannel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/categorychannel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/categorychannel\/category","title":"var category: CategoryChannel?","type":"property"},{"path":"\/documentation\/discord\/categorychannel\/guild","title":"var guild: Guild","type":"property"},{"path":"\/documentation\/discord\/categorychannel\/jumpurl","title":"var jumpUrl: String","type":"property"},{"path":"\/documentation\/discord\/categorychannel\/mention","title":"var mention: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/categorychannel\/createinvite(maxage:maxuses:temporary:unique:targettype:targetuser:targetapplicationid:reason:)","title":"func createInvite(maxAge: Int, maxUses: Int, temporary: Bool, unique: Bool, targetType: Invite.Target?, targetUser: User?, targetApplicationId: Snowflake?, reason: String?) async throws -> Invite","type":"method"},{"path":"\/documentation\/discord\/categorychannel\/deletepermission(for:reason:)","title":"func deletePermission(for: Object, reason: String?) async throws","type":"method"},{"path":"\/documentation\/discord\/categorychannel\/getoverwrites(for:)","title":"func getOverwrites(for: Object) -> PermissionOverwrites?","type":"method"},{"path":"\/documentation\/discord\/categorychannel\/invites()","title":"func invites() async throws -> [Invite]","type":"method"},{"path":"\/documentation\/discord\/categorychannel\/updateoverwrites(_:reason:)","title":"func updateOverwrites(PermissionOverwrites, reason: String?) async throws","type":"method"}],"path":"\/documentation\/discord\/categorychannel\/guildchannel-implementations","title":"GuildChannel Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/categorychannel\/created","title":"var created: Date","type":"property"}],"path":"\/documentation\/discord\/categorychannel\/object-implementations","title":"Object Implementations","type":"symbol"}],"path":"\/documentation\/discord\/categorychannel","title":"CategoryChannel","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/clientuser\/locale","title":"let locale: Locale?","type":"property"},{"path":"\/documentation\/discord\/clientuser\/mfaenabled","title":"let mfaEnabled: Bool","type":"property"},{"path":"\/documentation\/discord\/clientuser\/verified","title":"let verified: Bool","type":"property"}],"path":"\/documentation\/discord\/clientuser","title":"ClientUser","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/dmchannel\/==(_:_:)","title":"static func == (DMChannel, DMChannel) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/dmchannel\/bot","title":"var bot: Discord?","type":"property"},{"path":"\/documentation\/discord\/dmchannel\/id","title":"let id: Snowflake","type":"property"},{"path":"\/documentation\/discord\/dmchannel\/lastmessageid","title":"var lastMessageId: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/dmchannel\/recipientid","title":"var recipientId: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/dmchannel\/type","title":"let type: ChannelType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/dmchannel\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"path":"\/documentation\/discord\/dmchannel\/pins()","title":"func pins() async throws -> [Message]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/dmchannel\/ismessageable","title":"var isMessageable: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/dmchannel\/delete(reason:)","title":"func delete(reason: String?) async throws","type":"method"}],"path":"\/documentation\/discord\/dmchannel\/channel-implementations","title":"Channel Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/dmchannel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/dmchannel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/dmchannel\/bulkdeletemessages(_:reason:)","title":"func bulkDeleteMessages([Message], reason: String?) async throws","type":"method"},{"path":"\/documentation\/discord\/dmchannel\/history(limit:search:)","title":"func history(limit: Int, search: Message.History?) async throws -> [Message]","type":"method"},{"path":"\/documentation\/discord\/dmchannel\/requestmessage(_:)","title":"func requestMessage(Snowflake) async throws -> Message","type":"method"},{"path":"\/documentation\/discord\/dmchannel\/send(_:tts:embeds:allowedmentions:ui:files:stickers:reference:silent:)","title":"func send(String?, tts: Bool, embeds: [Embed]?, allowedMentions: AllowedMentions, ui: UI?, files: [File]?, stickers: [GuildSticker]?, reference: Message.Reference?, silent: Bool) async throws -> Message","type":"method"},{"path":"\/documentation\/discord\/dmchannel\/triggertyping(while:)","title":"func triggerTyping(while: (() async -> Void)?) async throws","type":"method"}],"path":"\/documentation\/discord\/dmchannel\/messageable-implementations","title":"Messageable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/dmchannel\/created","title":"var created: Date","type":"property"}],"path":"\/documentation\/discord\/dmchannel\/object-implementations","title":"Object Implementations","type":"symbol"}],"path":"\/documentation\/discord\/dmchannel","title":"DMChannel","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/discord\/init(token:intents:maxmessagescache:sharding:ignoredms:)","title":"init(token: String, intents: Set<Intents>, maxMessagesCache: Int, sharding: Bool, ignoreDms: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/discord\/cachedmessages","title":"var cachedMessages: Set<Message>","type":"property"},{"path":"\/documentation\/discord\/discord\/channels","title":"var channels: [Channel]","type":"property"},{"path":"\/documentation\/discord\/discord\/dms","title":"var dms: Set<DMChannel>","type":"property"},{"path":"\/documentation\/discord\/discord\/emojis","title":"var emojis: Set<Emoji>","type":"property"},{"path":"\/documentation\/discord\/discord\/guilds","title":"var guilds: [Guild]","type":"property"},{"path":"\/documentation\/discord\/discord\/ignoredms","title":"var ignoreDms: Bool","type":"property"},{"path":"\/documentation\/discord\/discord\/intents","title":"let intents: Set<Intents>","type":"property"},{"path":"\/documentation\/discord\/discord\/listeners","title":"var listeners: [EventListener]","type":"property"},{"path":"\/documentation\/discord\/discord\/sharding","title":"var sharding: Bool","type":"property"},{"path":"\/documentation\/discord\/discord\/token","title":"let token: String","type":"property"},{"path":"\/documentation\/discord\/discord\/user","title":"var user: ClientUser?","type":"property"},{"path":"\/documentation\/discord\/discord\/users","title":"var users: [User]","type":"property"},{"path":"\/documentation\/discord\/discord\/version","title":"let version: Version","type":"property"},{"path":"\/documentation\/discord\/discord\/voicestates","title":"var voiceStates: [VoiceChannel.State]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/discord\/addlisteners(_:)","title":"func addListeners(EventListener...) throws","type":"method"},{"path":"\/documentation\/discord\/discord\/addmessagecommand(name:guildid:oninteraction:defaultmemberpermissions:namelocalizations:dmpermission:nsfw:)","title":"func addMessageCommand(name: String, guildId: Snowflake?, onInteraction: (Interaction) async -> Void, defaultMemberPermissions: Permissions?, nameLocalizations: [Locale : String]?, dmPermission: Bool, nsfw: Bool)","type":"method"},{"path":"\/documentation\/discord\/discord\/addslashcommand(name:description:guildid:oninteraction:options:dmpermission:defaultmemberpermissions:namelocalizations:descriptionlocalizations:nsfw:)","title":"func addSlashCommand(name: String, description: String, guildId: Snowflake?, onInteraction: (Interaction) async -> Void, options: [ApplicationCommandOption]?, dmPermission: Bool, defaultMemberPermissions: Permissions?, nameLocalizations: [Locale : String]?, descriptionLocalizations: [Locale : String]?, nsfw: Bool)","type":"method"},{"path":"\/documentation\/discord\/discord\/addusercommand(name:guildid:oninteraction:defaultmemberpermissions:namelocalizations:dmpermission:nsfw:)","title":"func addUserCommand(name: String, guildId: Snowflake?, onInteraction: (Interaction) async -> Void, defaultMemberPermissions: Permissions?, nameLocalizations: [Locale : String]?, dmPermission: Bool, nsfw: Bool)","type":"method"},{"path":"\/documentation\/discord\/discord\/applicationcommands()","title":"func applicationCommands() async throws -> [ApplicationCommand]","type":"method"},{"path":"\/documentation\/discord\/discord\/applicationinfo()","title":"func applicationInfo() async throws -> Application","type":"method"},{"path":"\/documentation\/discord\/discord\/connect()","title":"func connect() async throws","type":"method"},{"path":"\/documentation\/discord\/discord\/createdm(with:)","title":"func createDm(with: User) async throws -> DMChannel","type":"method"},{"path":"\/documentation\/discord\/discord\/createguild(name:icon:template:)","title":"func createGuild(name: String, icon: File?, template: String?) async throws -> Guild","type":"method"},{"path":"\/documentation\/discord\/discord\/disablealllisteners()","title":"func disableAllListeners()","type":"method"},{"path":"\/documentation\/discord\/discord\/disconnect()","title":"func disconnect()","type":"method"},{"path":"\/documentation\/discord\/discord\/enablealllisteners()","title":"func enableAllListeners()","type":"method"},{"path":"\/documentation\/discord\/discord\/getchannel(_:)","title":"func getChannel(Snowflake) -> Channel?","type":"method"},{"path":"\/documentation\/discord\/discord\/getguild(_:)","title":"func getGuild(Snowflake) -> Guild?","type":"method"},{"path":"\/documentation\/discord\/discord\/getlistener(name:)","title":"func getListener(name: String) -> EventListener?","type":"method"},{"path":"\/documentation\/discord\/discord\/getmember(_:in:)","title":"func getMember(Snowflake, in: Snowflake) -> Member?","type":"method"},{"path":"\/documentation\/discord\/discord\/getmessage(_:)","title":"func getMessage(Snowflake) -> Message?","type":"method"},{"path":"\/documentation\/discord\/discord\/getuser(_:)","title":"func getUser(Snowflake) -> User?","type":"method"},{"path":"\/documentation\/discord\/discord\/requestguild(_:withcounts:)","title":"func requestGuild(Snowflake, withCounts: Bool) async throws -> Guild","type":"method"},{"path":"\/documentation\/discord\/discord\/requestinvite(code:)","title":"func requestInvite(code: String) async throws -> PartialInvite","type":"method"},{"path":"\/documentation\/discord\/discord\/requestnitrostickerpacks()","title":"func requestNitroStickerPacks() async throws -> [Sticker.Pack]","type":"method"},{"path":"\/documentation\/discord\/discord\/requeststicker(_:)","title":"func requestSticker(Snowflake) async throws -> Sticker","type":"method"},{"path":"\/documentation\/discord\/discord\/requesttemplate(code:)","title":"func requestTemplate(code: String) async throws -> Guild.Template","type":"method"},{"path":"\/documentation\/discord\/discord\/requestuser(_:)","title":"func requestUser(Snowflake) async throws -> User","type":"method"},{"path":"\/documentation\/discord\/discord\/requestwebhookfrom(id:)","title":"func requestWebhookFrom(id: Snowflake) async throws -> Webhook","type":"method"},{"path":"\/documentation\/discord\/discord\/requestwebhookfrom(url:)","title":"func requestWebhookFrom(url: String) async throws -> Webhook","type":"method"},{"path":"\/documentation\/discord\/discord\/syncapplicationcommands()","title":"func syncApplicationCommands() async throws -> [ApplicationCommand]","type":"method"},{"path":"\/documentation\/discord\/discord\/updatepresence(status:activity:)","title":"func updatePresence(status: User.Status, activity: User.PresenceActivity?) async throws","type":"method"},{"path":"\/documentation\/discord\/discord\/waituntilready()","title":"func waitUntilReady() async","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/discord\/allowedmentions","title":"static var allowedMentions: AllowedMentions","type":"property"}],"path":"\/documentation\/discord\/discord","title":"Discord","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/embed\/author-swift.struct\/iconurl","title":"let iconUrl: String?","type":"property"},{"path":"\/documentation\/discord\/embed\/author-swift.struct\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/discord\/embed\/author-swift.struct\/url","title":"let url: String?","type":"property"}],"path":"\/documentation\/discord\/embed\/author-swift.struct","title":"Embed.Author","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/embed\/field\/inline","title":"let inline: Bool","type":"property"},{"path":"\/documentation\/discord\/embed\/field\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/discord\/embed\/field\/value","title":"let value: String","type":"property"}],"path":"\/documentation\/discord\/embed\/field","title":"Embed.Field","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/embed\/footer-swift.struct\/iconurl","title":"let iconUrl: String?","type":"property"},{"path":"\/documentation\/discord\/embed\/footer-swift.struct\/text","title":"let text: String","type":"property"}],"path":"\/documentation\/discord\/embed\/footer-swift.struct","title":"Embed.Footer","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/embed\/image-swift.struct\/height","title":"let height: Int?","type":"property"},{"path":"\/documentation\/discord\/embed\/image-swift.struct\/url","title":"let url: String","type":"property"},{"path":"\/documentation\/discord\/embed\/image-swift.struct\/width","title":"let width: Int?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/embed\/image-swift.struct\/download()","title":"func download() async throws -> File?","type":"method"}],"path":"\/documentation\/discord\/embed\/image-swift.struct\/downloadable-implementations","title":"Downloadable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/embed\/image-swift.struct","title":"Embed.Image","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/embed\/provider-swift.struct\/name","title":"let name: String?","type":"property"},{"path":"\/documentation\/discord\/embed\/provider-swift.struct\/url","title":"let url: String?","type":"property"}],"path":"\/documentation\/discord\/embed\/provider-swift.struct","title":"Embed.Provider","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/embed\/thumbnail-swift.struct\/height","title":"let height: Int?","type":"property"},{"path":"\/documentation\/discord\/embed\/thumbnail-swift.struct\/url","title":"let url: String","type":"property"},{"path":"\/documentation\/discord\/embed\/thumbnail-swift.struct\/width","title":"let width: Int?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/embed\/thumbnail-swift.struct\/download()","title":"func download() async throws -> File?","type":"method"}],"path":"\/documentation\/discord\/embed\/thumbnail-swift.struct\/downloadable-implementations","title":"Downloadable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/embed\/thumbnail-swift.struct","title":"Embed.Thumbnail","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/embed\/video-swift.struct\/height","title":"let height: Int?","type":"property"},{"path":"\/documentation\/discord\/embed\/video-swift.struct\/url","title":"let url: String?","type":"property"},{"path":"\/documentation\/discord\/embed\/video-swift.struct\/width","title":"let width: Int?","type":"property"}],"path":"\/documentation\/discord\/embed\/video-swift.struct","title":"Embed.Video","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/embed\/init(title:description:color:url:timestamp:)","title":"init(title: String?, description: String?, color: Color?, url: String?, timestamp: Date?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/embed\/author-swift.property","title":"var author: Author?","type":"property"},{"path":"\/documentation\/discord\/embed\/color","title":"var color: Color?","type":"property"},{"path":"\/documentation\/discord\/embed\/copy","title":"var copy: Embed","type":"property"},{"path":"\/documentation\/discord\/embed\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/discord\/embed\/description","title":"var description: String?","type":"property"},{"path":"\/documentation\/discord\/embed\/dict","title":"var dict: [String : Any]","type":"property"},{"path":"\/documentation\/discord\/embed\/fields","title":"var fields: [Embed.Field]","type":"property"},{"path":"\/documentation\/discord\/embed\/footer-swift.property","title":"var footer: Footer?","type":"property"},{"path":"\/documentation\/discord\/embed\/image-swift.property","title":"var image: Image?","type":"property"},{"path":"\/documentation\/discord\/embed\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/discord\/embed\/provider-swift.property","title":"var provider: Provider?","type":"property"},{"path":"\/documentation\/discord\/embed\/thumbnail-swift.property","title":"var thumbnail: Thumbnail?","type":"property"},{"path":"\/documentation\/discord\/embed\/timestamp","title":"var timestamp: Date?","type":"property"},{"path":"\/documentation\/discord\/embed\/title","title":"var title: String?","type":"property"},{"path":"\/documentation\/discord\/embed\/type","title":"var type: EmbedType","type":"property"},{"path":"\/documentation\/discord\/embed\/url","title":"var url: String?","type":"property"},{"path":"\/documentation\/discord\/embed\/video-swift.property","title":"var video: Video?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/embed\/addfield(name:value:inline:)","title":"func addField(name: String, value: String, inline: Bool) -> Self","type":"method"},{"path":"\/documentation\/discord\/embed\/clear()","title":"func clear() -> Self","type":"method"},{"path":"\/documentation\/discord\/embed\/removeallfields()","title":"func removeAllFields() -> Self","type":"method"},{"path":"\/documentation\/discord\/embed\/removeauthor()","title":"func removeAuthor() -> Self","type":"method"},{"path":"\/documentation\/discord\/embed\/removecolor()","title":"func removeColor() -> Self","type":"method"},{"path":"\/documentation\/discord\/embed\/removedescription()","title":"func removeDescription() -> Self","type":"method"},{"path":"\/documentation\/discord\/embed\/removefieldatindex(_:)","title":"func removeFieldAtIndex(Int) -> Self","type":"method"},{"path":"\/documentation\/discord\/embed\/removefooter()","title":"func removeFooter() -> Self","type":"method"},{"path":"\/documentation\/discord\/embed\/removeimage()","title":"func removeImage() -> Self","type":"method"},{"path":"\/documentation\/discord\/embed\/removethumbnail()","title":"func removeThumbnail() -> Self","type":"method"},{"path":"\/documentation\/discord\/embed\/removetimestamp()","title":"func removeTimestamp() -> Self","type":"method"},{"path":"\/documentation\/discord\/embed\/removetitle()","title":"func removeTitle() -> Self","type":"method"},{"path":"\/documentation\/discord\/embed\/removeurl()","title":"func removeUrl() -> Self","type":"method"},{"path":"\/documentation\/discord\/embed\/setauthor(name:url:iconurl:)","title":"func setAuthor(name: String, url: String?, iconUrl: String?) -> Self","type":"method"},{"path":"\/documentation\/discord\/embed\/setcolor(_:)","title":"func setColor(Color) -> Self","type":"method"},{"path":"\/documentation\/discord\/embed\/setdescription(_:)","title":"func setDescription(String) -> Self","type":"method"},{"path":"\/documentation\/discord\/embed\/setfooter(text:iconurl:)","title":"func setFooter(text: String, iconUrl: String?) -> Self","type":"method"},{"path":"\/documentation\/discord\/embed\/setimage(url:)","title":"func setImage(url: String) -> Self","type":"method"},{"path":"\/documentation\/discord\/embed\/setthumbnail(url:)","title":"func setThumbnail(url: String) -> Self","type":"method"},{"path":"\/documentation\/discord\/embed\/settimestamp(_:)","title":"func setTimestamp(Date) -> Self","type":"method"},{"path":"\/documentation\/discord\/embed\/settitle(_:)","title":"func setTitle(String) -> Self","type":"method"},{"path":"\/documentation\/discord\/embed\/seturl(_:)","title":"func setUrl(String) -> Self","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/embed\/fromdict(_:)","title":"static func fromDict([String : Any]) -> Embed","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/embed\/embedtype\/article","title":"case article","type":"case"},{"path":"\/documentation\/discord\/embed\/embedtype\/gifv","title":"case gifv","type":"case"},{"path":"\/documentation\/discord\/embed\/embedtype\/image","title":"case image","type":"case"},{"path":"\/documentation\/discord\/embed\/embedtype\/link","title":"case link","type":"case"},{"path":"\/documentation\/discord\/embed\/embedtype\/rich","title":"case rich","type":"case"},{"path":"\/documentation\/discord\/embed\/embedtype\/video","title":"case video","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/embed\/embedtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/embed\/embedtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/embed\/embedtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/embed\/embedtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/embed\/embedtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/embed\/embedtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/embed\/embedtype","title":"Embed.EmbedType","type":"enum"}],"path":"\/documentation\/discord\/embed","title":"Embed","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/eventlistener\/init(name:isenabled:)","title":"init(name: String, isEnabled: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/eventlistener\/isenabled","title":"var isEnabled: Bool","type":"property"},{"path":"\/documentation\/discord\/eventlistener\/name","title":"let name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/eventlistener\/onapplicationcommandpermissionsupdate(permissions:)","title":"func onApplicationCommandPermissionsUpdate(permissions: GuildApplicationCommandPermissions) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onauditlogcreate(log:)","title":"func onAuditLogCreate(log: AuditLog) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onautomoderationrulecreate(rule:)","title":"func onAutoModerationRuleCreate(rule: AutoModerationRule) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onautomoderationruledelete(rule:)","title":"func onAutoModerationRuleDelete(rule: AutoModerationRule) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onautomoderationruleexecution(execution:)","title":"func onAutoModerationRuleExecution(execution: AutoModerationRule.ActionExecution) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onautomoderationruleupdate(rule:)","title":"func onAutoModerationRuleUpdate(rule: AutoModerationRule) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onchannelcreate(channel:)","title":"func onChannelCreate(channel: GuildChannel) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onchanneldelete(channel:)","title":"func onChannelDelete(channel: GuildChannel) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onchannelpinsupdate(channel:pinnedat:)","title":"func onChannelPinsUpdate(channel: GuildChannel, pinnedAt: Date?) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onchannelupdate(before:after:)","title":"func onChannelUpdate(before: GuildChannel, after: GuildChannel) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onconnect(user:)","title":"func onConnect(user: ClientUser) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onguildavailable(guild:)","title":"func onGuildAvailable(guild: Guild) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onguildban(guild:user:)","title":"func onGuildBan(guild: Guild, user: User) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onguildcreate(guild:)","title":"func onGuildCreate(guild: Guild) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onguilddelete(guild:)","title":"func onGuildDelete(guild: Guild) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onguildemojisupdate(before:after:)","title":"func onGuildEmojisUpdate(before: Set<Emoji>, after: Set<Emoji>) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onguildintegrationupdate(guild:)","title":"func onGuildIntegrationUpdate(guild: Guild) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onguildmemberjoin(member:)","title":"func onGuildMemberJoin(member: Member) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onguildmemberremove(member:)","title":"func onGuildMemberRemove(member: Member) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onguildmemberupdate(before:after:)","title":"func onGuildMemberUpdate(before: Member, after: Member) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onguildrolecreate(role:)","title":"func onGuildRoleCreate(role: Role) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onguildroledelete(role:)","title":"func onGuildRoleDelete(role: Role) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onguildroleupdate(before:after:)","title":"func onGuildRoleUpdate(before: Role, after: Role) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onguildscheduledeventcreate(event:)","title":"func onGuildScheduledEventCreate(event: Guild.ScheduledEvent) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onguildscheduledeventdelete(event:)","title":"func onGuildScheduledEventDelete(event: Guild.ScheduledEvent) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onguildscheduledeventupdate(before:after:)","title":"func onGuildScheduledEventUpdate(before: Guild.ScheduledEvent, after: Guild.ScheduledEvent) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onguildscheduledeventuseradd(event:user:)","title":"func onGuildScheduledEventUserAdd(event: Guild.ScheduledEvent, user: User) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onguildscheduledeventuserremove(event:user:)","title":"func onGuildScheduledEventUserRemove(event: Guild.ScheduledEvent, user: User) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onguildstickersupdate(before:after:)","title":"func onGuildStickersUpdate(before: [GuildSticker], after: [GuildSticker]) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onguildunavailable(guild:)","title":"func onGuildUnavailable(guild: Guild) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onguildunban(guild:user:)","title":"func onGuildUnban(guild: Guild, user: User) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onguildupdate(guild:)","title":"func onGuildUpdate(guild: Guild) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onintegrationcreate(integration:)","title":"func onIntegrationCreate(integration: Guild.Integration) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onintegrationdelete(payload:)","title":"func onIntegrationDelete(payload: (id: Snowflake, guildId: Snowflake, applicationId: Snowflake)) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onintegrationupdate(integration:)","title":"func onIntegrationUpdate(integration: Guild.Integration) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/oninteractioncreate(interaction:)","title":"func onInteractionCreate(interaction: Interaction) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/oninvitecreate(invite:)","title":"func onInviteCreate(invite: Invite) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onmessagecreate(message:)","title":"func onMessageCreate(message: Message) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onmessagedelete(message:)","title":"func onMessageDelete(message: Message) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onmessagedeletebulk(messages:)","title":"func onMessageDeleteBulk(messages: [Message]) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onmessagereactionadd(reaction:user:)","title":"func onMessageReactionAdd(reaction: Reaction, user: User) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onmessagereactionremove(reaction:user:)","title":"func onMessageReactionRemove(reaction: Reaction, user: User) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onmessagereactionremoveall(message:reactions:)","title":"func onMessageReactionRemoveAll(message: Message, reactions: [Reaction]) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onmessagereactionremoveemoji(reaction:)","title":"func onMessageReactionRemoveEmoji(reaction: Reaction) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onpresenceupdate(user:status:activities:)","title":"func onPresenceUpdate(user: User, status: User.Status, activities: [User.Activity]?) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onrawguildmemberremove(payload:)","title":"func onRawGuildMemberRemove(payload: (guildId: Snowflake, user: User)) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onrawinvitedelete(payload:)","title":"func onRawInviteDelete(payload: (channelId: Snowflake, guildId: Snowflake?, code: String)) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onrawmessagedelete(payload:)","title":"func onRawMessageDelete(payload: (messageId: Snowflake, channelId: Snowflake, guildId: Snowflake?)) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onrawmessagedeletebulk(payload:)","title":"func onRawMessageDeleteBulk(payload: (messageIds: [Snowflake], channelId: Snowflake, guildId: Snowflake?)) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onrawmessagereactionadd(payload:)","title":"func onRawMessageReactionAdd(payload: (userId: Snowflake, channelId: Snowflake, messageId: Snowflake, emoji: PartialEmoji, guildId: Snowflake?, member: Member?)) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onrawmessagereactionremove(payload:)","title":"func onRawMessageReactionRemove(payload: (userId: Snowflake, channelId: Snowflake, messageId: Snowflake, emoji: PartialEmoji, guildId: Snowflake?)) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onrawmessagereactionremoveall(payload:)","title":"func onRawMessageReactionRemoveAll(payload: (channelId: Snowflake, messageId: Snowflake, guildId: Snowflake?)) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onrawmessagereactionremoveemoji(payload:)","title":"func onRawMessageReactionRemoveEmoji(payload: (channelId: Snowflake, messageId: Snowflake, emoji: PartialEmoji, guildId: Snowflake?)) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onrawmessageupdate(payload:)","title":"func onRawMessageUpdate(payload: (cachedMessage: Message?, guildId: Snowflake?, channelId: Snowflake, data: [String : Any])) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onrawthreaddelete(payload:)","title":"func onRawThreadDelete(payload: (id: Snowflake, guildId: Snowflake, parentId: Snowflake)) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onrawthreadmemberremove(ids:)","title":"func onRawThreadMemberRemove(ids: [Snowflake]) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onrawthreadupdate(payload:)","title":"func onRawThreadUpdate(payload: (id: Snowflake, guildId: Snowflake, memberCount: Int, data: [String : Any])) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onrawtypingstart(payload:)","title":"func onRawTypingStart(payload: (channelId: Snowflake, guildId: Snowflake?, userId: Snowflake, timestamp: Date, member: Member?)) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onready()","title":"func onReady() async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onstageinstancecreate(stageinstance:)","title":"func onStageInstanceCreate(stageInstance: StageInstance) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onstageinstancedelete(stageinstance:)","title":"func onStageInstanceDelete(stageInstance: StageInstance) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onstageinstanceupdate(before:after:)","title":"func onStageInstanceUpdate(before: StageInstance, after: StageInstance) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onthreadcreate(thread:)","title":"func onThreadCreate(thread: ThreadChannel) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onthreaddelete(thread:)","title":"func onThreadDelete(thread: ThreadChannel) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onthreadlistsync(threads:)","title":"func onThreadListSync(threads: [ThreadChannel]) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onthreadmemberadd(member:)","title":"func onThreadMemberAdd(member: ThreadChannel.ThreadMember) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onthreadupdate(before:after:)","title":"func onThreadUpdate(before: ThreadChannel, after: ThreadChannel) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/ontypingstart(by:at:in:)","title":"func onTypingStart(by: Object, at: Date, in: Messageable) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onuserupdate(user:)","title":"func onUserUpdate(user: User) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onvoiceserverupdate(token:guildid:endpoint:)","title":"func onVoiceServerUpdate(token: String, guildId: Snowflake, endpoint: String?) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onvoicestateupdate(voicestate:)","title":"func onVoiceStateUpdate(voiceState: VoiceChannel.State) async","type":"method"},{"path":"\/documentation\/discord\/eventlistener\/onwebhooksupdate(channel:)","title":"func onWebhooksUpdate(channel: GuildChannel) async","type":"method"}],"path":"\/documentation\/discord\/eventlistener","title":"EventListener","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/forumchannel\/tag\/init(name:moderated:emoji:)","title":"init(name: String, moderated: Bool, emoji: PartialEmoji)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/forumchannel\/tag\/emoji","title":"let emoji: PartialEmoji","type":"property"},{"path":"\/documentation\/discord\/forumchannel\/tag\/id","title":"let id: Snowflake","type":"property"},{"path":"\/documentation\/discord\/forumchannel\/tag\/moderated","title":"let moderated: Bool","type":"property"},{"path":"\/documentation\/discord\/forumchannel\/tag\/name","title":"let name: String","type":"property"}],"path":"\/documentation\/discord\/forumchannel\/tag","title":"ForumChannel.Tag","type":"struct"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/forumchannel\/==(_:_:)","title":"static func == (ForumChannel, ForumChannel) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/forumchannel\/bot","title":"var bot: Discord?","type":"property"},{"path":"\/documentation\/discord\/forumchannel\/categoryid","title":"var categoryId: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/forumchannel\/flag-swift.property","title":"var flag: Flag?","type":"property"},{"path":"\/documentation\/discord\/forumchannel\/guildid","title":"let guildId: Snowflake","type":"property"},{"path":"\/documentation\/discord\/forumchannel\/id","title":"let id: Snowflake","type":"property"},{"path":"\/documentation\/discord\/forumchannel\/isnsfw","title":"var isNsfw: Bool","type":"property"},{"path":"\/documentation\/discord\/forumchannel\/lastmessageid","title":"var lastMessageId: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/forumchannel\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/discord\/forumchannel\/overwrites","title":"var overwrites: [PermissionOverwrites]","type":"property"},{"path":"\/documentation\/discord\/forumchannel\/position","title":"var position: Int","type":"property"},{"path":"\/documentation\/discord\/forumchannel\/slowmodedelay","title":"var slowmodeDelay: Int","type":"property"},{"path":"\/documentation\/discord\/forumchannel\/tags","title":"var tags: [ForumChannel.Tag]","type":"property"},{"path":"\/documentation\/discord\/forumchannel\/topic","title":"var topic: String?","type":"property"},{"path":"\/documentation\/discord\/forumchannel\/type","title":"let type: ChannelType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/forumchannel\/archivedthreads(before:limit:joined:private:)","title":"func archivedThreads(before: Date, limit: Int, joined: Bool, private: Bool) -> AsyncArchivedThreads","type":"method"},{"path":"\/documentation\/discord\/forumchannel\/createthread(name:autoarchiveduration:slowmode:appliedtags:content:embeds:allowedmentions:ui:stickers:files:suppressembeds:reason:)","title":"func createThread(name: String, autoArchiveDuration: ThreadChannel.ArchiveDuration, slowmode: Int?, appliedTags: [ForumChannel.Tag]?, content: String?, embeds: [Embed]?, allowedMentions: AllowedMentions, ui: UI?, stickers: [GuildSticker]?, files: [File]?, suppressEmbeds: Bool, reason: String?) async throws -> ThreadChannel","type":"method"},{"path":"\/documentation\/discord\/forumchannel\/edit(_:reason:)","title":"func edit(Edit..., reason: String?) async throws -> ForumChannel","type":"method"},{"path":"\/documentation\/discord\/forumchannel\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/forumchannel\/edit\/availabletags(_:)","title":"case availableTags([ForumChannel.Tag])","type":"case"},{"path":"\/documentation\/discord\/forumchannel\/edit\/category(_:)","title":"case category(CategoryChannel?)","type":"case"},{"path":"\/documentation\/discord\/forumchannel\/edit\/defaultreactionemoji(_:)","title":"case defaultReactionEmoji(PartialEmoji?)","type":"case"},{"path":"\/documentation\/discord\/forumchannel\/edit\/defaultthreadautoarchiveduration(_:)","title":"case defaultThreadAutoArchiveDuration(ThreadChannel.ArchiveDuration)","type":"case"},{"path":"\/documentation\/discord\/forumchannel\/edit\/layout(_:)","title":"case layout(ForumChannel.Layout)","type":"case"},{"path":"\/documentation\/discord\/forumchannel\/edit\/name(_:)","title":"case name(String)","type":"case"},{"path":"\/documentation\/discord\/forumchannel\/edit\/nsfw(_:)","title":"case nsfw(Bool)","type":"case"},{"path":"\/documentation\/discord\/forumchannel\/edit\/overwrites(_:)","title":"case overwrites([PermissionOverwrites]?)","type":"case"},{"path":"\/documentation\/discord\/forumchannel\/edit\/position(_:)","title":"case position(Int?)","type":"case"},{"path":"\/documentation\/discord\/forumchannel\/edit\/slowmode(_:)","title":"case slowmode(Int)","type":"case"},{"path":"\/documentation\/discord\/forumchannel\/edit\/sortorder(_:)","title":"case sortOrder(ForumChannel.SortOrder)","type":"case"},{"path":"\/documentation\/discord\/forumchannel\/edit\/threadcreationslowmode(_:)","title":"case threadCreationSlowmode(Int)","type":"case"},{"path":"\/documentation\/discord\/forumchannel\/edit\/topic(_:)","title":"case topic(String?)","type":"case"}],"path":"\/documentation\/discord\/forumchannel\/edit","title":"ForumChannel.Edit","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/forumchannel\/flag-swift.enum\/pinned","title":"case pinned","type":"case"},{"path":"\/documentation\/discord\/forumchannel\/flag-swift.enum\/requiretag","title":"case requireTag","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/forumchannel\/flag-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/forumchannel\/flag-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/forumchannel\/flag-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/forumchannel\/flag-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/forumchannel\/flag-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/forumchannel\/flag-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/forumchannel\/flag-swift.enum","title":"ForumChannel.Flag","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/forumchannel\/layout\/galleryview","title":"case galleryView","type":"case"},{"path":"\/documentation\/discord\/forumchannel\/layout\/listview","title":"case listView","type":"case"},{"path":"\/documentation\/discord\/forumchannel\/layout\/notset","title":"case notSet","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/forumchannel\/layout\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/forumchannel\/layout\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/forumchannel\/layout\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/forumchannel\/layout\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/forumchannel\/layout\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/forumchannel\/layout\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/forumchannel\/layout","title":"ForumChannel.Layout","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/forumchannel\/sortorder\/creationdate","title":"case creationDate","type":"case"},{"path":"\/documentation\/discord\/forumchannel\/sortorder\/latestactivity","title":"case latestActivity","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/forumchannel\/sortorder\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/forumchannel\/sortorder\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/forumchannel\/sortorder\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/forumchannel\/sortorder\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/forumchannel\/sortorder\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/forumchannel\/sortorder\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/forumchannel\/sortorder","title":"ForumChannel.SortOrder","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/forumchannel\/ismessageable","title":"var isMessageable: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/forumchannel\/delete(reason:)","title":"func delete(reason: String?) async throws","type":"method"}],"path":"\/documentation\/discord\/forumchannel\/channel-implementations","title":"Channel Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/forumchannel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/forumchannel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/forumchannel\/category","title":"var category: CategoryChannel?","type":"property"},{"path":"\/documentation\/discord\/forumchannel\/guild","title":"var guild: Guild","type":"property"},{"path":"\/documentation\/discord\/forumchannel\/jumpurl","title":"var jumpUrl: String","type":"property"},{"path":"\/documentation\/discord\/forumchannel\/mention","title":"var mention: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/forumchannel\/createinvite(maxage:maxuses:temporary:unique:targettype:targetuser:targetapplicationid:reason:)","title":"func createInvite(maxAge: Int, maxUses: Int, temporary: Bool, unique: Bool, targetType: Invite.Target?, targetUser: User?, targetApplicationId: Snowflake?, reason: String?) async throws -> Invite","type":"method"},{"path":"\/documentation\/discord\/forumchannel\/deletepermission(for:reason:)","title":"func deletePermission(for: Object, reason: String?) async throws","type":"method"},{"path":"\/documentation\/discord\/forumchannel\/getoverwrites(for:)","title":"func getOverwrites(for: Object) -> PermissionOverwrites?","type":"method"},{"path":"\/documentation\/discord\/forumchannel\/invites()","title":"func invites() async throws -> [Invite]","type":"method"},{"path":"\/documentation\/discord\/forumchannel\/updateoverwrites(_:reason:)","title":"func updateOverwrites(PermissionOverwrites, reason: String?) async throws","type":"method"}],"path":"\/documentation\/discord\/forumchannel\/guildchannel-implementations","title":"GuildChannel Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/forumchannel\/created","title":"var created: Date","type":"property"}],"path":"\/documentation\/discord\/forumchannel\/object-implementations","title":"Object Implementations","type":"symbol"}],"path":"\/documentation\/discord\/forumchannel","title":"ForumChannel","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/asyncbans\/makeasynciterator()","title":"func makeAsyncIterator() -> AsyncBans","type":"method"},{"path":"\/documentation\/discord\/guild\/asyncbans\/next()","title":"func next() async throws -> Element?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/asyncbans\/element","title":"Guild.AsyncBans.Element","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/asyncbans\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/discord\/guild\/asyncbans\/compactmap(_:)-4f3s","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/discord\/guild\/asyncbans\/compactmap(_:)-8w80j","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/discord\/guild\/asyncbans\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/discord\/guild\/asyncbans\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/discord\/guild\/asyncbans\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/discord\/guild\/asyncbans\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/discord\/guild\/asyncbans\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/discord\/guild\/asyncbans\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/discord\/guild\/asyncbans\/flatmap(_:)-3pv67","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/discord\/guild\/asyncbans\/flatmap(_:)-4mftd","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/discord\/guild\/asyncbans\/map(_:)-60mos","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/discord\/guild\/asyncbans\/map(_:)-7v5rk","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/discord\/guild\/asyncbans\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/discord\/guild\/asyncbans\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/discord\/guild\/asyncbans\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/discord\/guild\/asyncbans\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/discord\/guild\/asyncbans\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/discord\/guild\/asyncbans\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"}],"path":"\/documentation\/discord\/guild\/asyncbans\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/discord\/guild\/asyncbans","title":"Guild.AsyncBans","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/asyncmembers\/makeasynciterator()","title":"func makeAsyncIterator() -> AsyncMembers","type":"method"},{"path":"\/documentation\/discord\/guild\/asyncmembers\/next()","title":"func next() async throws -> Element?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/asyncmembers\/element","title":"Guild.AsyncMembers.Element","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/asyncmembers\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/discord\/guild\/asyncmembers\/compactmap(_:)-14ctk","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/discord\/guild\/asyncmembers\/compactmap(_:)-4mvt0","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/discord\/guild\/asyncmembers\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/discord\/guild\/asyncmembers\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/discord\/guild\/asyncmembers\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/discord\/guild\/asyncmembers\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/discord\/guild\/asyncmembers\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/discord\/guild\/asyncmembers\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/discord\/guild\/asyncmembers\/flatmap(_:)-505uo","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/discord\/guild\/asyncmembers\/flatmap(_:)-7j37j","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/discord\/guild\/asyncmembers\/map(_:)-13bnf","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/discord\/guild\/asyncmembers\/map(_:)-5ue1s","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/discord\/guild\/asyncmembers\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/discord\/guild\/asyncmembers\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/discord\/guild\/asyncmembers\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/discord\/guild\/asyncmembers\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/discord\/guild\/asyncmembers\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/discord\/guild\/asyncmembers\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"}],"path":"\/documentation\/discord\/guild\/asyncmembers\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/discord\/guild\/asyncmembers","title":"Guild.AsyncMembers","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/ban\/reason","title":"let reason: String?","type":"property"},{"path":"\/documentation\/discord\/guild\/ban\/user","title":"let user: User","type":"property"}],"path":"\/documentation\/discord\/guild\/ban","title":"Guild.Ban","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/integration\/account-swift.struct\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/discord\/guild\/integration\/account-swift.struct\/name","title":"let name: String","type":"property"}],"path":"\/documentation\/discord\/guild\/integration\/account-swift.struct","title":"Guild.Integration.Account","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/integration\/application-swift.struct\/bot","title":"let bot: User?","type":"property"},{"path":"\/documentation\/discord\/guild\/integration\/application-swift.struct\/description","title":"let description: String","type":"property"},{"path":"\/documentation\/discord\/guild\/integration\/application-swift.struct\/icon","title":"let icon: Asset?","type":"property"},{"path":"\/documentation\/discord\/guild\/integration\/application-swift.struct\/id","title":"let id: Snowflake","type":"property"},{"path":"\/documentation\/discord\/guild\/integration\/application-swift.struct\/name","title":"let name: String","type":"property"}],"path":"\/documentation\/discord\/guild\/integration\/application-swift.struct","title":"Guild.Integration.Application","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/integration\/account-swift.property","title":"let account: Account","type":"property"},{"path":"\/documentation\/discord\/guild\/integration\/application-swift.property","title":"let application: Integration.Application?","type":"property"},{"path":"\/documentation\/discord\/guild\/integration\/bot","title":"var bot: Discord?","type":"property"},{"path":"\/documentation\/discord\/guild\/integration\/emoticonsenabled","title":"let emoticonsEnabled: Bool?","type":"property"},{"path":"\/documentation\/discord\/guild\/integration\/enabled","title":"let enabled: Bool","type":"property"},{"path":"\/documentation\/discord\/guild\/integration\/expirebehavior-swift.property","title":"let expireBehavior: ExpireBehavior?","type":"property"},{"path":"\/documentation\/discord\/guild\/integration\/expiregraceperiod","title":"let expireGracePeriod: Int?","type":"property"},{"path":"\/documentation\/discord\/guild\/integration\/id","title":"let id: Snowflake","type":"property"},{"path":"\/documentation\/discord\/guild\/integration\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/discord\/guild\/integration\/revoked","title":"let revoked: Bool?","type":"property"},{"path":"\/documentation\/discord\/guild\/integration\/roleid","title":"let roleId: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/guild\/integration\/scopes","title":"var scopes: Set<OAuth2Scopes>?","type":"property"},{"path":"\/documentation\/discord\/guild\/integration\/subscribercount","title":"let subscriberCount: Int?","type":"property"},{"path":"\/documentation\/discord\/guild\/integration\/syncedat","title":"let syncedAt: Date?","type":"property"},{"path":"\/documentation\/discord\/guild\/integration\/syncing","title":"let syncing: Bool?","type":"property"},{"path":"\/documentation\/discord\/guild\/integration\/type","title":"let type: String","type":"property"},{"path":"\/documentation\/discord\/guild\/integration\/user","title":"let user: User?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/integration\/delete(reason:)","title":"func delete(reason: String?) async throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/integration\/expirebehavior-swift.enum\/kick","title":"case kick","type":"case"},{"path":"\/documentation\/discord\/guild\/integration\/expirebehavior-swift.enum\/removerole","title":"case removeRole","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/integration\/expirebehavior-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/integration\/expirebehavior-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/guild\/integration\/expirebehavior-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/integration\/expirebehavior-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/integration\/expirebehavior-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/guild\/integration\/expirebehavior-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/guild\/integration\/expirebehavior-swift.enum","title":"Guild.Integration.ExpireBehavior","type":"enum"}],"path":"\/documentation\/discord\/guild\/integration","title":"Guild.Integration","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/onboarding\/prompt\/id","title":"let id: Snowflake","type":"property"},{"path":"\/documentation\/discord\/guild\/onboarding\/prompt\/inonboarding","title":"let inOnboarding: Bool","type":"property"},{"path":"\/documentation\/discord\/guild\/onboarding\/prompt\/options","title":"let options: [PromptOption]","type":"property"},{"path":"\/documentation\/discord\/guild\/onboarding\/prompt\/required","title":"let required: Bool","type":"property"},{"path":"\/documentation\/discord\/guild\/onboarding\/prompt\/singleselect","title":"let singleSelect: Bool","type":"property"},{"path":"\/documentation\/discord\/guild\/onboarding\/prompt\/title","title":"let title: String","type":"property"},{"path":"\/documentation\/discord\/guild\/onboarding\/prompt\/type","title":"let type: PromptType?","type":"property"}],"path":"\/documentation\/discord\/guild\/onboarding\/prompt","title":"Guild.Onboarding.Prompt","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/onboarding\/promptoption\/channelids","title":"let channelIds: [Snowflake]","type":"property"},{"path":"\/documentation\/discord\/guild\/onboarding\/promptoption\/description","title":"let description: String?","type":"property"},{"path":"\/documentation\/discord\/guild\/onboarding\/promptoption\/emoji","title":"let emoji: PartialEmoji","type":"property"},{"path":"\/documentation\/discord\/guild\/onboarding\/promptoption\/id","title":"let id: Snowflake","type":"property"},{"path":"\/documentation\/discord\/guild\/onboarding\/promptoption\/roleids","title":"let roleIds: [Snowflake]","type":"property"},{"path":"\/documentation\/discord\/guild\/onboarding\/promptoption\/title","title":"let title: String","type":"property"}],"path":"\/documentation\/discord\/guild\/onboarding\/promptoption","title":"Guild.Onboarding.PromptOption","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/onboarding\/defaultchannelids","title":"let defaultChannelIds: [Snowflake]","type":"property"},{"path":"\/documentation\/discord\/guild\/onboarding\/enabled","title":"let enabled: Bool","type":"property"},{"path":"\/documentation\/discord\/guild\/onboarding\/guildid","title":"let guildId: Snowflake","type":"property"},{"path":"\/documentation\/discord\/guild\/onboarding\/prompts","title":"let prompts: [Prompt]","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/onboarding\/prompttype\/dropdown","title":"case dropdown","type":"case"},{"path":"\/documentation\/discord\/guild\/onboarding\/prompttype\/multiplechoice","title":"case multipleChoice","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/onboarding\/prompttype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/onboarding\/prompttype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/guild\/onboarding\/prompttype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/onboarding\/prompttype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/onboarding\/prompttype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/guild\/onboarding\/prompttype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/guild\/onboarding\/prompttype","title":"Guild.Onboarding.PromptType","type":"enum"}],"path":"\/documentation\/discord\/guild\/onboarding","title":"Guild.Onboarding","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/preview\/approximatemembercount","title":"let approximateMemberCount: Int","type":"property"},{"path":"\/documentation\/discord\/guild\/preview\/approximatepresencecount","title":"let approximatePresenceCount: Int","type":"property"},{"path":"\/documentation\/discord\/guild\/preview\/description","title":"let description: String?","type":"property"},{"path":"\/documentation\/discord\/guild\/preview\/discoverysplash","title":"let discoverySplash: Asset?","type":"property"},{"path":"\/documentation\/discord\/guild\/preview\/emojis","title":"var emojis: [Emoji]","type":"property"},{"path":"\/documentation\/discord\/guild\/preview\/features","title":"var features: [Guild.Feature]","type":"property"},{"path":"\/documentation\/discord\/guild\/preview\/icon","title":"let icon: Asset?","type":"property"},{"path":"\/documentation\/discord\/guild\/preview\/id","title":"let id: Snowflake","type":"property"},{"path":"\/documentation\/discord\/guild\/preview\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/discord\/guild\/preview\/splash","title":"let splash: Asset?","type":"property"},{"path":"\/documentation\/discord\/guild\/preview\/stickers","title":"var stickers: [Sticker]","type":"property"}],"path":"\/documentation\/discord\/guild\/preview","title":"Guild.Preview","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/asyncusers\/makeasynciterator()","title":"func makeAsyncIterator() -> AsyncUsers","type":"method"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/asyncusers\/next()","title":"func next() async throws -> Element?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/asyncusers\/element","title":"Guild.ScheduledEvent.AsyncUsers.Element","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/asyncusers\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/asyncusers\/compactmap(_:)-8hlf2","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/asyncusers\/compactmap(_:)-8qzj7","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/asyncusers\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/asyncusers\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/asyncusers\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/asyncusers\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/asyncusers\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/asyncusers\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/asyncusers\/flatmap(_:)-1cdym","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/asyncusers\/flatmap(_:)-6u6f6","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/asyncusers\/map(_:)-610mr","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/asyncusers\/map(_:)-71jvb","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/asyncusers\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/asyncusers\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/asyncusers\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/asyncusers\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/asyncusers\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/asyncusers\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"}],"path":"\/documentation\/discord\/guild\/scheduledevent\/asyncusers\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/discord\/guild\/scheduledevent\/asyncusers","title":"Guild.ScheduledEvent.AsyncUsers","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/bot","title":"var bot: Discord?","type":"property"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/channelid","title":"let channelId: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/creator","title":"let creator: User?","type":"property"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/description","title":"let description: String?","type":"property"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/entityid","title":"let entityId: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/entitytype-swift.property","title":"let entityType: EntityType","type":"property"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/guild","title":"var guild: Guild","type":"property"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/id","title":"let id: Snowflake","type":"property"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/image","title":"let image: Asset?","type":"property"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/location","title":"let location: String?","type":"property"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/privacylevel-swift.property","title":"let privacyLevel: PrivacyLevel","type":"property"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/scheduledendtime","title":"let scheduledEndTime: Date?","type":"property"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/scheduledstarttime","title":"let scheduledStartTime: Date","type":"property"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/status-swift.property","title":"let status: Status","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/cancel()","title":"func cancel() async throws","type":"method"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/delete(reason:)","title":"func delete(reason: String?) async throws","type":"method"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/edit(_:reason:)","title":"func edit(ScheduledEvent.Edit..., reason: String?) async throws -> ScheduledEvent","type":"method"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/start()","title":"func start() async throws","type":"method"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/stop()","title":"func stop() async throws","type":"method"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/users(limit:before:after:)","title":"func users(limit: Int?, before: Date?, after: Date?) -> Guild.ScheduledEvent.AsyncUsers","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/edit\/channelid(_:)","title":"case channelId(Snowflake?)","type":"case"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/edit\/description(_:)","title":"case description(String?)","type":"case"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/edit\/endtime(_:)","title":"case endTime(Date)","type":"case"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/edit\/entitytype(_:channelid:location:endtime:)","title":"case entityType(EntityType, channelId: Snowflake?, location: String?, endTime: Date?)","type":"case"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/edit\/image(_:)","title":"case image(File?)","type":"case"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/edit\/privacylevel(_:)","title":"case privacyLevel(PrivacyLevel)","type":"case"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/edit\/starttime(_:)","title":"case startTime(Date)","type":"case"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/edit\/status(_:)","title":"case status(Status)","type":"case"}],"path":"\/documentation\/discord\/guild\/scheduledevent\/edit","title":"Guild.ScheduledEvent.Edit","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/entitytype-swift.enum\/external","title":"case external","type":"case"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/entitytype-swift.enum\/stageinstance","title":"case stageInstance","type":"case"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/entitytype-swift.enum\/voice","title":"case voice","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/entitytype-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/entitytype-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/guild\/scheduledevent\/entitytype-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/entitytype-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/entitytype-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/guild\/scheduledevent\/entitytype-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/guild\/scheduledevent\/entitytype-swift.enum","title":"Guild.ScheduledEvent.EntityType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/privacylevel-swift.enum\/guildonly","title":"case guildOnly","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/privacylevel-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/privacylevel-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/guild\/scheduledevent\/privacylevel-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/privacylevel-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/privacylevel-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/guild\/scheduledevent\/privacylevel-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/guild\/scheduledevent\/privacylevel-swift.enum","title":"Guild.ScheduledEvent.PrivacyLevel","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/status-swift.enum\/active","title":"case active","type":"case"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/status-swift.enum\/canceled","title":"case canceled","type":"case"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/status-swift.enum\/completed","title":"case completed","type":"case"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/status-swift.enum\/scheduled","title":"case scheduled","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/status-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/status-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/guild\/scheduledevent\/status-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/status-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/status-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/guild\/scheduledevent\/status-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/guild\/scheduledevent\/status-swift.enum","title":"Guild.ScheduledEvent.Status","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/scheduledevent\/created","title":"var created: Date","type":"property"}],"path":"\/documentation\/discord\/guild\/scheduledevent\/object-implementations","title":"Object Implementations","type":"symbol"}],"path":"\/documentation\/discord\/guild\/scheduledevent","title":"Guild.ScheduledEvent","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/template\/bot","title":"var bot: Discord?","type":"property"},{"path":"\/documentation\/discord\/guild\/template\/code","title":"let code: String","type":"property"},{"path":"\/documentation\/discord\/guild\/template\/createdat","title":"let createdAt: Date","type":"property"},{"path":"\/documentation\/discord\/guild\/template\/creator","title":"let creator: User","type":"property"},{"path":"\/documentation\/discord\/guild\/template\/creatorid","title":"let creatorId: Snowflake","type":"property"},{"path":"\/documentation\/discord\/guild\/template\/description","title":"let description: String?","type":"property"},{"path":"\/documentation\/discord\/guild\/template\/isdirty","title":"let isDirty: Bool?","type":"property"},{"path":"\/documentation\/discord\/guild\/template\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/discord\/guild\/template\/sourceguildid","title":"let sourceGuildId: Snowflake","type":"property"},{"path":"\/documentation\/discord\/guild\/template\/updatedat","title":"let updatedAt: Date","type":"property"},{"path":"\/documentation\/discord\/guild\/template\/url","title":"let url: String","type":"property"},{"path":"\/documentation\/discord\/guild\/template\/usagecount","title":"let usageCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/template\/delete()","title":"func delete() async throws","type":"method"},{"path":"\/documentation\/discord\/guild\/template\/edit(_:)","title":"func edit(Template.Edit...) async throws -> Template","type":"method"},{"path":"\/documentation\/discord\/guild\/template\/sync()","title":"func sync() async throws -> Template","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/template\/edit\/description(_:)","title":"case description(String?)","type":"case"},{"path":"\/documentation\/discord\/guild\/template\/edit\/name(_:)","title":"case name(String)","type":"case"}],"path":"\/documentation\/discord\/guild\/template\/edit","title":"Guild.Template.Edit","type":"enum"}],"path":"\/documentation\/discord\/guild\/template","title":"Guild.Template","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/welcomescreen\/description","title":"let description: String?","type":"property"},{"path":"\/documentation\/discord\/guild\/welcomescreen\/welcomechannels","title":"var welcomeChannels: [Guild.WelcomeScreenChannel]","type":"property"}],"path":"\/documentation\/discord\/guild\/welcomescreen","title":"Guild.WelcomeScreen","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/welcomescreenchannel\/init(channelid:description:emojiid:emojiname:)","title":"init(channelId: Snowflake, description: String?, emojiId: Snowflake?, emojiName: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/welcomescreenchannel\/channelid","title":"let channelId: Snowflake","type":"property"},{"path":"\/documentation\/discord\/guild\/welcomescreenchannel\/description","title":"let description: String","type":"property"},{"path":"\/documentation\/discord\/guild\/welcomescreenchannel\/emojiid","title":"let emojiId: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/guild\/welcomescreenchannel\/emojiname","title":"let emojiName: String?","type":"property"}],"path":"\/documentation\/discord\/guild\/welcomescreenchannel","title":"Guild.WelcomeScreenChannel","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/widget\/settings\/channelid","title":"let channelId: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/guild\/widget\/settings\/enabled","title":"let enabled: Bool","type":"property"}],"path":"\/documentation\/discord\/guild\/widget\/settings","title":"Guild.Widget.Settings","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/widget\/bot","title":"var bot: Discord?","type":"property"},{"path":"\/documentation\/discord\/guild\/widget\/channels","title":"var channels: [GuildChannel]","type":"property"},{"path":"\/documentation\/discord\/guild\/widget\/id","title":"let id: Snowflake","type":"property"},{"path":"\/documentation\/discord\/guild\/widget\/instantinvite","title":"let instantInvite: String?","type":"property"},{"path":"\/documentation\/discord\/guild\/widget\/members","title":"var members: [User]","type":"property"},{"path":"\/documentation\/discord\/guild\/widget\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/discord\/guild\/widget\/presencecount","title":"let presenceCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/widget\/edit(enabled:channelid:reason:)","title":"func edit(enabled: Bool, channelId: Snowflake?, reason: String?) async throws","type":"method"},{"path":"\/documentation\/discord\/guild\/widget\/settings()","title":"func settings() async throws -> Settings","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/widget\/created","title":"var created: Date","type":"property"}],"path":"\/documentation\/discord\/guild\/widget\/object-implementations","title":"Object Implementations","type":"symbol"}],"path":"\/documentation\/discord\/guild\/widget","title":"Guild.Widget","type":"struct"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/==(_:_:)","title":"static func == (Guild, Guild) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/afkchannelid","title":"var afkChannelId: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/guild\/afkchanneltimeout","title":"var afkChannelTimeout: Int","type":"property"},{"path":"\/documentation\/discord\/guild\/applicationid","title":"var applicationId: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/guild\/approximatemembercount","title":"var approximateMemberCount: Int?","type":"property"},{"path":"\/documentation\/discord\/guild\/approximatepresencecount","title":"var approximatePresenceCount: Int?","type":"property"},{"path":"\/documentation\/discord\/guild\/banner","title":"var banner: Asset?","type":"property"},{"path":"\/documentation\/discord\/guild\/bot","title":"var bot: Discord?","type":"property"},{"path":"\/documentation\/discord\/guild\/categories","title":"var categories: [CategoryChannel]","type":"property"},{"path":"\/documentation\/discord\/guild\/channels","title":"var channels: [GuildChannel]","type":"property"},{"path":"\/documentation\/discord\/guild\/defaultmessagenotifications","title":"var defaultMessageNotifications: MessageNotificationLevel","type":"property"},{"path":"\/documentation\/discord\/guild\/defaultrole","title":"var defaultRole: Role","type":"property"},{"path":"\/documentation\/discord\/guild\/description","title":"var description: String?","type":"property"},{"path":"\/documentation\/discord\/guild\/discoverysplash","title":"var discoverySplash: Asset?","type":"property"},{"path":"\/documentation\/discord\/guild\/emojis","title":"var emojis: Set<Emoji>","type":"property"},{"path":"\/documentation\/discord\/guild\/explicitcontentfilter","title":"var explicitContentFilter: ExplicitContentFilterLevel","type":"property"},{"path":"\/documentation\/discord\/guild\/features","title":"var features: [Guild.Feature]","type":"property"},{"path":"\/documentation\/discord\/guild\/forumchannels","title":"var forumChannels: [ForumChannel]","type":"property"},{"path":"\/documentation\/discord\/guild\/icon","title":"var icon: Asset?","type":"property"},{"path":"\/documentation\/discord\/guild\/id","title":"let id: Snowflake","type":"property"},{"path":"\/documentation\/discord\/guild\/isavailable","title":"var isAvailable: Bool","type":"property"},{"path":"\/documentation\/discord\/guild\/maxmembers","title":"var maxMembers: Int?","type":"property"},{"path":"\/documentation\/discord\/guild\/maxpresences","title":"var maxPresences: Int?","type":"property"},{"path":"\/documentation\/discord\/guild\/maxvideochannelusers","title":"var maxVideoChannelUsers: Int?","type":"property"},{"path":"\/documentation\/discord\/guild\/me","title":"var me: Member","type":"property"},{"path":"\/documentation\/discord\/guild\/mediachannels","title":"var mediaChannels: [MediaChannel]","type":"property"},{"path":"\/documentation\/discord\/guild\/members","title":"var members: [Member]","type":"property"},{"path":"\/documentation\/discord\/guild\/mfalevel-swift.property","title":"var mfaLevel: MFALevel","type":"property"},{"path":"\/documentation\/discord\/guild\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/discord\/guild\/nsfwlevel-swift.property","title":"var nsfwLevel: NSFWLevel","type":"property"},{"path":"\/documentation\/discord\/guild\/owner","title":"var owner: Member?","type":"property"},{"path":"\/documentation\/discord\/guild\/ownerid","title":"var ownerId: Snowflake","type":"property"},{"path":"\/documentation\/discord\/guild\/preferredlocale","title":"var preferredLocale: Locale","type":"property"},{"path":"\/documentation\/discord\/guild\/premiumprogressbarenabled","title":"var premiumProgressBarEnabled: Bool","type":"property"},{"path":"\/documentation\/discord\/guild\/premiumsubscriptioncount","title":"var premiumSubscriptionCount: Int?","type":"property"},{"path":"\/documentation\/discord\/guild\/premiumtier-swift.property","title":"var premiumTier: PremiumTier","type":"property"},{"path":"\/documentation\/discord\/guild\/publicupdateschannelid","title":"var publicUpdatesChannelId: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/guild\/roles","title":"var roles: [Role]","type":"property"},{"path":"\/documentation\/discord\/guild\/ruleschannelid","title":"var rulesChannelId: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/guild\/safetyalertschannelid","title":"var safetyAlertsChannelId: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/guild\/scheduledevents","title":"var scheduledEvents: [Guild.ScheduledEvent]","type":"property"},{"path":"\/documentation\/discord\/guild\/splash","title":"var splash: Asset?","type":"property"},{"path":"\/documentation\/discord\/guild\/stagechannels","title":"var stageChannels: [StageChannel]","type":"property"},{"path":"\/documentation\/discord\/guild\/stageinstances","title":"var stageInstances: [StageInstance]","type":"property"},{"path":"\/documentation\/discord\/guild\/stickers","title":"var stickers: [GuildSticker]","type":"property"},{"path":"\/documentation\/discord\/guild\/systemchannelflags-swift.property","title":"var systemChannelFlags: [Guild.SystemChannelFlags]","type":"property"},{"path":"\/documentation\/discord\/guild\/systemchannelid","title":"var systemChannelId: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/guild\/textchannels","title":"var textChannels: [TextChannel]","type":"property"},{"path":"\/documentation\/discord\/guild\/threads","title":"var threads: [ThreadChannel]","type":"property"},{"path":"\/documentation\/discord\/guild\/vanityurlcode","title":"var vanityUrlCode: String?","type":"property"},{"path":"\/documentation\/discord\/guild\/verificationlevel-swift.property","title":"var verificationLevel: VerificationLevel","type":"property"},{"path":"\/documentation\/discord\/guild\/voicechannels","title":"var voiceChannels: [VoiceChannel]","type":"property"},{"path":"\/documentation\/discord\/guild\/voicestates","title":"var voiceStates: [VoiceChannel.State]","type":"property"},{"path":"\/documentation\/discord\/guild\/widgetchannelid","title":"var widgetChannelId: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/guild\/widgetenabled","title":"var widgetEnabled: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/applicationcommandpermissions()","title":"func applicationCommandPermissions() async throws -> [GuildApplicationCommandPermissions]","type":"method"},{"path":"\/documentation\/discord\/guild\/applicationcommandpermissions(for:)","title":"func applicationCommandPermissions(for: Snowflake) async throws -> GuildApplicationCommandPermissions","type":"method"},{"path":"\/documentation\/discord\/guild\/applicationcommands()","title":"func applicationCommands() async throws -> [ApplicationCommand]","type":"method"},{"path":"\/documentation\/discord\/guild\/auditlogs(user:actiontype:limit:before:after:)","title":"func auditLogs(user: User?, actionType: AuditLog.Action?, limit: Int, before: Date?, after: Date?) async throws -> AuditLog","type":"method"},{"path":"\/documentation\/discord\/guild\/automoderationrules()","title":"func autoModerationRules() async throws -> [AutoModerationRule]","type":"method"},{"path":"\/documentation\/discord\/guild\/ban(user:deletemessageseconds:reason:)","title":"func ban(user: User, deleteMessageSeconds: Int, reason: String?) async throws","type":"method"},{"path":"\/documentation\/discord\/guild\/bans(limit:before:after:)","title":"func bans(limit: Int?, before: Date?, after: Date?) -> Guild.AsyncBans","type":"method"},{"path":"\/documentation\/discord\/guild\/createautomoderationrule(name:eventtype:triggertype:metadata:actions:enabled:exemptroles:exemptchannels:reason:)","title":"func createAutoModerationRule(name: String, eventType: AutoModerationRule.EventType, triggerType: AutoModerationRule.TriggerType, metadata: AutoModerationRule.Metadata?, actions: [AutoModerationRule.Action], enabled: Bool, exemptRoles: [Role]?, exemptChannels: [GuildChannelMessageable]?, reason: String?) async throws -> AutoModerationRule","type":"method"},{"path":"\/documentation\/discord\/guild\/createcategory(name:position:overwrites:reason:)","title":"func createCategory(name: String, position: Int?, overwrites: [PermissionOverwrites]?, reason: String?) async throws -> CategoryChannel","type":"method"},{"path":"\/documentation\/discord\/guild\/createemoji(name:file:roles:reason:)","title":"func createEmoji(name: String, file: File, roles: [Role]?, reason: String?) async throws -> Emoji","type":"method"},{"path":"\/documentation\/discord\/guild\/createforum(name:defaultthreadautoarchiveduration:defaultreactionemoji:topic:position:nsfw:overwrites:category:slowmode:threadcreationslowmode:availabletags:sortorder:layout:reason:)","title":"func createForum(name: String, defaultThreadAutoArchiveDuration: ThreadChannel.ArchiveDuration, defaultReactionEmoji: PartialEmoji?, topic: String?, position: Int?, nsfw: Bool, overwrites: [PermissionOverwrites]?, category: CategoryChannel?, slowmode: Int?, threadCreationSlowmode: Int?, availableTags: [ForumChannel.Tag]?, sortOrder: ForumChannel.SortOrder?, layout: ForumChannel.Layout, reason: String?) async throws -> ForumChannel","type":"method"},{"path":"\/documentation\/discord\/guild\/createrole(name:permissions:color:hoist:icon:emoji:mentionable:reason:)","title":"func createRole(name: String?, permissions: Permissions, color: Color?, hoist: Bool, icon: File?, emoji: String?, mentionable: Bool, reason: String?) async throws -> Role","type":"method"},{"path":"\/documentation\/discord\/guild\/createscheduledevent(name:entitytype:starttime:endtime:channelid:location:description:image:reason:)","title":"func createScheduledEvent(name: String, entityType: ScheduledEvent.EntityType, startTime: Date, endTime: Date?, channelId: Snowflake?, location: String?, description: String?, image: File?, reason: String?) async throws -> ScheduledEvent","type":"method"},{"path":"\/documentation\/discord\/guild\/createstagechannel(name:bitrate:position:overwrites:region:reason:)","title":"func createStageChannel(name: String, bitrate: Int, position: Int?, overwrites: [PermissionOverwrites]?, region: VoiceChannel.RtcRegion, reason: String?) async throws -> StageChannel","type":"method"},{"path":"\/documentation\/discord\/guild\/createsticker(name:description:emoji:file:reason:)","title":"func createSticker(name: String, description: String?, emoji: String, file: File, reason: String?) async throws -> GuildSticker","type":"method"},{"path":"\/documentation\/discord\/guild\/createtemplate(name:description:)","title":"func createTemplate(name: String, description: String?) async throws -> Template","type":"method"},{"path":"\/documentation\/discord\/guild\/createtextchannel(name:topic:category:slowmode:position:overwrites:nsfw:reason:)","title":"func createTextChannel(name: String, topic: String?, category: CategoryChannel?, slowmode: Int?, position: Int?, overwrites: [PermissionOverwrites]?, nsfw: Bool, reason: String?) async throws -> TextChannel","type":"method"},{"path":"\/documentation\/discord\/guild\/createvoicechannel(name:category:bitrate:userlimit:position:overwrites:region:quality:nsfw:reason:)","title":"func createVoiceChannel(name: String, category: CategoryChannel?, bitrate: Int, userLimit: Int?, position: Int?, overwrites: [PermissionOverwrites]?, region: VoiceChannel.RtcRegion, quality: VoiceChannel.VideoQualityMode, nsfw: Bool, reason: String?) async throws -> VoiceChannel","type":"method"},{"path":"\/documentation\/discord\/guild\/delete()","title":"func delete() async throws","type":"method"},{"path":"\/documentation\/discord\/guild\/edit(_:reason:)","title":"func edit(Guild.Edit..., reason: String?) async throws -> Guild","type":"method"},{"path":"\/documentation\/discord\/guild\/editrolepositions(_:reason:)","title":"func editRolePositions([Role : Int], reason: String?) async throws -> [Role]","type":"method"},{"path":"\/documentation\/discord\/guild\/editwelcomescreen(_:reason:)","title":"func editWelcomeScreen(WelcomeScreenEdit..., reason: String?) async throws -> WelcomeScreen","type":"method"},{"path":"\/documentation\/discord\/guild\/getchannel(_:)","title":"func getChannel(Snowflake) -> GuildChannel?","type":"method"},{"path":"\/documentation\/discord\/guild\/getemoji(_:)","title":"func getEmoji(Snowflake) -> Emoji?","type":"method"},{"path":"\/documentation\/discord\/guild\/getmember(_:)","title":"func getMember(Snowflake) -> Member?","type":"method"},{"path":"\/documentation\/discord\/guild\/getrole(_:)","title":"func getRole(Snowflake) -> Role?","type":"method"},{"path":"\/documentation\/discord\/guild\/getscheduledevent(_:)","title":"func getScheduledEvent(Snowflake) -> ScheduledEvent?","type":"method"},{"path":"\/documentation\/discord\/guild\/getstageinstance(_:)","title":"func getStageInstance(Snowflake) -> StageInstance?","type":"method"},{"path":"\/documentation\/discord\/guild\/getsticker(_:)","title":"func getSticker(Snowflake) -> GuildSticker?","type":"method"},{"path":"\/documentation\/discord\/guild\/getthread(_:)","title":"func getThread(Snowflake) -> ThreadChannel?","type":"method"},{"path":"\/documentation\/discord\/guild\/getvoicestate(_:)","title":"func getVoiceState(Snowflake) -> VoiceChannel.State?","type":"method"},{"path":"\/documentation\/discord\/guild\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"path":"\/documentation\/discord\/guild\/integrations()","title":"func integrations() async throws -> [Integration]","type":"method"},{"path":"\/documentation\/discord\/guild\/invites()","title":"func invites() async throws -> [Invite]","type":"method"},{"path":"\/documentation\/discord\/guild\/leave()","title":"func leave() async throws","type":"method"},{"path":"\/documentation\/discord\/guild\/onboarding()","title":"func onboarding() async throws -> Onboarding","type":"method"},{"path":"\/documentation\/discord\/guild\/preview()","title":"func preview() async throws -> Preview","type":"method"},{"path":"\/documentation\/discord\/guild\/prune(days:includeroles:computeprunecount:)","title":"func prune(days: Int, includeRoles: [Role]?, computePruneCount: Bool) async throws -> Int?","type":"method"},{"path":"\/documentation\/discord\/guild\/requestactivethreads()","title":"func requestActiveThreads() async throws -> [ThreadChannel]","type":"method"},{"path":"\/documentation\/discord\/guild\/requestallstickers()","title":"func requestAllStickers() async throws -> [GuildSticker]","type":"method"},{"path":"\/documentation\/discord\/guild\/requestautomoderationrule(_:)","title":"func requestAutoModerationRule(Snowflake) async throws -> AutoModerationRule","type":"method"},{"path":"\/documentation\/discord\/guild\/requestban(for:)","title":"func requestBan(for: Snowflake) async throws -> Guild.Ban","type":"method"},{"path":"\/documentation\/discord\/guild\/requestchannels()","title":"func requestChannels() async throws -> [GuildChannel]","type":"method"},{"path":"\/documentation\/discord\/guild\/requestemoji(_:)","title":"func requestEmoji(Snowflake) async throws -> Emoji","type":"method"},{"path":"\/documentation\/discord\/guild\/requestemojis()","title":"func requestEmojis() async throws -> [Emoji]","type":"method"},{"path":"\/documentation\/discord\/guild\/requestmember(_:)","title":"func requestMember(Snowflake) async throws -> Member","type":"method"},{"path":"\/documentation\/discord\/guild\/requestmembers(limit:after:)","title":"func requestMembers(limit: Int?, after: Date?) -> Guild.AsyncMembers?","type":"method"},{"path":"\/documentation\/discord\/guild\/requestroles()","title":"func requestRoles() async throws -> [Role]","type":"method"},{"path":"\/documentation\/discord\/guild\/requestscheduledevent(_:)","title":"func requestScheduledEvent(Snowflake) async throws -> ScheduledEvent","type":"method"},{"path":"\/documentation\/discord\/guild\/requestscheduledevents()","title":"func requestScheduledEvents() async throws -> [ScheduledEvent]","type":"method"},{"path":"\/documentation\/discord\/guild\/requeststicker(_:)","title":"func requestSticker(Snowflake) async throws -> GuildSticker","type":"method"},{"path":"\/documentation\/discord\/guild\/searchmembers(name:limit:)","title":"func searchMembers(name: String, limit: Int) async throws -> [Member]","type":"method"},{"path":"\/documentation\/discord\/guild\/templates()","title":"func templates() async throws -> [Template]","type":"method"},{"path":"\/documentation\/discord\/guild\/unban(userid:reason:)","title":"func unban(userId: Snowflake, reason: String?) async throws","type":"method"},{"path":"\/documentation\/discord\/guild\/vanityinvite()","title":"func vanityInvite() async throws -> Invite","type":"method"},{"path":"\/documentation\/discord\/guild\/webhooks()","title":"func webhooks() async throws -> [Webhook]","type":"method"},{"path":"\/documentation\/discord\/guild\/welcomescreen()","title":"func welcomeScreen() async throws -> WelcomeScreen","type":"method"},{"path":"\/documentation\/discord\/guild\/widget()","title":"func widget() async throws -> Widget","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/edit\/afkchannel(_:)","title":"case afkChannel(Snowflake?)","type":"case"},{"path":"\/documentation\/discord\/guild\/edit\/afktimeout(_:)","title":"case afkTimeout(Int)","type":"case"},{"path":"\/documentation\/discord\/guild\/edit\/banner(_:)","title":"case banner(File?)","type":"case"},{"path":"\/documentation\/discord\/guild\/edit\/community(ruleschannel:publicupdateschannel:)","title":"case community(rulesChannel: Snowflake?, publicUpdatesChannel: Snowflake?)","type":"case"},{"path":"\/documentation\/discord\/guild\/edit\/defaultmessagenotifications(_:)","title":"case defaultMessageNotifications(MessageNotificationLevel)","type":"case"},{"path":"\/documentation\/discord\/guild\/edit\/description(_:)","title":"case description(String?)","type":"case"},{"path":"\/documentation\/discord\/guild\/edit\/discoverable(_:)","title":"case discoverable(Bool)","type":"case"},{"path":"\/documentation\/discord\/guild\/edit\/discoverysplash(_:)","title":"case discoverySplash(File?)","type":"case"},{"path":"\/documentation\/discord\/guild\/edit\/explicitcontentfilter(_:)","title":"case explicitContentFilter(ExplicitContentFilterLevel)","type":"case"},{"path":"\/documentation\/discord\/guild\/edit\/icon(_:)","title":"case icon(File?)","type":"case"},{"path":"\/documentation\/discord\/guild\/edit\/invitesdisabled(_:)","title":"case invitesDisabled(Bool)","type":"case"},{"path":"\/documentation\/discord\/guild\/edit\/name(_:)","title":"case name(String)","type":"case"},{"path":"\/documentation\/discord\/guild\/edit\/owner(_:)","title":"case owner(Snowflake)","type":"case"},{"path":"\/documentation\/discord\/guild\/edit\/preferredlocale(_:)","title":"case preferredLocale(Locale)","type":"case"},{"path":"\/documentation\/discord\/guild\/edit\/premiumprogressbarenabled(_:)","title":"case premiumProgressBarEnabled(Bool)","type":"case"},{"path":"\/documentation\/discord\/guild\/edit\/publicupdateschannel(_:)","title":"case publicUpdatesChannel(Snowflake?)","type":"case"},{"path":"\/documentation\/discord\/guild\/edit\/raidalertsdisabled(_:)","title":"case raidAlertsDisabled(Bool)","type":"case"},{"path":"\/documentation\/discord\/guild\/edit\/ruleschannel(_:)","title":"case rulesChannel(Snowflake?)","type":"case"},{"path":"\/documentation\/discord\/guild\/edit\/safetyalertschannel(_:)","title":"case safetyAlertsChannel(Snowflake?)","type":"case"},{"path":"\/documentation\/discord\/guild\/edit\/splash(_:)","title":"case splash(File?)","type":"case"},{"path":"\/documentation\/discord\/guild\/edit\/systemchannel(_:)","title":"case systemChannel(Snowflake?)","type":"case"},{"path":"\/documentation\/discord\/guild\/edit\/systemchannelflags(_:)","title":"case systemChannelFlags([SystemChannelFlags])","type":"case"},{"path":"\/documentation\/discord\/guild\/edit\/verificationlevel(_:)","title":"case verificationLevel(VerificationLevel)","type":"case"}],"path":"\/documentation\/discord\/guild\/edit","title":"Guild.Edit","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/explicitcontentfilterlevel\/allmembers","title":"case allMembers","type":"case"},{"path":"\/documentation\/discord\/guild\/explicitcontentfilterlevel\/disabled","title":"case disabled","type":"case"},{"path":"\/documentation\/discord\/guild\/explicitcontentfilterlevel\/memberswithoutroles","title":"case membersWithoutRoles","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/explicitcontentfilterlevel\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/explicitcontentfilterlevel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/guild\/explicitcontentfilterlevel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/explicitcontentfilterlevel\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/explicitcontentfilterlevel\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/guild\/explicitcontentfilterlevel\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/guild\/explicitcontentfilterlevel","title":"Guild.ExplicitContentFilterLevel","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/feature\/animatedbanner","title":"case animatedBanner","type":"case"},{"path":"\/documentation\/discord\/guild\/feature\/animatedicon","title":"case animatedIcon","type":"case"},{"path":"\/documentation\/discord\/guild\/feature\/applicationcommandpermissionsv2","title":"case applicationCommandPermissionsV2","type":"case"},{"path":"\/documentation\/discord\/guild\/feature\/automoderation","title":"case autoModeration","type":"case"},{"path":"\/documentation\/discord\/guild\/feature\/banner","title":"case banner","type":"case"},{"path":"\/documentation\/discord\/guild\/feature\/community","title":"case community","type":"case"},{"path":"\/documentation\/discord\/guild\/feature\/creatormonetizableprovisional","title":"case creatorMonetizableProvisional","type":"case"},{"path":"\/documentation\/discord\/guild\/feature\/creatorstorepage","title":"case creatorStorePage","type":"case"},{"path":"\/documentation\/discord\/guild\/feature\/developersupportserver","title":"case developerSupportServer","type":"case"},{"path":"\/documentation\/discord\/guild\/feature\/discoverable","title":"case discoverable","type":"case"},{"path":"\/documentation\/discord\/guild\/feature\/featurable","title":"case featurable","type":"case"},{"path":"\/documentation\/discord\/guild\/feature\/invitesplash","title":"case inviteSplash","type":"case"},{"path":"\/documentation\/discord\/guild\/feature\/invitesdisabled","title":"case invitesDisabled","type":"case"},{"path":"\/documentation\/discord\/guild\/feature\/memberverificationgateenabled","title":"case memberVerificationGateEnabled","type":"case"},{"path":"\/documentation\/discord\/guild\/feature\/monetizationenabled","title":"case monetizationEnabled","type":"case"},{"path":"\/documentation\/discord\/guild\/feature\/morestickers","title":"case moreStickers","type":"case"},{"path":"\/documentation\/discord\/guild\/feature\/news","title":"case news","type":"case"},{"path":"\/documentation\/discord\/guild\/feature\/partnered","title":"case partnered","type":"case"},{"path":"\/documentation\/discord\/guild\/feature\/previewenabled","title":"case previewEnabled","type":"case"},{"path":"\/documentation\/discord\/guild\/feature\/privatethreads","title":"case privateThreads","type":"case"},{"path":"\/documentation\/discord\/guild\/feature\/raidalertsdisabled","title":"case raidAlertsDisabled","type":"case"},{"path":"\/documentation\/discord\/guild\/feature\/roleicons","title":"case roleIcons","type":"case"},{"path":"\/documentation\/discord\/guild\/feature\/rolesubscriptionsavailableforpurchase","title":"case roleSubscriptionsAvailableForPurchase","type":"case"},{"path":"\/documentation\/discord\/guild\/feature\/rolesubscriptionsenabled","title":"case roleSubscriptionsEnabled","type":"case"},{"path":"\/documentation\/discord\/guild\/feature\/textinvoiceenabled","title":"case textInVoiceEnabled","type":"case"},{"path":"\/documentation\/discord\/guild\/feature\/ticketedeventsenabled","title":"case ticketedEventsEnabled","type":"case"},{"path":"\/documentation\/discord\/guild\/feature\/vanityurl","title":"case vanityUrl","type":"case"},{"path":"\/documentation\/discord\/guild\/feature\/verified","title":"case verified","type":"case"},{"path":"\/documentation\/discord\/guild\/feature\/vipregions","title":"case vipRegions","type":"case"},{"path":"\/documentation\/discord\/guild\/feature\/welcomescreenenabled","title":"case welcomeScreenEnabled","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/feature\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/feature\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/guild\/feature\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/feature\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/feature\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/guild\/feature\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/guild\/feature","title":"Guild.Feature","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/mfalevel-swift.enum\/elevated","title":"case elevated","type":"case"},{"path":"\/documentation\/discord\/guild\/mfalevel-swift.enum\/none","title":"case none","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/mfalevel-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/mfalevel-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/guild\/mfalevel-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/mfalevel-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/mfalevel-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/guild\/mfalevel-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/guild\/mfalevel-swift.enum","title":"Guild.MFALevel","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/messagenotificationlevel\/allmessages","title":"case allMessages","type":"case"},{"path":"\/documentation\/discord\/guild\/messagenotificationlevel\/onlymentions","title":"case onlyMentions","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/messagenotificationlevel\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/messagenotificationlevel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/guild\/messagenotificationlevel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/messagenotificationlevel\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/messagenotificationlevel\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/guild\/messagenotificationlevel\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/guild\/messagenotificationlevel","title":"Guild.MessageNotificationLevel","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/nsfwlevel-swift.enum\/agerestricted","title":"case ageRestricted","type":"case"},{"path":"\/documentation\/discord\/guild\/nsfwlevel-swift.enum\/default","title":"case `default`","type":"case"},{"path":"\/documentation\/discord\/guild\/nsfwlevel-swift.enum\/explicit","title":"case explicit","type":"case"},{"path":"\/documentation\/discord\/guild\/nsfwlevel-swift.enum\/safe","title":"case safe","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/nsfwlevel-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/nsfwlevel-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/guild\/nsfwlevel-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/nsfwlevel-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/nsfwlevel-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/guild\/nsfwlevel-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/guild\/nsfwlevel-swift.enum","title":"Guild.NSFWLevel","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/premiumtier-swift.enum\/none","title":"case none","type":"case"},{"path":"\/documentation\/discord\/guild\/premiumtier-swift.enum\/tier1","title":"case tier1","type":"case"},{"path":"\/documentation\/discord\/guild\/premiumtier-swift.enum\/tier2","title":"case tier2","type":"case"},{"path":"\/documentation\/discord\/guild\/premiumtier-swift.enum\/tier3","title":"case tier3","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/premiumtier-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/premiumtier-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/guild\/premiumtier-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/premiumtier-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/premiumtier-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/guild\/premiumtier-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/guild\/premiumtier-swift.enum","title":"Guild.PremiumTier","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/systemchannelflags-swift.enum\/suppressguildremindernotifications","title":"case suppressGuildReminderNotifications","type":"case"},{"path":"\/documentation\/discord\/guild\/systemchannelflags-swift.enum\/suppressjoinnotificationreplies","title":"case suppressJoinNotificationReplies","type":"case"},{"path":"\/documentation\/discord\/guild\/systemchannelflags-swift.enum\/suppressjoinnotifications","title":"case suppressJoinNotifications","type":"case"},{"path":"\/documentation\/discord\/guild\/systemchannelflags-swift.enum\/suppresspremiumsubscriptions","title":"case suppressPremiumSubscriptions","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/systemchannelflags-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/systemchannelflags-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/guild\/systemchannelflags-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/systemchannelflags-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/systemchannelflags-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/guild\/systemchannelflags-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/guild\/systemchannelflags-swift.enum","title":"Guild.SystemChannelFlags","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/verificationlevel-swift.enum\/high","title":"case high","type":"case"},{"path":"\/documentation\/discord\/guild\/verificationlevel-swift.enum\/low","title":"case low","type":"case"},{"path":"\/documentation\/discord\/guild\/verificationlevel-swift.enum\/medium","title":"case medium","type":"case"},{"path":"\/documentation\/discord\/guild\/verificationlevel-swift.enum\/none","title":"case none","type":"case"},{"path":"\/documentation\/discord\/guild\/verificationlevel-swift.enum\/veryhigh","title":"case veryHigh","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/verificationlevel-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/verificationlevel-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/guild\/verificationlevel-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/verificationlevel-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/verificationlevel-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/guild\/verificationlevel-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/guild\/verificationlevel-swift.enum","title":"Guild.VerificationLevel","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/welcomescreenedit\/description(_:)","title":"case description(String?)","type":"case"},{"path":"\/documentation\/discord\/guild\/welcomescreenedit\/enabled(_:)","title":"case enabled(Bool)","type":"case"},{"path":"\/documentation\/discord\/guild\/welcomescreenedit\/welcomechannels(_:)","title":"case welcomeChannels([WelcomeScreenChannel])","type":"case"}],"path":"\/documentation\/discord\/guild\/welcomescreenedit","title":"Guild.WelcomeScreenEdit","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/guild\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/guild\/created","title":"var created: Date","type":"property"}],"path":"\/documentation\/discord\/guild\/object-implementations","title":"Object Implementations","type":"symbol"}],"path":"\/documentation\/discord\/guild","title":"Guild","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/interaction\/apppermissions","title":"let appPermissions: Permissions?","type":"property"},{"path":"\/documentation\/discord\/interaction\/applicationid","title":"let applicationId: Snowflake","type":"property"},{"path":"\/documentation\/discord\/interaction\/bot","title":"var bot: Discord?","type":"property"},{"path":"\/documentation\/discord\/interaction\/channel","title":"var channel: Channel?","type":"property"},{"path":"\/documentation\/discord\/interaction\/channelid","title":"let channelId: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/interaction\/data","title":"var data: InteractionData?","type":"property"},{"path":"\/documentation\/discord\/interaction\/followupmessageid","title":"var followupMessageId: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/interaction\/guild","title":"var guild: Guild?","type":"property"},{"path":"\/documentation\/discord\/interaction\/guildid","title":"let guildId: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/interaction\/id","title":"let id: Snowflake","type":"property"},{"path":"\/documentation\/discord\/interaction\/isfinished","title":"var isFinished: Bool","type":"property"},{"path":"\/documentation\/discord\/interaction\/message","title":"var message: Message?","type":"property"},{"path":"\/documentation\/discord\/interaction\/token","title":"let token: String","type":"property"},{"path":"\/documentation\/discord\/interaction\/type","title":"let type: InteractionType","type":"property"},{"path":"\/documentation\/discord\/interaction\/user","title":"let user: Object","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/interaction\/deletefollowupmessage()","title":"func deleteFollowupMessage() async throws","type":"method"},{"path":"\/documentation\/discord\/interaction\/deleteoriginalresponse()","title":"func deleteOriginalResponse() async throws","type":"method"},{"path":"\/documentation\/discord\/interaction\/editfollowupmessage(_:embeds:allowedmentions:ui:files:)","title":"func editFollowupMessage(String?, embeds: [Embed]?, allowedMentions: AllowedMentions, ui: UI?, files: [File]?) async throws -> Message?","type":"method"},{"path":"\/documentation\/discord\/interaction\/editoriginalresponse(_:embeds:allowedmentions:ui:files:)","title":"func editOriginalResponse(String?, embeds: [Embed]?, allowedMentions: AllowedMentions, ui: UI?, files: [File]?) async throws -> Message","type":"method"},{"path":"\/documentation\/discord\/interaction\/followupwithmessage(_:embeds:tts:allowedmentions:ui:files:)","title":"func followupWithMessage(String?, embeds: [Embed]?, tts: Bool, allowedMentions: AllowedMentions, ui: UI?, files: [File]?) async throws -> Message","type":"method"},{"path":"\/documentation\/discord\/interaction\/getfollowupmessage()","title":"func getFollowupMessage() async throws -> Message?","type":"method"},{"path":"\/documentation\/discord\/interaction\/originalresponse()","title":"func originalResponse() async throws -> Message","type":"method"},{"path":"\/documentation\/discord\/interaction\/respondwithautocomplete(choices:)","title":"func respondWithAutocomplete(choices: [ApplicationCommandOptionChoice]) async throws","type":"method"},{"path":"\/documentation\/discord\/interaction\/respondwithdefer()","title":"func respondWithDefer() async throws","type":"method"},{"path":"\/documentation\/discord\/interaction\/respondwithmessage(_:embeds:tts:allowedmentions:ephemeral:ui:files:)","title":"func respondWithMessage(String?, embeds: [Embed]?, tts: Bool, allowedMentions: AllowedMentions, ephemeral: Bool, ui: UI?, files: [File]?) async throws -> Message","type":"method"},{"path":"\/documentation\/discord\/interaction\/respondwithmodal(_:)","title":"func respondWithModal(Modal) async throws","type":"method"},{"path":"\/documentation\/discord\/interaction\/respondwithpong()","title":"func respondWithPong() async throws","type":"method"},{"path":"\/documentation\/discord\/interaction\/respondwiththinking(ephemeral:)","title":"func respondWithThinking(ephemeral: Bool) async throws","type":"method"}],"path":"\/documentation\/discord\/interaction","title":"Interaction","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/invite\/bot","title":"var bot: Discord?","type":"property"},{"path":"\/documentation\/discord\/invite\/createdat","title":"let createdAt: Date","type":"property"},{"path":"\/documentation\/discord\/invite\/guildscheduledevent","title":"var guildScheduledEvent: Guild.ScheduledEvent?","type":"property"},{"path":"\/documentation\/discord\/invite\/maxage","title":"let maxAge: Int","type":"property"},{"path":"\/documentation\/discord\/invite\/maxuses","title":"let maxUses: Int","type":"property"},{"path":"\/documentation\/discord\/invite\/temporary","title":"let temporary: Bool","type":"property"},{"path":"\/documentation\/discord\/invite\/uses","title":"let uses: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/invite\/delete(reason:)","title":"func delete(reason: String?) async throws","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/invite\/infinite","title":"static let infinite: Int","type":"property"},{"path":"\/documentation\/discord\/invite\/sevendays","title":"static let sevenDays: Int","type":"property"},{"path":"\/documentation\/discord\/invite\/threedays","title":"static let threeDays: Int","type":"property"},{"path":"\/documentation\/discord\/invite\/twentyfourhours","title":"static let twentyFourHours: Int","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/invite\/target\/embeddedapplication","title":"case embeddedApplication","type":"case"},{"path":"\/documentation\/discord\/invite\/target\/stream","title":"case stream","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/invite\/target\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/invite\/target\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/invite\/target\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/invite\/target\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/invite\/target\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/invite\/target\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/invite\/target","title":"Invite.Target","type":"enum"}],"path":"\/documentation\/discord\/invite","title":"Invite","type":"class"},{"path":"\/documentation\/discord\/mediachannel","title":"MediaChannel","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/member\/==(_:_:)","title":"static func == (Member, Member) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/member\/bot","title":"var bot: Discord?","type":"property"},{"path":"\/documentation\/discord\/member\/flags","title":"var flags: [Flag]","type":"property"},{"path":"\/documentation\/discord\/member\/guild","title":"var guild: Guild","type":"property"},{"path":"\/documentation\/discord\/member\/guildavatar","title":"var guildAvatar: Asset?","type":"property"},{"path":"\/documentation\/discord\/member\/id","title":"var id: Snowflake","type":"property"},{"path":"\/documentation\/discord\/member\/ispending","title":"var isPending: Bool?","type":"property"},{"path":"\/documentation\/discord\/member\/joinedat","title":"var joinedAt: Date","type":"property"},{"path":"\/documentation\/discord\/member\/mutualguilds","title":"var mutualGuilds: [Guild]","type":"property"},{"path":"\/documentation\/discord\/member\/nick","title":"var nick: String?","type":"property"},{"path":"\/documentation\/discord\/member\/premiumsince","title":"var premiumSince: Date?","type":"property"},{"path":"\/documentation\/discord\/member\/roles","title":"var roles: [Role]","type":"property"},{"path":"\/documentation\/discord\/member\/timedoutuntil","title":"var timedOutUntil: Date?","type":"property"},{"path":"\/documentation\/discord\/member\/user","title":"var user: User?","type":"property"},{"path":"\/documentation\/discord\/member\/voice","title":"var voice: VoiceChannel.State?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/member\/addroles(_:reason:)","title":"func addRoles([Role], reason: String?) async throws","type":"method"},{"path":"\/documentation\/discord\/member\/ban(deletemessageseconds:reason:)","title":"func ban(deleteMessageSeconds: Int, reason: String?) async throws","type":"method"},{"path":"\/documentation\/discord\/member\/edit(_:reason:)","title":"func edit(Edit..., reason: String?) async throws -> Member","type":"method"},{"path":"\/documentation\/discord\/member\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"path":"\/documentation\/discord\/member\/kick(reason:)","title":"func kick(reason: String?) async throws","type":"method"},{"path":"\/documentation\/discord\/member\/removeroles(_:reason:)","title":"func removeRoles([Role], reason: String?) async throws","type":"method"},{"path":"\/documentation\/discord\/member\/timeout(until:reason:)","title":"func timeout(until: Date?, reason: String?) async throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/member\/edit\/bypassverification(_:)","title":"case bypassVerification(Bool)","type":"case"},{"path":"\/documentation\/discord\/member\/edit\/deafen(_:)","title":"case deafen(Bool)","type":"case"},{"path":"\/documentation\/discord\/member\/edit\/move(_:)","title":"case move(GuildChannel?)","type":"case"},{"path":"\/documentation\/discord\/member\/edit\/mute(_:)","title":"case mute(Bool)","type":"case"},{"path":"\/documentation\/discord\/member\/edit\/nickname(_:)","title":"case nickname(String?)","type":"case"},{"path":"\/documentation\/discord\/member\/edit\/roles(_:)","title":"case roles([Role])","type":"case"},{"path":"\/documentation\/discord\/member\/edit\/timeout(_:)","title":"case timeout(Date?)","type":"case"}],"path":"\/documentation\/discord\/member\/edit","title":"Member.Edit","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/member\/flag\/bypassesverification","title":"case bypassesVerification","type":"case"},{"path":"\/documentation\/discord\/member\/flag\/completedonboarding","title":"case completedonboarding","type":"case"},{"path":"\/documentation\/discord\/member\/flag\/didrejoin","title":"case didRejoin","type":"case"},{"path":"\/documentation\/discord\/member\/flag\/startedonboarding","title":"case startedOnboarding","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/member\/flag\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/member\/flag\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/member\/flag\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/member\/flag\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/member\/flag\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/member\/flag\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/member\/flag","title":"Member.Flag","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/member\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/member\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/member\/created","title":"var created: Date","type":"property"}],"path":"\/documentation\/discord\/member\/object-implementations","title":"Object Implementations","type":"symbol"}],"path":"\/documentation\/discord\/member","title":"Member","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/message\/activity-swift.struct\/partyid","title":"let partyId: String?","type":"property"},{"path":"\/documentation\/discord\/message\/activity-swift.struct\/type","title":"let type: ActivityType","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/message\/activity-swift.struct\/activitytype\/join","title":"case join","type":"case"},{"path":"\/documentation\/discord\/message\/activity-swift.struct\/activitytype\/joinrequest","title":"case joinRequest","type":"case"},{"path":"\/documentation\/discord\/message\/activity-swift.struct\/activitytype\/listen","title":"case listen","type":"case"},{"path":"\/documentation\/discord\/message\/activity-swift.struct\/activitytype\/spectate","title":"case spectate","type":"case"},{"path":"\/documentation\/discord\/message\/activity-swift.struct\/activitytype\/unknown","title":"case unknown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/message\/activity-swift.struct\/activitytype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/message\/activity-swift.struct\/activitytype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/message\/activity-swift.struct\/activitytype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/message\/activity-swift.struct\/activitytype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/message\/activity-swift.struct\/activitytype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/message\/activity-swift.struct\/activitytype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/message\/activity-swift.struct\/activitytype","title":"Message.Activity.ActivityType","type":"enum"}],"path":"\/documentation\/discord\/message\/activity-swift.struct","title":"Message.Activity","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/message\/attachment\/contenttype","title":"let contentType: String?","type":"property"},{"path":"\/documentation\/discord\/message\/attachment\/description","title":"let description: String?","type":"property"},{"path":"\/documentation\/discord\/message\/attachment\/ephemeral","title":"let ephemeral: Bool","type":"property"},{"path":"\/documentation\/discord\/message\/attachment\/filename","title":"let filename: String","type":"property"},{"path":"\/documentation\/discord\/message\/attachment\/height","title":"let height: Int?","type":"property"},{"path":"\/documentation\/discord\/message\/attachment\/id","title":"let id: Snowflake","type":"property"},{"path":"\/documentation\/discord\/message\/attachment\/proxyurl","title":"let proxyUrl: String","type":"property"},{"path":"\/documentation\/discord\/message\/attachment\/size","title":"let size: Int","type":"property"},{"path":"\/documentation\/discord\/message\/attachment\/spoiler","title":"let spoiler: Bool","type":"property"},{"path":"\/documentation\/discord\/message\/attachment\/url","title":"let url: String","type":"property"},{"path":"\/documentation\/discord\/message\/attachment\/width","title":"let width: Int?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/message\/attachment\/download()","title":"func download() async throws -> File?","type":"method"}],"path":"\/documentation\/discord\/message\/attachment\/downloadable-implementations","title":"Downloadable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/message\/attachment","title":"Message.Attachment","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/message\/interaction-swift.struct\/id","title":"let id: Snowflake","type":"property"},{"path":"\/documentation\/discord\/message\/interaction-swift.struct\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/discord\/message\/interaction-swift.struct\/type","title":"let type: InteractionType","type":"property"},{"path":"\/documentation\/discord\/message\/interaction-swift.struct\/user","title":"let user: Object","type":"property"}],"path":"\/documentation\/discord\/message\/interaction-swift.struct","title":"Message.Interaction","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/message\/reference-swift.struct\/channelid","title":"let channelId: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/message\/reference-swift.struct\/failifnotexists","title":"var failIfNotExists: Bool","type":"property"},{"path":"\/documentation\/discord\/message\/reference-swift.struct\/guildid","title":"let guildId: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/message\/reference-swift.struct\/messageid","title":"let messageId: Snowflake?","type":"property"}],"path":"\/documentation\/discord\/message\/reference-swift.struct","title":"Message.Reference","type":"struct"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/message\/==(_:_:)","title":"static func == (Message, Message) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/message\/activity-swift.property","title":"var activity: Activity?","type":"property"},{"path":"\/documentation\/discord\/message\/application","title":"var application: Application?","type":"property"},{"path":"\/documentation\/discord\/message\/applicationid","title":"var applicationId: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/message\/asreference","title":"var asReference: Reference","type":"property"},{"path":"\/documentation\/discord\/message\/attachments","title":"var attachments: [Message.Attachment]","type":"property"},{"path":"\/documentation\/discord\/message\/author","title":"let author: User","type":"property"},{"path":"\/documentation\/discord\/message\/bot","title":"var bot: Discord?","type":"property"},{"path":"\/documentation\/discord\/message\/channel","title":"var channel: Messageable","type":"property"},{"path":"\/documentation\/discord\/message\/content","title":"var content: String","type":"property"},{"path":"\/documentation\/discord\/message\/createdat","title":"let createdAt: Date","type":"property"},{"path":"\/documentation\/discord\/message\/embeds","title":"var embeds: [Embed]","type":"property"},{"path":"\/documentation\/discord\/message\/flags-swift.property","title":"var flags: [Message.Flags]","type":"property"},{"path":"\/documentation\/discord\/message\/guild","title":"var guild: Guild?","type":"property"},{"path":"\/documentation\/discord\/message\/id","title":"let id: Snowflake","type":"property"},{"path":"\/documentation\/discord\/message\/interaction-swift.property","title":"var interaction: Message.Interaction?","type":"property"},{"path":"\/documentation\/discord\/message\/isdmmessage","title":"var isDmMessage: Bool","type":"property"},{"path":"\/documentation\/discord\/message\/isephemeral","title":"var isEphemeral: Bool","type":"property"},{"path":"\/documentation\/discord\/message\/ispinned","title":"var isPinned: Bool","type":"property"},{"path":"\/documentation\/discord\/message\/jumpurl","title":"var jumpUrl: String","type":"property"},{"path":"\/documentation\/discord\/message\/lastedited","title":"var lastEdited: Date?","type":"property"},{"path":"\/documentation\/discord\/message\/member","title":"var member: Member?","type":"property"},{"path":"\/documentation\/discord\/message\/mention","title":"var mention: String","type":"property"},{"path":"\/documentation\/discord\/message\/mentionedchannels","title":"var mentionedChannels: [GuildChannel]","type":"property"},{"path":"\/documentation\/discord\/message\/mentionedeveryone","title":"let mentionedEveryone: Bool","type":"property"},{"path":"\/documentation\/discord\/message\/mentionedroles","title":"var mentionedRoles: [Role]","type":"property"},{"path":"\/documentation\/discord\/message\/mentionedusers","title":"var mentionedUsers: [User]","type":"property"},{"path":"\/documentation\/discord\/message\/reactions","title":"var reactions: [Reaction]","type":"property"},{"path":"\/documentation\/discord\/message\/reference-swift.property","title":"var reference: Reference?","type":"property"},{"path":"\/documentation\/discord\/message\/referencedmessage","title":"var referencedMessage: Message?","type":"property"},{"path":"\/documentation\/discord\/message\/stickers","title":"var stickers: [Sticker.Item]","type":"property"},{"path":"\/documentation\/discord\/message\/thread","title":"var thread: ThreadChannel?","type":"property"},{"path":"\/documentation\/discord\/message\/tts","title":"let tts: Bool","type":"property"},{"path":"\/documentation\/discord\/message\/type","title":"let type: MessageType","type":"property"},{"path":"\/documentation\/discord\/message\/ui","title":"var ui: UI?","type":"property"},{"path":"\/documentation\/discord\/message\/webhookid","title":"let webhookId: Snowflake?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/message\/addreaction(_:)","title":"func addReaction(String) async throws","type":"method"},{"path":"\/documentation\/discord\/message\/createthread(name:autoarchiveduration:slowmode:reason:)","title":"func createThread(name: String, autoArchiveDuration: ThreadChannel.ArchiveDuration, slowmode: Int?, reason: String?) async throws -> ThreadChannel","type":"method"},{"path":"\/documentation\/discord\/message\/delete(after:reason:)","title":"func delete(after: TimeInterval, reason: String?) async throws","type":"method"},{"path":"\/documentation\/discord\/message\/edit(_:keeping:)","title":"func edit(Message.Edit..., keeping: [Attachment]?) async throws -> Message","type":"method"},{"path":"\/documentation\/discord\/message\/getreaction(_:)","title":"func getReaction(String) -> Reaction?","type":"method"},{"path":"\/documentation\/discord\/message\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"path":"\/documentation\/discord\/message\/pin(reason:)","title":"func pin(reason: String?) async throws","type":"method"},{"path":"\/documentation\/discord\/message\/publish()","title":"func publish() async throws","type":"method"},{"path":"\/documentation\/discord\/message\/removeallreactions(emoji:)","title":"func removeAllReactions(emoji: String?) async throws","type":"method"},{"path":"\/documentation\/discord\/message\/removereaction(emoji:by:)","title":"func removeReaction(emoji: String, by: User) async throws","type":"method"},{"path":"\/documentation\/discord\/message\/reply(_:tts:embeds:allowedmentions:ui:files:)","title":"func reply(String?, tts: Bool, embeds: [Embed]?, allowedMentions: AllowedMentions, ui: UI?, files: [File]?) async throws -> Message","type":"method"},{"path":"\/documentation\/discord\/message\/unpin(reason:)","title":"func unpin(reason: String?) async throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/message\/edit\/allowedmentions(_:)","title":"case allowedMentions(AllowedMentions)","type":"case"},{"path":"\/documentation\/discord\/message\/edit\/content(_:)","title":"case content(String?)","type":"case"},{"path":"\/documentation\/discord\/message\/edit\/embeds(_:)","title":"case embeds([Embed]?)","type":"case"},{"path":"\/documentation\/discord\/message\/edit\/files(_:)","title":"case files([File])","type":"case"},{"path":"\/documentation\/discord\/message\/edit\/ui(_:)","title":"case ui(UI)","type":"case"}],"path":"\/documentation\/discord\/message\/edit","title":"Message.Edit","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/message\/flags-swift.enum\/crossposted","title":"case crossposted","type":"case"},{"path":"\/documentation\/discord\/message\/flags-swift.enum\/ephemeral","title":"case ephemeral","type":"case"},{"path":"\/documentation\/discord\/message\/flags-swift.enum\/failedtomentionsomerolesinthread","title":"case failedToMentionSomeRolesInThread","type":"case"},{"path":"\/documentation\/discord\/message\/flags-swift.enum\/hasthread","title":"case hasThread","type":"case"},{"path":"\/documentation\/discord\/message\/flags-swift.enum\/iscrosspost","title":"case isCrosspost","type":"case"},{"path":"\/documentation\/discord\/message\/flags-swift.enum\/isvoicemessage","title":"case isVoiceMessage","type":"case"},{"path":"\/documentation\/discord\/message\/flags-swift.enum\/loading","title":"case loading","type":"case"},{"path":"\/documentation\/discord\/message\/flags-swift.enum\/sourcemessagedeleted","title":"case sourceMessageDeleted","type":"case"},{"path":"\/documentation\/discord\/message\/flags-swift.enum\/suppressembeds","title":"case suppressEmbeds","type":"case"},{"path":"\/documentation\/discord\/message\/flags-swift.enum\/suppressnotifications","title":"case suppressNotifications","type":"case"},{"path":"\/documentation\/discord\/message\/flags-swift.enum\/urgent","title":"case urgent","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/message\/flags-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/message\/flags-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/message\/flags-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/message\/flags-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/message\/flags-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/message\/flags-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/message\/flags-swift.enum","title":"Message.Flags","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/message\/history\/after(_:)","title":"case after(Snowflake)","type":"case"},{"path":"\/documentation\/discord\/message\/history\/around(_:)","title":"case around(Snowflake)","type":"case"},{"path":"\/documentation\/discord\/message\/history\/before(_:)","title":"case before(Snowflake)","type":"case"}],"path":"\/documentation\/discord\/message\/history","title":"Message.History","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/message\/messagetype\/automoderationaction","title":"case autoModerationAction","type":"case"},{"path":"\/documentation\/discord\/message\/messagetype\/call","title":"case call","type":"case"},{"path":"\/documentation\/discord\/message\/messagetype\/channelfollowadd","title":"case channelFollowAdd","type":"case"},{"path":"\/documentation\/discord\/message\/messagetype\/channeliconchange","title":"case channelIconChange","type":"case"},{"path":"\/documentation\/discord\/message\/messagetype\/channelnamechange","title":"case channelNameChange","type":"case"},{"path":"\/documentation\/discord\/message\/messagetype\/channelpinnedmessage","title":"case channelPinnedMessage","type":"case"},{"path":"\/documentation\/discord\/message\/messagetype\/chatinputcommand","title":"case chatInputCommand","type":"case"},{"path":"\/documentation\/discord\/message\/messagetype\/contextmenucommand","title":"case contextMenuCommand","type":"case"},{"path":"\/documentation\/discord\/message\/messagetype\/default","title":"case `default`","type":"case"},{"path":"\/documentation\/discord\/message\/messagetype\/guildapplicationpremiumsubscription","title":"case guildApplicationPremiumSubscription","type":"case"},{"path":"\/documentation\/discord\/message\/messagetype\/guilddiscoverydisqualified","title":"case guildDiscoveryDisqualified","type":"case"},{"path":"\/documentation\/discord\/message\/messagetype\/guilddiscoverygraceperiodfinalwarning","title":"case guildDiscoveryGracePeriodFinalWarning","type":"case"},{"path":"\/documentation\/discord\/message\/messagetype\/guilddiscoverygraceperiodinitialwarning","title":"case guildDiscoveryGracePeriodInitialWarning","type":"case"},{"path":"\/documentation\/discord\/message\/messagetype\/guilddiscoveryrequalified","title":"case guildDiscoveryRequalified","type":"case"},{"path":"\/documentation\/discord\/message\/messagetype\/guildinvitereminder","title":"case guildInviteReminder","type":"case"},{"path":"\/documentation\/discord\/message\/messagetype\/guildmemberjoin","title":"case guildMemberJoin","type":"case"},{"path":"\/documentation\/discord\/message\/messagetype\/interactionpremiumupsell","title":"case interactionPremiumUpsell","type":"case"},{"path":"\/documentation\/discord\/message\/messagetype\/recipientadd","title":"case recipientAdd","type":"case"},{"path":"\/documentation\/discord\/message\/messagetype\/recipientremove","title":"case recipientRemove","type":"case"},{"path":"\/documentation\/discord\/message\/messagetype\/reply","title":"case reply","type":"case"},{"path":"\/documentation\/discord\/message\/messagetype\/rolesubscriptionpurchase","title":"case roleSubscriptionPurchase","type":"case"},{"path":"\/documentation\/discord\/message\/messagetype\/stageend","title":"case stageEnd","type":"case"},{"path":"\/documentation\/discord\/message\/messagetype\/stagespeaker","title":"case stageSpeaker","type":"case"},{"path":"\/documentation\/discord\/message\/messagetype\/stagestart","title":"case stageStart","type":"case"},{"path":"\/documentation\/discord\/message\/messagetype\/stagetopic","title":"case stageTopic","type":"case"},{"path":"\/documentation\/discord\/message\/messagetype\/threadcreated","title":"case threadCreated","type":"case"},{"path":"\/documentation\/discord\/message\/messagetype\/threadstartermessage","title":"case threadStarterMessage","type":"case"},{"path":"\/documentation\/discord\/message\/messagetype\/userpremiumguildsubscription","title":"case userPremiumGuildSubscription","type":"case"},{"path":"\/documentation\/discord\/message\/messagetype\/userpremiumguildsubscriptiontier1","title":"case userPremiumGuildSubscriptionTier1","type":"case"},{"path":"\/documentation\/discord\/message\/messagetype\/userpremiumguildsubscriptiontier2","title":"case userPremiumGuildSubscriptionTier2","type":"case"},{"path":"\/documentation\/discord\/message\/messagetype\/userpremiumguildsubscriptiontier3","title":"case userPremiumGuildSubscriptionTier3","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/message\/messagetype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/message\/messagetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/message\/messagetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/message\/messagetype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/message\/messagetype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/message\/messagetype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/message\/messagetype","title":"Message.MessageType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/message\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/message\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/message\/created","title":"var created: Date","type":"property"}],"path":"\/documentation\/discord\/message\/object-implementations","title":"Object Implementations","type":"symbol"}],"path":"\/documentation\/discord\/message","title":"Message","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/partialinvite\/approximatemembercount","title":"let approximateMemberCount: Int?","type":"property"},{"path":"\/documentation\/discord\/partialinvite\/approximatepresencecount","title":"let approximatePresenceCount: Int?","type":"property"},{"path":"\/documentation\/discord\/partialinvite\/channel","title":"var channel: PartialInviteChannel?","type":"property"},{"path":"\/documentation\/discord\/partialinvite\/code","title":"let code: String","type":"property"},{"path":"\/documentation\/discord\/partialinvite\/expiresat","title":"var expiresAt: Date?","type":"property"},{"path":"\/documentation\/discord\/partialinvite\/guild","title":"var guild: PartialInviteGuild?","type":"property"},{"path":"\/documentation\/discord\/partialinvite\/inviter","title":"var inviter: User?","type":"property"},{"path":"\/documentation\/discord\/partialinvite\/targettype","title":"var targetType: Invite.Target?","type":"property"},{"path":"\/documentation\/discord\/partialinvite\/targetuser","title":"var targetUser: User?","type":"property"},{"path":"\/documentation\/discord\/partialinvite\/url","title":"let url: String","type":"property"}],"path":"\/documentation\/discord\/partialinvite","title":"PartialInvite","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/permissions\/init(_:)","title":"init([Permission : Bool])","type":"init"},{"path":"\/documentation\/discord\/permissions\/init(enable:)","title":"init(enable: Set<Permission>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/permissions\/disabled","title":"var disabled: [Permission]","type":"property"},{"path":"\/documentation\/discord\/permissions\/enabled","title":"var enabled: [Permission]","type":"property"},{"path":"\/documentation\/discord\/permissions\/value","title":"let value: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/permissions\/default","title":"static let `default`: Permissions","type":"property"},{"path":"\/documentation\/discord\/permissions\/none","title":"static let none: Permissions","type":"property"}],"path":"\/documentation\/discord\/permissions","title":"Permissions","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/reaction\/asyncusers\/makeasynciterator()","title":"func makeAsyncIterator() -> AsyncUsers","type":"method"},{"path":"\/documentation\/discord\/reaction\/asyncusers\/next()","title":"func next() async throws -> Element?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/discord\/reaction\/asyncusers\/element","title":"Reaction.AsyncUsers.Element","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/reaction\/asyncusers\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/discord\/reaction\/asyncusers\/compactmap(_:)-2mdp4","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/discord\/reaction\/asyncusers\/compactmap(_:)-6uwp","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/discord\/reaction\/asyncusers\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/discord\/reaction\/asyncusers\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/discord\/reaction\/asyncusers\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/discord\/reaction\/asyncusers\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/discord\/reaction\/asyncusers\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/discord\/reaction\/asyncusers\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/discord\/reaction\/asyncusers\/flatmap(_:)-580hu","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/discord\/reaction\/asyncusers\/flatmap(_:)-7hiq7","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/discord\/reaction\/asyncusers\/map(_:)-2jich","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/discord\/reaction\/asyncusers\/map(_:)-83ryo","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/discord\/reaction\/asyncusers\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/discord\/reaction\/asyncusers\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/discord\/reaction\/asyncusers\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/discord\/reaction\/asyncusers\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/discord\/reaction\/asyncusers\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/discord\/reaction\/asyncusers\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"}],"path":"\/documentation\/discord\/reaction\/asyncusers\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/discord\/reaction\/asyncusers","title":"Reaction.AsyncUsers","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/reaction\/bot","title":"var bot: Discord?","type":"property"},{"path":"\/documentation\/discord\/reaction\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/discord\/reaction\/emoji","title":"let emoji: PartialEmoji","type":"property"},{"path":"\/documentation\/discord\/reaction\/message","title":"let message: Message","type":"property"},{"path":"\/documentation\/discord\/reaction\/userreacted","title":"var userReacted: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/reaction\/users(limit:after:)","title":"func users(limit: Int?, after: Date?) -> AsyncUsers","type":"method"}],"path":"\/documentation\/discord\/reaction","title":"Reaction","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/role\/tag\/botid","title":"let botId: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/role\/tag\/integrationid","title":"let integrationId: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/role\/tag\/ispremiumsubscriber","title":"let isPremiumSubscriber: Bool","type":"property"}],"path":"\/documentation\/discord\/role\/tag","title":"Role.Tag","type":"struct"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/role\/==(_:_:)","title":"static func == (Role, Role) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/role\/bot","title":"var bot: Discord?","type":"property"},{"path":"\/documentation\/discord\/role\/color","title":"var color: Color?","type":"property"},{"path":"\/documentation\/discord\/role\/guild","title":"var guild: Guild","type":"property"},{"path":"\/documentation\/discord\/role\/hoist","title":"var hoist: Bool","type":"property"},{"path":"\/documentation\/discord\/role\/icon","title":"var icon: Asset?","type":"property"},{"path":"\/documentation\/discord\/role\/id","title":"let id: Snowflake","type":"property"},{"path":"\/documentation\/discord\/role\/managed","title":"let managed: Bool","type":"property"},{"path":"\/documentation\/discord\/role\/members","title":"var members: [Member]","type":"property"},{"path":"\/documentation\/discord\/role\/mention","title":"let mention: String","type":"property"},{"path":"\/documentation\/discord\/role\/mentionable","title":"var mentionable: Bool","type":"property"},{"path":"\/documentation\/discord\/role\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/discord\/role\/permissions","title":"var permissions: Permissions","type":"property"},{"path":"\/documentation\/discord\/role\/position","title":"var position: Int","type":"property"},{"path":"\/documentation\/discord\/role\/tags","title":"var tags: Tag?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/role\/delete(reason:)","title":"func delete(reason: String?) async throws","type":"method"},{"path":"\/documentation\/discord\/role\/edit(_:reason:)","title":"func edit(Edit..., reason: String?) async throws -> Role","type":"method"},{"path":"\/documentation\/discord\/role\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/role\/edit\/color(_:)","title":"case color(Color?)","type":"case"},{"path":"\/documentation\/discord\/role\/edit\/hoist(_:)","title":"case hoist(Bool)","type":"case"},{"path":"\/documentation\/discord\/role\/edit\/icon(_:)","title":"case icon(File?)","type":"case"},{"path":"\/documentation\/discord\/role\/edit\/mentionable(_:)","title":"case mentionable(Bool)","type":"case"},{"path":"\/documentation\/discord\/role\/edit\/name(_:)","title":"case name(String)","type":"case"},{"path":"\/documentation\/discord\/role\/edit\/permissions(_:)","title":"case permissions(Permissions)","type":"case"}],"path":"\/documentation\/discord\/role\/edit","title":"Role.Edit","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/role\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/role\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/role\/created","title":"var created: Date","type":"property"}],"path":"\/documentation\/discord\/role\/object-implementations","title":"Object Implementations","type":"symbol"}],"path":"\/documentation\/discord\/role","title":"Role","type":"class"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/selectmenu\/option\/init(label:value:description:emoji:default:)","title":"init(label: String, value: String?, description: String?, emoji: PartialEmoji?, default: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/selectmenu\/option\/default","title":"var `default`: Bool","type":"property"},{"path":"\/documentation\/discord\/selectmenu\/option\/description","title":"var description: String?","type":"property"},{"path":"\/documentation\/discord\/selectmenu\/option\/emoji","title":"var emoji: PartialEmoji?","type":"property"},{"path":"\/documentation\/discord\/selectmenu\/option\/label","title":"var label: String","type":"property"},{"path":"\/documentation\/discord\/selectmenu\/option\/value","title":"var value: String","type":"property"}],"path":"\/documentation\/discord\/selectmenu\/option","title":"SelectMenu.Option","type":"class"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/selectmenu\/init(menutype:customid:options:channeltypes:placeholder:minvalues:maxvalues:disabled:)","title":"init(menuType: MenuType, customId: String, options: [Option]?, channelTypes: [ChannelType]?, placeholder: String?, minValues: Int, maxValues: Int, disabled: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/selectmenu\/channeltypes","title":"var channelTypes: [ChannelType]?","type":"property"},{"path":"\/documentation\/discord\/selectmenu\/customid","title":"var customId: String","type":"property"},{"path":"\/documentation\/discord\/selectmenu\/disabled","title":"var disabled: Bool","type":"property"},{"path":"\/documentation\/discord\/selectmenu\/maxvalues","title":"var maxValues: Int","type":"property"},{"path":"\/documentation\/discord\/selectmenu\/menutype-swift.property","title":"var menuType: MenuType","type":"property"},{"path":"\/documentation\/discord\/selectmenu\/minvalues","title":"var minValues: Int","type":"property"},{"path":"\/documentation\/discord\/selectmenu\/options","title":"var options: [Option]?","type":"property"},{"path":"\/documentation\/discord\/selectmenu\/placeholder","title":"var placeholder: String?","type":"property"},{"path":"\/documentation\/discord\/selectmenu\/type","title":"let type: ComponentType","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/selectmenu\/menutype-swift.enum\/channels","title":"case channels","type":"case"},{"path":"\/documentation\/discord\/selectmenu\/menutype-swift.enum\/mentionable","title":"case mentionable","type":"case"},{"path":"\/documentation\/discord\/selectmenu\/menutype-swift.enum\/role","title":"case role","type":"case"},{"path":"\/documentation\/discord\/selectmenu\/menutype-swift.enum\/text","title":"case text","type":"case"},{"path":"\/documentation\/discord\/selectmenu\/menutype-swift.enum\/user","title":"case user","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/selectmenu\/menutype-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/selectmenu\/menutype-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/selectmenu\/menutype-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/selectmenu\/menutype-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/selectmenu\/menutype-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/selectmenu\/menutype-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/selectmenu\/menutype-swift.enum","title":"SelectMenu.MenuType","type":"enum"}],"path":"\/documentation\/discord\/selectmenu","title":"SelectMenu","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/stagechannel\/createinstance(topic:privacylevel:startnotification:reason:)","title":"func createInstance(topic: String, privacyLevel: StageInstance.PrivacyLevel, startNotification: Bool, reason: String?) async throws -> StageInstance","type":"method"},{"path":"\/documentation\/discord\/stagechannel\/edit(_:reason:)","title":"func edit(Edit..., reason: String?) async throws -> StageChannel","type":"method"},{"path":"\/documentation\/discord\/stagechannel\/requestinstance()","title":"func requestInstance() async throws -> StageInstance","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/stagechannel\/edit\/bitrate(_:)","title":"case bitrate(Int)","type":"case"},{"path":"\/documentation\/discord\/stagechannel\/edit\/category(_:)","title":"case category(CategoryChannel?)","type":"case"},{"path":"\/documentation\/discord\/stagechannel\/edit\/name(_:)","title":"case name(String)","type":"case"},{"path":"\/documentation\/discord\/stagechannel\/edit\/overwrites(_:)","title":"case overwrites([PermissionOverwrites]?)","type":"case"},{"path":"\/documentation\/discord\/stagechannel\/edit\/position(_:)","title":"case position(Int?)","type":"case"},{"path":"\/documentation\/discord\/stagechannel\/edit\/region(_:)","title":"case region(VoiceChannel.RtcRegion)","type":"case"}],"path":"\/documentation\/discord\/stagechannel\/edit","title":"StageChannel.Edit","type":"enum"}],"path":"\/documentation\/discord\/stagechannel","title":"StageChannel","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/textchannel\/==(_:_:)","title":"static func == (TextChannel, TextChannel) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/textchannel\/bot","title":"var bot: Discord?","type":"property"},{"path":"\/documentation\/discord\/textchannel\/categoryid","title":"var categoryId: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/textchannel\/guildid","title":"let guildId: Snowflake","type":"property"},{"path":"\/documentation\/discord\/textchannel\/id","title":"let id: Snowflake","type":"property"},{"path":"\/documentation\/discord\/textchannel\/isannouncement","title":"var isAnnouncement: Bool","type":"property"},{"path":"\/documentation\/discord\/textchannel\/isnsfw","title":"var isNsfw: Bool","type":"property"},{"path":"\/documentation\/discord\/textchannel\/lastmessageid","title":"var lastMessageId: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/textchannel\/lastpinned","title":"var lastPinned: Date?","type":"property"},{"path":"\/documentation\/discord\/textchannel\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/discord\/textchannel\/overwrites","title":"var overwrites: [PermissionOverwrites]","type":"property"},{"path":"\/documentation\/discord\/textchannel\/position","title":"var position: Int","type":"property"},{"path":"\/documentation\/discord\/textchannel\/slowmodedelay","title":"var slowmodeDelay: Int","type":"property"},{"path":"\/documentation\/discord\/textchannel\/topic","title":"var topic: String?","type":"property"},{"path":"\/documentation\/discord\/textchannel\/type","title":"let type: ChannelType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/textchannel\/archivedthreads(before:limit:joined:private:)","title":"func archivedThreads(before: Date, limit: Int, joined: Bool, private: Bool) -> AsyncArchivedThreads","type":"method"},{"path":"\/documentation\/discord\/textchannel\/createthread(name:autoarchiveduration:slowmode:invitable:reason:)","title":"func createThread(name: String, autoArchiveDuration: ThreadChannel.ArchiveDuration, slowmode: Int?, invitable: Bool, reason: String?) async throws -> ThreadChannel","type":"method"},{"path":"\/documentation\/discord\/textchannel\/edit(_:reason:)","title":"func edit(Edit..., reason: String?) async throws -> TextChannel","type":"method"},{"path":"\/documentation\/discord\/textchannel\/follow(sendupdatesto:)","title":"func follow(sendUpdatesTo: TextChannel) async throws -> Webhook","type":"method"},{"path":"\/documentation\/discord\/textchannel\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"path":"\/documentation\/discord\/textchannel\/pins()","title":"func pins() async throws -> [Message]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/textchannel\/edit\/category(_:)","title":"case category(CategoryChannel?)","type":"case"},{"path":"\/documentation\/discord\/textchannel\/edit\/name(_:)","title":"case name(String)","type":"case"},{"path":"\/documentation\/discord\/textchannel\/edit\/nsfw(_:)","title":"case nsfw(Bool)","type":"case"},{"path":"\/documentation\/discord\/textchannel\/edit\/overwrites(_:)","title":"case overwrites([PermissionOverwrites]?)","type":"case"},{"path":"\/documentation\/discord\/textchannel\/edit\/position(_:)","title":"case position(Int?)","type":"case"},{"path":"\/documentation\/discord\/textchannel\/edit\/slowmodedelay(_:)","title":"case slowmodeDelay(Int)","type":"case"},{"path":"\/documentation\/discord\/textchannel\/edit\/topic(_:)","title":"case topic(String?)","type":"case"},{"path":"\/documentation\/discord\/textchannel\/edit\/type(_:)","title":"case type(ChannelType)","type":"case"}],"path":"\/documentation\/discord\/textchannel\/edit","title":"TextChannel.Edit","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/textchannel\/ismessageable","title":"var isMessageable: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/textchannel\/delete(reason:)","title":"func delete(reason: String?) async throws","type":"method"}],"path":"\/documentation\/discord\/textchannel\/channel-implementations","title":"Channel Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/textchannel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/textchannel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/textchannel\/category","title":"var category: CategoryChannel?","type":"property"},{"path":"\/documentation\/discord\/textchannel\/guild","title":"var guild: Guild","type":"property"},{"path":"\/documentation\/discord\/textchannel\/jumpurl","title":"var jumpUrl: String","type":"property"},{"path":"\/documentation\/discord\/textchannel\/mention","title":"var mention: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/textchannel\/createinvite(maxage:maxuses:temporary:unique:targettype:targetuser:targetapplicationid:reason:)","title":"func createInvite(maxAge: Int, maxUses: Int, temporary: Bool, unique: Bool, targetType: Invite.Target?, targetUser: User?, targetApplicationId: Snowflake?, reason: String?) async throws -> Invite","type":"method"},{"path":"\/documentation\/discord\/textchannel\/deletepermission(for:reason:)","title":"func deletePermission(for: Object, reason: String?) async throws","type":"method"},{"path":"\/documentation\/discord\/textchannel\/getoverwrites(for:)","title":"func getOverwrites(for: Object) -> PermissionOverwrites?","type":"method"},{"path":"\/documentation\/discord\/textchannel\/invites()","title":"func invites() async throws -> [Invite]","type":"method"},{"path":"\/documentation\/discord\/textchannel\/updateoverwrites(_:reason:)","title":"func updateOverwrites(PermissionOverwrites, reason: String?) async throws","type":"method"}],"path":"\/documentation\/discord\/textchannel\/guildchannel-implementations","title":"GuildChannel Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/textchannel\/createwebhook(name:avatar:reason:)","title":"func createWebhook(name: String, avatar: File?, reason: String?) async throws -> Webhook","type":"method"},{"path":"\/documentation\/discord\/textchannel\/webhooks()","title":"func webhooks() async throws -> [Webhook]","type":"method"}],"path":"\/documentation\/discord\/textchannel\/guildchannelmessageable-implementations","title":"GuildChannelMessageable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/textchannel\/bulkdeletemessages(_:reason:)","title":"func bulkDeleteMessages([Message], reason: String?) async throws","type":"method"},{"path":"\/documentation\/discord\/textchannel\/history(limit:search:)","title":"func history(limit: Int, search: Message.History?) async throws -> [Message]","type":"method"},{"path":"\/documentation\/discord\/textchannel\/requestmessage(_:)","title":"func requestMessage(Snowflake) async throws -> Message","type":"method"},{"path":"\/documentation\/discord\/textchannel\/send(_:tts:embeds:allowedmentions:ui:files:stickers:reference:silent:)","title":"func send(String?, tts: Bool, embeds: [Embed]?, allowedMentions: AllowedMentions, ui: UI?, files: [File]?, stickers: [GuildSticker]?, reference: Message.Reference?, silent: Bool) async throws -> Message","type":"method"},{"path":"\/documentation\/discord\/textchannel\/triggertyping(while:)","title":"func triggerTyping(while: (() async -> Void)?) async throws","type":"method"}],"path":"\/documentation\/discord\/textchannel\/messageable-implementations","title":"Messageable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/textchannel\/created","title":"var created: Date","type":"property"}],"path":"\/documentation\/discord\/textchannel\/object-implementations","title":"Object Implementations","type":"symbol"}],"path":"\/documentation\/discord\/textchannel","title":"TextChannel","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/textinput\/init(label:style:customid:minlength:maxlength:required:value:placeholder:)","title":"init(label: String, style: Style, customId: String, minLength: Int, maxLength: Int, required: Bool, value: String?, placeholder: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/textinput\/customid","title":"var customId: String","type":"property"},{"path":"\/documentation\/discord\/textinput\/label","title":"var label: String","type":"property"},{"path":"\/documentation\/discord\/textinput\/maxlength","title":"var maxLength: Int","type":"property"},{"path":"\/documentation\/discord\/textinput\/minlength","title":"var minLength: Int","type":"property"},{"path":"\/documentation\/discord\/textinput\/oninteraction","title":"let onInteraction: ((Interaction) async -> Void)?","type":"property"},{"path":"\/documentation\/discord\/textinput\/placeholder","title":"var placeholder: String?","type":"property"},{"path":"\/documentation\/discord\/textinput\/required","title":"var required: Bool","type":"property"},{"path":"\/documentation\/discord\/textinput\/style-swift.property","title":"var style: Style","type":"property"},{"path":"\/documentation\/discord\/textinput\/type","title":"let type: ComponentType","type":"property"},{"path":"\/documentation\/discord\/textinput\/value","title":"var value: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/textinput\/style-swift.enum\/paragraph","title":"case paragraph","type":"case"},{"path":"\/documentation\/discord\/textinput\/style-swift.enum\/short","title":"case short","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/textinput\/style-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/textinput\/style-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/textinput\/style-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/textinput\/style-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/textinput\/style-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/textinput\/style-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/textinput\/style-swift.enum","title":"TextInput.Style","type":"enum"}],"path":"\/documentation\/discord\/textinput","title":"TextInput","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/threadchannel\/threadmember\/id","title":"let id: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/threadchannel\/threadmember\/joinedat","title":"let joinedAt: Date","type":"property"},{"path":"\/documentation\/discord\/threadchannel\/threadmember\/userid","title":"let userId: Snowflake?","type":"property"}],"path":"\/documentation\/discord\/threadchannel\/threadmember","title":"ThreadChannel.ThreadMember","type":"struct"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/threadchannel\/==(_:_:)","title":"static func == (ThreadChannel, ThreadChannel) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/threadchannel\/appliedtags","title":"var appliedTags: [ForumChannel.Tag]","type":"property"},{"path":"\/documentation\/discord\/threadchannel\/archivetimestamp","title":"var archiveTimestamp: Date","type":"property"},{"path":"\/documentation\/discord\/threadchannel\/archived","title":"var archived: Bool","type":"property"},{"path":"\/documentation\/discord\/threadchannel\/autoarchiveduration","title":"var autoArchiveDuration: ArchiveDuration","type":"property"},{"path":"\/documentation\/discord\/threadchannel\/bot","title":"var bot: Discord?","type":"property"},{"path":"\/documentation\/discord\/threadchannel\/categoryid","title":"var categoryId: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/threadchannel\/channel","title":"var channel: GuildChannel","type":"property"},{"path":"\/documentation\/discord\/threadchannel\/createdat","title":"let createdAt: Date?","type":"property"},{"path":"\/documentation\/discord\/threadchannel\/guildid","title":"let guildId: Snowflake","type":"property"},{"path":"\/documentation\/discord\/threadchannel\/id","title":"let id: Snowflake","type":"property"},{"path":"\/documentation\/discord\/threadchannel\/lastmessageid","title":"var lastMessageId: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/threadchannel\/locked","title":"var locked: Bool","type":"property"},{"path":"\/documentation\/discord\/threadchannel\/membercount","title":"var memberCount: Int","type":"property"},{"path":"\/documentation\/discord\/threadchannel\/messagecount","title":"var messageCount: Int","type":"property"},{"path":"\/documentation\/discord\/threadchannel\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/discord\/threadchannel\/overwrites","title":"let overwrites: [PermissionOverwrites]","type":"property"},{"path":"\/documentation\/discord\/threadchannel\/slowmode","title":"var slowmode: Int","type":"property"},{"path":"\/documentation\/discord\/threadchannel\/type","title":"let type: ChannelType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/threadchannel\/addmember(_:)","title":"func addMember(Member) async throws","type":"method"},{"path":"\/documentation\/discord\/threadchannel\/archive()","title":"func archive() async throws","type":"method"},{"path":"\/documentation\/discord\/threadchannel\/edit(_:reason:)","title":"func edit(Edit..., reason: String?) async throws -> ThreadChannel","type":"method"},{"path":"\/documentation\/discord\/threadchannel\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"path":"\/documentation\/discord\/threadchannel\/join()","title":"func join() async throws","type":"method"},{"path":"\/documentation\/discord\/threadchannel\/leave()","title":"func leave() async throws","type":"method"},{"path":"\/documentation\/discord\/threadchannel\/lock()","title":"func lock() async throws","type":"method"},{"path":"\/documentation\/discord\/threadchannel\/members()","title":"func members() async throws -> [ThreadMember]","type":"method"},{"path":"\/documentation\/discord\/threadchannel\/pins()","title":"func pins() async throws -> [Message]","type":"method"},{"path":"\/documentation\/discord\/threadchannel\/removemember(_:)","title":"func removeMember(Member) async throws","type":"method"},{"path":"\/documentation\/discord\/threadchannel\/requestmember(_:)","title":"func requestMember(Snowflake) async throws -> ThreadMember","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/threadchannel\/archiveduration\/onehour","title":"case oneHour","type":"case"},{"path":"\/documentation\/discord\/threadchannel\/archiveduration\/sevendays","title":"case sevenDays","type":"case"},{"path":"\/documentation\/discord\/threadchannel\/archiveduration\/threedays","title":"case threeDays","type":"case"},{"path":"\/documentation\/discord\/threadchannel\/archiveduration\/twentyfourhours","title":"case twentyfourHours","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/threadchannel\/archiveduration\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/threadchannel\/archiveduration\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/threadchannel\/archiveduration\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/threadchannel\/archiveduration\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/threadchannel\/archiveduration\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/threadchannel\/archiveduration\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/threadchannel\/archiveduration","title":"ThreadChannel.ArchiveDuration","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/threadchannel\/edit\/appliedtags(_:)","title":"case appliedTags([ForumChannel.Tag])","type":"case"},{"path":"\/documentation\/discord\/threadchannel\/edit\/archived(_:)","title":"case archived(Bool)","type":"case"},{"path":"\/documentation\/discord\/threadchannel\/edit\/autoarchiveduration(_:)","title":"case autoArchiveDuration(ThreadChannel.ArchiveDuration)","type":"case"},{"path":"\/documentation\/discord\/threadchannel\/edit\/invitable(_:)","title":"case invitable(Bool)","type":"case"},{"path":"\/documentation\/discord\/threadchannel\/edit\/locked(_:)","title":"case locked(Bool)","type":"case"},{"path":"\/documentation\/discord\/threadchannel\/edit\/name(_:)","title":"case name(String)","type":"case"},{"path":"\/documentation\/discord\/threadchannel\/edit\/pinned(_:)","title":"case pinned(Bool)","type":"case"},{"path":"\/documentation\/discord\/threadchannel\/edit\/slowmode(_:)","title":"case slowmode(Int?)","type":"case"}],"path":"\/documentation\/discord\/threadchannel\/edit","title":"ThreadChannel.Edit","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/threadchannel\/ismessageable","title":"var isMessageable: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/threadchannel\/delete(reason:)","title":"func delete(reason: String?) async throws","type":"method"}],"path":"\/documentation\/discord\/threadchannel\/channel-implementations","title":"Channel Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/threadchannel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/threadchannel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/threadchannel\/category","title":"var category: CategoryChannel?","type":"property"},{"path":"\/documentation\/discord\/threadchannel\/guild","title":"var guild: Guild","type":"property"},{"path":"\/documentation\/discord\/threadchannel\/jumpurl","title":"var jumpUrl: String","type":"property"},{"path":"\/documentation\/discord\/threadchannel\/mention","title":"var mention: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/threadchannel\/createinvite(maxage:maxuses:temporary:unique:targettype:targetuser:targetapplicationid:reason:)","title":"func createInvite(maxAge: Int, maxUses: Int, temporary: Bool, unique: Bool, targetType: Invite.Target?, targetUser: User?, targetApplicationId: Snowflake?, reason: String?) async throws -> Invite","type":"method"},{"path":"\/documentation\/discord\/threadchannel\/deletepermission(for:reason:)","title":"func deletePermission(for: Object, reason: String?) async throws","type":"method"},{"path":"\/documentation\/discord\/threadchannel\/getoverwrites(for:)","title":"func getOverwrites(for: Object) -> PermissionOverwrites?","type":"method"},{"path":"\/documentation\/discord\/threadchannel\/invites()","title":"func invites() async throws -> [Invite]","type":"method"},{"path":"\/documentation\/discord\/threadchannel\/updateoverwrites(_:reason:)","title":"func updateOverwrites(PermissionOverwrites, reason: String?) async throws","type":"method"}],"path":"\/documentation\/discord\/threadchannel\/guildchannel-implementations","title":"GuildChannel Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/threadchannel\/createwebhook(name:avatar:reason:)","title":"func createWebhook(name: String, avatar: File?, reason: String?) async throws -> Webhook","type":"method"},{"path":"\/documentation\/discord\/threadchannel\/webhooks()","title":"func webhooks() async throws -> [Webhook]","type":"method"}],"path":"\/documentation\/discord\/threadchannel\/guildchannelmessageable-implementations","title":"GuildChannelMessageable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/threadchannel\/bulkdeletemessages(_:reason:)","title":"func bulkDeleteMessages([Message], reason: String?) async throws","type":"method"},{"path":"\/documentation\/discord\/threadchannel\/history(limit:search:)","title":"func history(limit: Int, search: Message.History?) async throws -> [Message]","type":"method"},{"path":"\/documentation\/discord\/threadchannel\/requestmessage(_:)","title":"func requestMessage(Snowflake) async throws -> Message","type":"method"},{"path":"\/documentation\/discord\/threadchannel\/send(_:tts:embeds:allowedmentions:ui:files:stickers:reference:silent:)","title":"func send(String?, tts: Bool, embeds: [Embed]?, allowedMentions: AllowedMentions, ui: UI?, files: [File]?, stickers: [GuildSticker]?, reference: Message.Reference?, silent: Bool) async throws -> Message","type":"method"},{"path":"\/documentation\/discord\/threadchannel\/triggertyping(while:)","title":"func triggerTyping(while: (() async -> Void)?) async throws","type":"method"}],"path":"\/documentation\/discord\/threadchannel\/messageable-implementations","title":"Messageable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/threadchannel\/created","title":"var created: Date","type":"property"}],"path":"\/documentation\/discord\/threadchannel\/object-implementations","title":"Object Implementations","type":"symbol"}],"path":"\/documentation\/discord\/threadchannel","title":"ThreadChannel","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/ui\/init(timeout:)","title":"init(timeout: TimeInterval)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/ui\/attachedmessage","title":"var attachedMessage: Message?","type":"property"},{"path":"\/documentation\/discord\/ui\/items","title":"var items: [Component]","type":"property"},{"path":"\/documentation\/discord\/ui\/oninteraction","title":"var onInteraction: ((Interaction) async -> Void)","type":"property"},{"path":"\/documentation\/discord\/ui\/ontimeout","title":"var onTimeout: (Message?) async -> Void","type":"property"},{"path":"\/documentation\/discord\/ui\/timeout","title":"let timeout: TimeInterval","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/ui\/additem(_:)","title":"func addItem(Component) -> Self","type":"method"},{"path":"\/documentation\/discord\/ui\/disableallitems()","title":"func disableAllItems()","type":"method"},{"path":"\/documentation\/discord\/ui\/enableallitems()","title":"func enableAllItems()","type":"method"},{"path":"\/documentation\/discord\/ui\/oninteraction(_:)","title":"func onInteraction((Interaction) async -> Void) -> Self","type":"method"},{"path":"\/documentation\/discord\/ui\/ontimeout(_:)","title":"func onTimeout((Message?) async -> Void) -> Self","type":"method"},{"path":"\/documentation\/discord\/ui\/removeallitems()","title":"func removeAllItems()","type":"method"},{"path":"\/documentation\/discord\/ui\/removeitem(_:)","title":"func removeItem(String) -> Self","type":"method"}],"path":"\/documentation\/discord\/ui","title":"UI","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/user\/activity\/applicationid","title":"let applicationId: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/user\/activity\/assets","title":"var assets: ActivityAssets?","type":"property"},{"path":"\/documentation\/discord\/user\/activity\/buttons","title":"var buttons: [ActivityButton]?","type":"property"},{"path":"\/documentation\/discord\/user\/activity\/createdat","title":"let createdAt: Date","type":"property"},{"path":"\/documentation\/discord\/user\/activity\/details","title":"let details: String?","type":"property"},{"path":"\/documentation\/discord\/user\/activity\/emoji","title":"var emoji: PartialEmoji?","type":"property"},{"path":"\/documentation\/discord\/user\/activity\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/discord\/user\/activity\/party","title":"var party: ActivityParty?","type":"property"},{"path":"\/documentation\/discord\/user\/activity\/state","title":"let state: String?","type":"property"},{"path":"\/documentation\/discord\/user\/activity\/timestamps","title":"var timestamps: ActivityTimestamp?","type":"property"},{"path":"\/documentation\/discord\/user\/activity\/type","title":"let type: ActivityType","type":"property"},{"path":"\/documentation\/discord\/user\/activity\/url","title":"let url: String?","type":"property"}],"path":"\/documentation\/discord\/user\/activity","title":"User.Activity","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/user\/activityassets\/largeimage","title":"var largeImage: (id: String, url: String)?","type":"property"},{"path":"\/documentation\/discord\/user\/activityassets\/largetext","title":"let largeText: String?","type":"property"},{"path":"\/documentation\/discord\/user\/activityassets\/smallimage","title":"var smallImage: (id: String, url: String)?","type":"property"},{"path":"\/documentation\/discord\/user\/activityassets\/smalltext","title":"let smallText: String?","type":"property"}],"path":"\/documentation\/discord\/user\/activityassets","title":"User.ActivityAssets","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/user\/activitybutton\/label","title":"let label: String","type":"property"},{"path":"\/documentation\/discord\/user\/activitybutton\/url","title":"let url: String","type":"property"}],"path":"\/documentation\/discord\/user\/activitybutton","title":"User.ActivityButton","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/user\/activityparty\/id","title":"let id: String?","type":"property"},{"path":"\/documentation\/discord\/user\/activityparty\/size","title":"var size: (current: Int, max: Int)?","type":"property"}],"path":"\/documentation\/discord\/user\/activityparty","title":"User.ActivityParty","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/user\/activitytimestamp\/end","title":"var end: Date?","type":"property"},{"path":"\/documentation\/discord\/user\/activitytimestamp\/start","title":"var start: Date?","type":"property"}],"path":"\/documentation\/discord\/user\/activitytimestamp","title":"User.ActivityTimestamp","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/user\/presenceactivity\/init(_:name:url:)","title":"init(ActivityType, name: String, url: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/user\/presenceactivity\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/discord\/user\/presenceactivity\/type","title":"var type: ActivityType","type":"property"},{"path":"\/documentation\/discord\/user\/presenceactivity\/url","title":"var url: String?","type":"property"}],"path":"\/documentation\/discord\/user\/presenceactivity","title":"User.PresenceActivity","type":"struct"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/user\/==(_:_:)","title":"static func == (User, User) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/user\/avatar","title":"var avatar: Asset?","type":"property"},{"path":"\/documentation\/discord\/user\/banner","title":"var banner: Asset?","type":"property"},{"path":"\/documentation\/discord\/user\/defaultavatarurl","title":"var defaultAvatarUrl: String","type":"property"},{"path":"\/documentation\/discord\/user\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/discord\/user\/discriminator","title":"var discriminator: String","type":"property"},{"path":"\/documentation\/discord\/user\/id","title":"let id: Snowflake","type":"property"},{"path":"\/documentation\/discord\/user\/isbot","title":"let isBot: Bool","type":"property"},{"path":"\/documentation\/discord\/user\/issystem","title":"let isSystem: Bool","type":"property"},{"path":"\/documentation\/discord\/user\/mention","title":"let mention: String","type":"property"},{"path":"\/documentation\/discord\/user\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/discord\/user\/publicuserflags-swift.property","title":"var publicUserFlags: [PublicUserFlags]?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/user\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/user\/activitytype\/competing","title":"case competing","type":"case"},{"path":"\/documentation\/discord\/user\/activitytype\/custom","title":"case custom","type":"case"},{"path":"\/documentation\/discord\/user\/activitytype\/game","title":"case game","type":"case"},{"path":"\/documentation\/discord\/user\/activitytype\/listening","title":"case listening","type":"case"},{"path":"\/documentation\/discord\/user\/activitytype\/streaming","title":"case streaming","type":"case"},{"path":"\/documentation\/discord\/user\/activitytype\/watching","title":"case watching","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/user\/activitytype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/user\/activitytype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/user\/activitytype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/user\/activitytype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/user\/activitytype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/user\/activitytype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/user\/activitytype","title":"User.ActivityType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/user\/publicuserflags-swift.enum\/activedeveloper","title":"case activeDeveloper","type":"case"},{"path":"\/documentation\/discord\/user\/publicuserflags-swift.enum\/bothttpinteractions","title":"case botHttpInteractions","type":"case"},{"path":"\/documentation\/discord\/user\/publicuserflags-swift.enum\/bughunterlevel1","title":"case bugHunterLevel1","type":"case"},{"path":"\/documentation\/discord\/user\/publicuserflags-swift.enum\/bughunterlevel2","title":"case bugHunterLevel2","type":"case"},{"path":"\/documentation\/discord\/user\/publicuserflags-swift.enum\/certifiedmoderator","title":"case certifiedModerator","type":"case"},{"path":"\/documentation\/discord\/user\/publicuserflags-swift.enum\/hypesquad","title":"case hypeSquad","type":"case"},{"path":"\/documentation\/discord\/user\/publicuserflags-swift.enum\/hypesquadonlinehouse1","title":"case hypeSquadOnlineHouse1","type":"case"},{"path":"\/documentation\/discord\/user\/publicuserflags-swift.enum\/hypesquadonlinehouse2","title":"case hypeSquadOnlineHouse2","type":"case"},{"path":"\/documentation\/discord\/user\/publicuserflags-swift.enum\/hypesquadonlinehouse3","title":"case hypeSquadOnlineHouse3","type":"case"},{"path":"\/documentation\/discord\/user\/publicuserflags-swift.enum\/none","title":"case none","type":"case"},{"path":"\/documentation\/discord\/user\/publicuserflags-swift.enum\/partner","title":"case partner","type":"case"},{"path":"\/documentation\/discord\/user\/publicuserflags-swift.enum\/premiumearlysupporter","title":"case premiumEarlySupporter","type":"case"},{"path":"\/documentation\/discord\/user\/publicuserflags-swift.enum\/staff","title":"case staff","type":"case"},{"path":"\/documentation\/discord\/user\/publicuserflags-swift.enum\/teampseudouser","title":"case teamPseudoUser","type":"case"},{"path":"\/documentation\/discord\/user\/publicuserflags-swift.enum\/verifiedbot","title":"case verifiedBot","type":"case"},{"path":"\/documentation\/discord\/user\/publicuserflags-swift.enum\/verifieddeveloper","title":"case verifiedDeveloper","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/user\/publicuserflags-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/user\/publicuserflags-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/user\/publicuserflags-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/user\/publicuserflags-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/user\/publicuserflags-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/user\/publicuserflags-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/user\/publicuserflags-swift.enum","title":"User.PublicUserFlags","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/user\/status\/dnd","title":"case dnd","type":"case"},{"path":"\/documentation\/discord\/user\/status\/idle","title":"case idle","type":"case"},{"path":"\/documentation\/discord\/user\/status\/offline","title":"case offline","type":"case"},{"path":"\/documentation\/discord\/user\/status\/online","title":"case online","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/user\/status\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/user\/status\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/user\/status\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/user\/status\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/user\/status\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/user\/status\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/user\/status","title":"User.Status","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/user\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/user\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/user\/created","title":"var created: Date","type":"property"}],"path":"\/documentation\/discord\/user\/object-implementations","title":"Object Implementations","type":"symbol"}],"path":"\/documentation\/discord\/user","title":"User","type":"class"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/voicechannel\/state\/cameraenabled","title":"var cameraEnabled: Bool","type":"property"},{"path":"\/documentation\/discord\/voicechannel\/state\/channel","title":"var channel: VoiceChannel?","type":"property"},{"path":"\/documentation\/discord\/voicechannel\/state\/guild","title":"var guild: Guild","type":"property"},{"path":"\/documentation\/discord\/voicechannel\/state\/guilddeafened","title":"var guildDeafened: Bool","type":"property"},{"path":"\/documentation\/discord\/voicechannel\/state\/guildmuted","title":"var guildMuted: Bool","type":"property"},{"path":"\/documentation\/discord\/voicechannel\/state\/requestedtospeakat","title":"var requestedToSpeakAt: Date?","type":"property"},{"path":"\/documentation\/discord\/voicechannel\/state\/selfdeafened","title":"var selfDeafened: Bool","type":"property"},{"path":"\/documentation\/discord\/voicechannel\/state\/selfmuted","title":"var selfMuted: Bool","type":"property"},{"path":"\/documentation\/discord\/voicechannel\/state\/sessionid","title":"let sessionId: String","type":"property"},{"path":"\/documentation\/discord\/voicechannel\/state\/streaming","title":"var streaming: Bool","type":"property"},{"path":"\/documentation\/discord\/voicechannel\/state\/suppressed","title":"var suppressed: Bool","type":"property"},{"path":"\/documentation\/discord\/voicechannel\/state\/user","title":"var user: User","type":"property"}],"path":"\/documentation\/discord\/voicechannel\/state","title":"VoiceChannel.State","type":"class"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/voicechannel\/==(_:_:)","title":"static func == (VoiceChannel, VoiceChannel) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/voicechannel\/bitrate","title":"var bitrate: Int","type":"property"},{"path":"\/documentation\/discord\/voicechannel\/bot","title":"var bot: Discord?","type":"property"},{"path":"\/documentation\/discord\/voicechannel\/categoryid","title":"var categoryId: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/voicechannel\/guildid","title":"let guildId: Snowflake","type":"property"},{"path":"\/documentation\/discord\/voicechannel\/id","title":"let id: Snowflake","type":"property"},{"path":"\/documentation\/discord\/voicechannel\/lastmessageid","title":"var lastMessageId: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/voicechannel\/members","title":"var members: [Member]","type":"property"},{"path":"\/documentation\/discord\/voicechannel\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/discord\/voicechannel\/overwrites","title":"var overwrites: [PermissionOverwrites]","type":"property"},{"path":"\/documentation\/discord\/voicechannel\/position","title":"var position: Int","type":"property"},{"path":"\/documentation\/discord\/voicechannel\/rtcregion-swift.property","title":"var rtcRegion: RtcRegion?","type":"property"},{"path":"\/documentation\/discord\/voicechannel\/type","title":"let type: ChannelType","type":"property"},{"path":"\/documentation\/discord\/voicechannel\/userlimit","title":"var userLimit: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/voicechannel\/edit(_:reason:)","title":"func edit(Edit..., reason: String?) async throws -> VoiceChannel","type":"method"},{"path":"\/documentation\/discord\/voicechannel\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/voicechannel\/edit\/bitrate(_:)","title":"case bitrate(Int)","type":"case"},{"path":"\/documentation\/discord\/voicechannel\/edit\/category(_:)","title":"case category(CategoryChannel?)","type":"case"},{"path":"\/documentation\/discord\/voicechannel\/edit\/name(_:)","title":"case name(String)","type":"case"},{"path":"\/documentation\/discord\/voicechannel\/edit\/overwrites(_:)","title":"case overwrites([PermissionOverwrites]?)","type":"case"},{"path":"\/documentation\/discord\/voicechannel\/edit\/position(_:)","title":"case position(Int?)","type":"case"},{"path":"\/documentation\/discord\/voicechannel\/edit\/region(_:)","title":"case region(RtcRegion)","type":"case"},{"path":"\/documentation\/discord\/voicechannel\/edit\/userlimit(_:)","title":"case userLimit(Int?)","type":"case"},{"path":"\/documentation\/discord\/voicechannel\/edit\/videoqualitymode(_:)","title":"case videoQualityMode(VideoQualityMode)","type":"case"}],"path":"\/documentation\/discord\/voicechannel\/edit","title":"VoiceChannel.Edit","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/voicechannel\/rtcregion-swift.enum\/automatic","title":"case automatic","type":"case"},{"path":"\/documentation\/discord\/voicechannel\/rtcregion-swift.enum\/brazil","title":"case brazil","type":"case"},{"path":"\/documentation\/discord\/voicechannel\/rtcregion-swift.enum\/hongkong","title":"case hongKong","type":"case"},{"path":"\/documentation\/discord\/voicechannel\/rtcregion-swift.enum\/india","title":"case india","type":"case"},{"path":"\/documentation\/discord\/voicechannel\/rtcregion-swift.enum\/japan","title":"case japan","type":"case"},{"path":"\/documentation\/discord\/voicechannel\/rtcregion-swift.enum\/rotterdam","title":"case rotterdam","type":"case"},{"path":"\/documentation\/discord\/voicechannel\/rtcregion-swift.enum\/russia","title":"case russia","type":"case"},{"path":"\/documentation\/discord\/voicechannel\/rtcregion-swift.enum\/singapore","title":"case singapore","type":"case"},{"path":"\/documentation\/discord\/voicechannel\/rtcregion-swift.enum\/southafrica","title":"case southAfrica","type":"case"},{"path":"\/documentation\/discord\/voicechannel\/rtcregion-swift.enum\/sydney","title":"case sydney","type":"case"},{"path":"\/documentation\/discord\/voicechannel\/rtcregion-swift.enum\/uscentral","title":"case usCentral","type":"case"},{"path":"\/documentation\/discord\/voicechannel\/rtcregion-swift.enum\/useast","title":"case usEast","type":"case"},{"path":"\/documentation\/discord\/voicechannel\/rtcregion-swift.enum\/ussouth","title":"case usSouth","type":"case"},{"path":"\/documentation\/discord\/voicechannel\/rtcregion-swift.enum\/uswest","title":"case usWest","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/voicechannel\/rtcregion-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/voicechannel\/rtcregion-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/voicechannel\/rtcregion-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/voicechannel\/rtcregion-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/voicechannel\/rtcregion-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/voicechannel\/rtcregion-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/voicechannel\/rtcregion-swift.enum","title":"VoiceChannel.RtcRegion","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/voicechannel\/videoqualitymode\/auto","title":"case auto","type":"case"},{"path":"\/documentation\/discord\/voicechannel\/videoqualitymode\/full","title":"case full","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/voicechannel\/videoqualitymode\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/voicechannel\/videoqualitymode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/voicechannel\/videoqualitymode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/voicechannel\/videoqualitymode\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/voicechannel\/videoqualitymode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/voicechannel\/videoqualitymode\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/voicechannel\/videoqualitymode","title":"VoiceChannel.VideoQualityMode","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/voicechannel\/ismessageable","title":"var isMessageable: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/voicechannel\/delete(reason:)","title":"func delete(reason: String?) async throws","type":"method"}],"path":"\/documentation\/discord\/voicechannel\/channel-implementations","title":"Channel Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/voicechannel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/voicechannel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/voicechannel\/category","title":"var category: CategoryChannel?","type":"property"},{"path":"\/documentation\/discord\/voicechannel\/guild","title":"var guild: Guild","type":"property"},{"path":"\/documentation\/discord\/voicechannel\/jumpurl","title":"var jumpUrl: String","type":"property"},{"path":"\/documentation\/discord\/voicechannel\/mention","title":"var mention: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/voicechannel\/createinvite(maxage:maxuses:temporary:unique:targettype:targetuser:targetapplicationid:reason:)","title":"func createInvite(maxAge: Int, maxUses: Int, temporary: Bool, unique: Bool, targetType: Invite.Target?, targetUser: User?, targetApplicationId: Snowflake?, reason: String?) async throws -> Invite","type":"method"},{"path":"\/documentation\/discord\/voicechannel\/deletepermission(for:reason:)","title":"func deletePermission(for: Object, reason: String?) async throws","type":"method"},{"path":"\/documentation\/discord\/voicechannel\/getoverwrites(for:)","title":"func getOverwrites(for: Object) -> PermissionOverwrites?","type":"method"},{"path":"\/documentation\/discord\/voicechannel\/invites()","title":"func invites() async throws -> [Invite]","type":"method"},{"path":"\/documentation\/discord\/voicechannel\/updateoverwrites(_:reason:)","title":"func updateOverwrites(PermissionOverwrites, reason: String?) async throws","type":"method"}],"path":"\/documentation\/discord\/voicechannel\/guildchannel-implementations","title":"GuildChannel Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/voicechannel\/createwebhook(name:avatar:reason:)","title":"func createWebhook(name: String, avatar: File?, reason: String?) async throws -> Webhook","type":"method"},{"path":"\/documentation\/discord\/voicechannel\/webhooks()","title":"func webhooks() async throws -> [Webhook]","type":"method"}],"path":"\/documentation\/discord\/voicechannel\/guildchannelmessageable-implementations","title":"GuildChannelMessageable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/voicechannel\/bulkdeletemessages(_:reason:)","title":"func bulkDeleteMessages([Message], reason: String?) async throws","type":"method"},{"path":"\/documentation\/discord\/voicechannel\/history(limit:search:)","title":"func history(limit: Int, search: Message.History?) async throws -> [Message]","type":"method"},{"path":"\/documentation\/discord\/voicechannel\/requestmessage(_:)","title":"func requestMessage(Snowflake) async throws -> Message","type":"method"},{"path":"\/documentation\/discord\/voicechannel\/send(_:tts:embeds:allowedmentions:ui:files:stickers:reference:silent:)","title":"func send(String?, tts: Bool, embeds: [Embed]?, allowedMentions: AllowedMentions, ui: UI?, files: [File]?, stickers: [GuildSticker]?, reference: Message.Reference?, silent: Bool) async throws -> Message","type":"method"},{"path":"\/documentation\/discord\/voicechannel\/triggertyping(while:)","title":"func triggerTyping(while: (() async -> Void)?) async throws","type":"method"}],"path":"\/documentation\/discord\/voicechannel\/messageable-implementations","title":"Messageable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/voicechannel\/created","title":"var created: Date","type":"property"}],"path":"\/documentation\/discord\/voicechannel\/object-implementations","title":"Object Implementations","type":"symbol"}],"path":"\/documentation\/discord\/voicechannel","title":"VoiceChannel","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/webhook\/applicationid","title":"let applicationId: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/webhook\/avatar","title":"let avatar: Asset?","type":"property"},{"path":"\/documentation\/discord\/webhook\/bot","title":"var bot: Discord?","type":"property"},{"path":"\/documentation\/discord\/webhook\/channelid","title":"let channelId: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/webhook\/guildid","title":"let guildId: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/webhook\/id","title":"let id: Snowflake","type":"property"},{"path":"\/documentation\/discord\/webhook\/name","title":"let name: String?","type":"property"},{"path":"\/documentation\/discord\/webhook\/token","title":"let token: String?","type":"property"},{"path":"\/documentation\/discord\/webhook\/type","title":"let type: WebhookType","type":"property"},{"path":"\/documentation\/discord\/webhook\/url","title":"let url: String?","type":"property"},{"path":"\/documentation\/discord\/webhook\/user","title":"let user: User?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/webhook\/delete()","title":"func delete() async throws","type":"method"},{"path":"\/documentation\/discord\/webhook\/edit(_:reason:)","title":"func edit(Edit..., reason: String?) async throws -> Webhook","type":"method"},{"path":"\/documentation\/discord\/webhook\/send(_:embeds:tts:allowedmentions:ui:files:threadid:threadname:username:avatarurl:)","title":"func send(String?, embeds: [Embed]?, tts: Bool, allowedMentions: AllowedMentions, ui: UI?, files: [File]?, threadId: Snowflake?, threadName: String?, username: String?, avatarUrl: String?) async throws -> Message","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/webhook\/edit\/avatar(_:)","title":"case avatar(File?)","type":"case"},{"path":"\/documentation\/discord\/webhook\/edit\/channel(_:)","title":"case channel(Snowflake)","type":"case"},{"path":"\/documentation\/discord\/webhook\/edit\/name(_:)","title":"case name(String)","type":"case"}],"path":"\/documentation\/discord\/webhook\/edit","title":"Webhook.Edit","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/webhook\/webhooktype\/application","title":"case application","type":"case"},{"path":"\/documentation\/discord\/webhook\/webhooktype\/channelfollower","title":"case channelFollower","type":"case"},{"path":"\/documentation\/discord\/webhook\/webhooktype\/incoming","title":"case incoming","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/webhook\/webhooktype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/webhook\/webhooktype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/webhook\/webhooktype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/webhook\/webhooktype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/webhook\/webhooktype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/webhook\/webhooktype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/webhook\/webhooktype","title":"Webhook.WebhookType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/webhook\/created","title":"var created: Date","type":"property"}],"path":"\/documentation\/discord\/webhook\/object-implementations","title":"Object Implementations","type":"symbol"}],"path":"\/documentation\/discord\/webhook","title":"Webhook","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/channel\/bot","title":"var bot: Discord?","type":"property"},{"path":"\/documentation\/discord\/channel\/id","title":"var id: Snowflake","type":"property"},{"path":"\/documentation\/discord\/channel\/ismessageable","title":"var isMessageable: Bool","type":"property"},{"path":"\/documentation\/discord\/channel\/type","title":"var type: ChannelType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/channel\/delete(reason:)","title":"func delete(reason: String?) async throws","type":"method"}],"path":"\/documentation\/discord\/channel","title":"Channel","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/component\/customid","title":"var customId: String","type":"property"},{"path":"\/documentation\/discord\/component\/type","title":"var type: ComponentType","type":"property"}],"path":"\/documentation\/discord\/component","title":"Component","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/downloadable\/url","title":"var url: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/downloadable\/download()","title":"func download() async throws -> File?","type":"method"}],"path":"\/documentation\/discord\/downloadable","title":"Downloadable","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/guildchannel\/category","title":"var category: CategoryChannel?","type":"property"},{"path":"\/documentation\/discord\/guildchannel\/categoryid","title":"var categoryId: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/guildchannel\/guild","title":"var guild: Guild","type":"property"},{"path":"\/documentation\/discord\/guildchannel\/guildid","title":"var guildId: Snowflake","type":"property"},{"path":"\/documentation\/discord\/guildchannel\/jumpurl","title":"var jumpUrl: String","type":"property"},{"path":"\/documentation\/discord\/guildchannel\/lastmessageid","title":"var lastMessageId: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/guildchannel\/mention","title":"var mention: String","type":"property"},{"path":"\/documentation\/discord\/guildchannel\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/discord\/guildchannel\/overwrites","title":"var overwrites: [PermissionOverwrites]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/guildchannel\/createinvite(maxage:maxuses:temporary:unique:targettype:targetuser:targetapplicationid:reason:)","title":"func createInvite(maxAge: Int, maxUses: Int, temporary: Bool, unique: Bool, targetType: Invite.Target?, targetUser: User?, targetApplicationId: Snowflake?, reason: String?) async throws -> Invite","type":"method"},{"path":"\/documentation\/discord\/guildchannel\/deletepermission(for:reason:)","title":"func deletePermission(for: Object, reason: String?) async throws","type":"method"},{"path":"\/documentation\/discord\/guildchannel\/getoverwrites(for:)","title":"func getOverwrites(for: Object) -> PermissionOverwrites?","type":"method"},{"path":"\/documentation\/discord\/guildchannel\/invites()","title":"func invites() async throws -> [Invite]","type":"method"},{"path":"\/documentation\/discord\/guildchannel\/updateoverwrites(_:reason:)","title":"func updateOverwrites(PermissionOverwrites, reason: String?) async throws","type":"method"}],"path":"\/documentation\/discord\/guildchannel","title":"GuildChannel","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/guildchannelmessageable\/createwebhook(name:avatar:reason:)","title":"func createWebhook(name: String, avatar: File?, reason: String?) async throws -> Webhook","type":"method"},{"path":"\/documentation\/discord\/guildchannelmessageable\/webhooks()","title":"func webhooks() async throws -> [Webhook]","type":"method"}],"path":"\/documentation\/discord\/guildchannelmessageable","title":"GuildChannelMessageable","type":"protocol"},{"path":"\/documentation\/discord\/interactiondata","title":"InteractionData","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/messageable\/bot","title":"var bot: Discord?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/messageable\/bulkdeletemessages(_:reason:)","title":"func bulkDeleteMessages([Message], reason: String?) async throws","type":"method"},{"path":"\/documentation\/discord\/messageable\/history(limit:search:)","title":"func history(limit: Int, search: Message.History?) async throws -> [Message]","type":"method"},{"path":"\/documentation\/discord\/messageable\/requestmessage(_:)","title":"func requestMessage(Snowflake) async throws -> Message","type":"method"},{"path":"\/documentation\/discord\/messageable\/send(_:tts:embeds:allowedmentions:ui:files:stickers:reference:silent:)","title":"func send(String?, tts: Bool, embeds: [Embed]?, allowedMentions: AllowedMentions, ui: UI?, files: [File]?, stickers: [GuildSticker]?, reference: Message.Reference?, silent: Bool) async throws -> Message","type":"method"},{"path":"\/documentation\/discord\/messageable\/triggertyping(while:)","title":"func triggerTyping(while: (() async -> Void)?) async throws","type":"method"}],"path":"\/documentation\/discord\/messageable","title":"Messageable","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/object\/created","title":"var created: Date","type":"property"},{"path":"\/documentation\/discord\/object\/id","title":"var id: Snowflake","type":"property"}],"path":"\/documentation\/discord\/object","title":"Object","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/allowedmentions\/init(users:roles:)","title":"init(users: Set<User>, roles: Set<Role>)","type":"init"},{"path":"\/documentation\/discord\/allowedmentions\/init(users:roles:replieduser:everyone:)","title":"init(users: Bool, roles: Bool, repliedUser: Bool, everyone: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/allowedmentions\/everyone","title":"var everyone: Bool","type":"property"},{"path":"\/documentation\/discord\/allowedmentions\/exemptroles","title":"var exemptRoles: Set<Role>","type":"property"},{"path":"\/documentation\/discord\/allowedmentions\/exemptusers","title":"var exemptUsers: Set<User>","type":"property"},{"path":"\/documentation\/discord\/allowedmentions\/replieduser","title":"var repliedUser: Bool","type":"property"},{"path":"\/documentation\/discord\/allowedmentions\/roles","title":"var roles: Bool","type":"property"},{"path":"\/documentation\/discord\/allowedmentions\/users","title":"var users: Bool","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/allowedmentions\/all","title":"static let all: AllowedMentions","type":"property"},{"path":"\/documentation\/discord\/allowedmentions\/default","title":"static let `default`: AllowedMentions","type":"property"},{"path":"\/documentation\/discord\/allowedmentions\/none","title":"static let none: AllowedMentions","type":"property"}],"path":"\/documentation\/discord\/allowedmentions","title":"AllowedMentions","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/application\/installparams-swift.struct\/permissions","title":"let permissions: Permissions","type":"property"},{"path":"\/documentation\/discord\/application\/installparams-swift.struct\/scopes","title":"let scopes: Set<OAuth2Scopes>","type":"property"}],"path":"\/documentation\/discord\/application\/installparams-swift.struct","title":"Application.InstallParams","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/application\/team-swift.struct\/member\/avatar","title":"var avatar: Asset?","type":"property"},{"path":"\/documentation\/discord\/application\/team-swift.struct\/member\/discriminator","title":"let discriminator: String","type":"property"},{"path":"\/documentation\/discord\/application\/team-swift.struct\/member\/membershipstate","title":"let membershipState: MembershipState","type":"property"},{"path":"\/documentation\/discord\/application\/team-swift.struct\/member\/teamid","title":"let teamId: Snowflake","type":"property"},{"path":"\/documentation\/discord\/application\/team-swift.struct\/member\/userid","title":"let userId: Snowflake","type":"property"},{"path":"\/documentation\/discord\/application\/team-swift.struct\/member\/username","title":"let userName: String","type":"property"}],"path":"\/documentation\/discord\/application\/team-swift.struct\/member","title":"Application.Team.Member","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/application\/team-swift.struct\/icon","title":"var icon: Asset?","type":"property"},{"path":"\/documentation\/discord\/application\/team-swift.struct\/id","title":"let id: Snowflake","type":"property"},{"path":"\/documentation\/discord\/application\/team-swift.struct\/members","title":"var members: [Application.Team.Member]","type":"property"},{"path":"\/documentation\/discord\/application\/team-swift.struct\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/discord\/application\/team-swift.struct\/owneruserid","title":"let ownerUserId: Snowflake","type":"property"}],"path":"\/documentation\/discord\/application\/team-swift.struct","title":"Application.Team","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/application\/botpublic","title":"let botPublic: Bool","type":"property"},{"path":"\/documentation\/discord\/application\/botrequirecodegrant","title":"let botRequireCodeGrant: Bool","type":"property"},{"path":"\/documentation\/discord\/application\/coverimage","title":"var coverImage: Asset?","type":"property"},{"path":"\/documentation\/discord\/application\/custominstallurl","title":"var customInstallUrl: String?","type":"property"},{"path":"\/documentation\/discord\/application\/description","title":"var description: String?","type":"property"},{"path":"\/documentation\/discord\/application\/flags","title":"var flags: [ApplicationFlag]?","type":"property"},{"path":"\/documentation\/discord\/application\/guildid","title":"var guildId: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/application\/icon","title":"var icon: Asset?","type":"property"},{"path":"\/documentation\/discord\/application\/id","title":"let id: Snowflake","type":"property"},{"path":"\/documentation\/discord\/application\/installparams-swift.property","title":"var installParams: InstallParams?","type":"property"},{"path":"\/documentation\/discord\/application\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/discord\/application\/ownerid","title":"var ownerId: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/application\/primaryskuid","title":"var primarySkuId: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/application\/privacypolicyurl","title":"var privacyPolicyUrl: String?","type":"property"},{"path":"\/documentation\/discord\/application\/rpcorigins","title":"var rpcOrigins: [String]?","type":"property"},{"path":"\/documentation\/discord\/application\/slug","title":"var slug: String?","type":"property"},{"path":"\/documentation\/discord\/application\/tags","title":"var tags: [String]?","type":"property"},{"path":"\/documentation\/discord\/application\/team-swift.property","title":"var team: Team?","type":"property"},{"path":"\/documentation\/discord\/application\/termsofserviceurl","title":"var termsOfServiceUrl: String?","type":"property"},{"path":"\/documentation\/discord\/application\/verifykey","title":"var verifyKey: String","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/application\/applicationflag\/embedded","title":"case embedded","type":"case"},{"path":"\/documentation\/discord\/application\/applicationflag\/gatewayguildmembers","title":"case gatewayGuildMembers","type":"case"},{"path":"\/documentation\/discord\/application\/applicationflag\/gatewayguildmemberslimited","title":"case gatewayGuildMembersLimited","type":"case"},{"path":"\/documentation\/discord\/application\/applicationflag\/gatewaymessagecontent","title":"case gatewayMessageContent","type":"case"},{"path":"\/documentation\/discord\/application\/applicationflag\/gatewaymessagecontentlimited","title":"case gatewayMessageContentLimited","type":"case"},{"path":"\/documentation\/discord\/application\/applicationflag\/gatewaypresence","title":"case gatewayPresence","type":"case"},{"path":"\/documentation\/discord\/application\/applicationflag\/gatewaypresencelimited","title":"case gatewayPresenceLimited","type":"case"},{"path":"\/documentation\/discord\/application\/applicationflag\/verificationpendingguildlimit","title":"case verificationPendingGuildLimit","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/application\/applicationflag\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/application\/applicationflag\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/application\/applicationflag\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/application\/applicationflag\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/application\/applicationflag\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/application\/applicationflag\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/application\/applicationflag","title":"Application.ApplicationFlag","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/application\/membershipstate\/accepted","title":"case accepted","type":"case"},{"path":"\/documentation\/discord\/application\/membershipstate\/invited","title":"case invited","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/application\/membershipstate\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/application\/membershipstate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/application\/membershipstate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/application\/membershipstate\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/application\/membershipstate\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/application\/membershipstate\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/application\/membershipstate","title":"Application.MembershipState","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/application\/created","title":"var created: Date","type":"property"}],"path":"\/documentation\/discord\/application\/object-implementations","title":"Object Implementations","type":"symbol"}],"path":"\/documentation\/discord\/application","title":"Application","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/applicationcommand\/applicationid","title":"let applicationId: Snowflake","type":"property"},{"path":"\/documentation\/discord\/applicationcommand\/bot","title":"var bot: Discord?","type":"property"},{"path":"\/documentation\/discord\/applicationcommand\/defaultmemberpermissions","title":"var defaultMemberPermissions: Permissions?","type":"property"},{"path":"\/documentation\/discord\/applicationcommand\/description","title":"let description: String","type":"property"},{"path":"\/documentation\/discord\/applicationcommand\/descriptionlocalizations","title":"var descriptionLocalizations: [Locale : String]?","type":"property"},{"path":"\/documentation\/discord\/applicationcommand\/dmpermission","title":"let dmPermission: Bool?","type":"property"},{"path":"\/documentation\/discord\/applicationcommand\/guild","title":"var guild: Guild?","type":"property"},{"path":"\/documentation\/discord\/applicationcommand\/guildid","title":"let guildId: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/applicationcommand\/id","title":"let id: Snowflake","type":"property"},{"path":"\/documentation\/discord\/applicationcommand\/isglobal","title":"var isGlobal: Bool","type":"property"},{"path":"\/documentation\/discord\/applicationcommand\/isnsfw","title":"let isNsfw: Bool","type":"property"},{"path":"\/documentation\/discord\/applicationcommand\/mention","title":"let mention: String?","type":"property"},{"path":"\/documentation\/discord\/applicationcommand\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/discord\/applicationcommand\/namelocalizations","title":"var nameLocalizations: [Locale : String]?","type":"property"},{"path":"\/documentation\/discord\/applicationcommand\/options","title":"var options: [ApplicationCommandOption]?","type":"property"},{"path":"\/documentation\/discord\/applicationcommand\/type","title":"let type: ApplicationCommandType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/applicationcommand\/delete()","title":"func delete() async throws","type":"method"},{"path":"\/documentation\/discord\/applicationcommand\/edit(_:)","title":"func edit(Edit...) async throws -> ApplicationCommand","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/applicationcommand\/edit\/defaultmemberpermissions(_:)","title":"case defaultMemberPermissions(Permissions?)","type":"case"},{"path":"\/documentation\/discord\/applicationcommand\/edit\/description(_:)","title":"case description(String)","type":"case"},{"path":"\/documentation\/discord\/applicationcommand\/edit\/descriptionlocalizations(_:)","title":"case descriptionLocalizations([Locale : String]?)","type":"case"},{"path":"\/documentation\/discord\/applicationcommand\/edit\/dmpermission(_:)","title":"case dmPermission(Bool)","type":"case"},{"path":"\/documentation\/discord\/applicationcommand\/edit\/name(_:)","title":"case name(String)","type":"case"},{"path":"\/documentation\/discord\/applicationcommand\/edit\/namelocalizations(_:)","title":"case nameLocalizations([Locale : String]?)","type":"case"},{"path":"\/documentation\/discord\/applicationcommand\/edit\/nsfw(_:)","title":"case nsfw(Bool)","type":"case"},{"path":"\/documentation\/discord\/applicationcommand\/edit\/options(_:)","title":"case options([ApplicationCommandOption])","type":"case"}],"path":"\/documentation\/discord\/applicationcommand\/edit","title":"ApplicationCommand.Edit","type":"enum"}],"path":"\/documentation\/discord\/applicationcommand","title":"ApplicationCommand","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/applicationcommanddata\/guildid","title":"let guildId: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/applicationcommanddata\/id","title":"let id: Snowflake","type":"property"},{"path":"\/documentation\/discord\/applicationcommanddata\/message","title":"var message: Message?","type":"property"},{"path":"\/documentation\/discord\/applicationcommanddata\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/discord\/applicationcommanddata\/options","title":"var options: [ApplicationCommandInteractionDataOption]?","type":"property"},{"path":"\/documentation\/discord\/applicationcommanddata\/results","title":"let results: Resolved","type":"property"},{"path":"\/documentation\/discord\/applicationcommanddata\/targetid","title":"let targetId: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/applicationcommanddata\/type","title":"let type: ApplicationCommandType","type":"property"}],"path":"\/documentation\/discord\/applicationcommanddata","title":"ApplicationCommandData","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/applicationcommandoption\/init(_:name:description:required:choices:channeltypes:options:namelocalizations:descriptionlocalizations:minvalue:maxvalue:minlength:maxlength:autocomplete:)","title":"init(ApplicationCommandOptionType, name: String, description: String, required: Bool, choices: [ApplicationCommandOptionChoice]?, channelTypes: [ChannelType]?, options: [ApplicationCommandOption]?, nameLocalizations: [Locale : String]?, descriptionLocalizations: [Locale : String]?, minValue: Double?, maxValue: Double?, minLength: Int?, maxLength: Int?, autocomplete: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/applicationcommandoption\/autocomplete","title":"var autocomplete: Bool","type":"property"},{"path":"\/documentation\/discord\/applicationcommandoption\/channeltypes","title":"var channelTypes: [ChannelType]?","type":"property"},{"path":"\/documentation\/discord\/applicationcommandoption\/choices","title":"var choices: [ApplicationCommandOptionChoice]?","type":"property"},{"path":"\/documentation\/discord\/applicationcommandoption\/description","title":"let description: String","type":"property"},{"path":"\/documentation\/discord\/applicationcommandoption\/descriptionlocalizations","title":"var descriptionLocalizations: [Locale : String]?","type":"property"},{"path":"\/documentation\/discord\/applicationcommandoption\/maxlength","title":"var maxLength: Int?","type":"property"},{"path":"\/documentation\/discord\/applicationcommandoption\/maxvalue","title":"var maxValue: Double?","type":"property"},{"path":"\/documentation\/discord\/applicationcommandoption\/minlength","title":"var minLength: Int?","type":"property"},{"path":"\/documentation\/discord\/applicationcommandoption\/minvalue","title":"var minValue: Double?","type":"property"},{"path":"\/documentation\/discord\/applicationcommandoption\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/discord\/applicationcommandoption\/namelocalizations","title":"var nameLocalizations: [Locale : String]?","type":"property"},{"path":"\/documentation\/discord\/applicationcommandoption\/options","title":"var options: [ApplicationCommandOption]?","type":"property"},{"path":"\/documentation\/discord\/applicationcommandoption\/required","title":"let required: Bool","type":"property"},{"path":"\/documentation\/discord\/applicationcommandoption\/type","title":"let type: ApplicationCommandOptionType","type":"property"}],"path":"\/documentation\/discord\/applicationcommandoption","title":"ApplicationCommandOption","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/applicationcommandoptionchoice\/init(name:value:namelocalizations:)-4c9vx","title":"init(name: String, value: Int, nameLocalizations: [Locale : String]?)","type":"init"},{"path":"\/documentation\/discord\/applicationcommandoptionchoice\/init(name:value:namelocalizations:)-7m9m2","title":"init(name: String, value: Double, nameLocalizations: [Locale : String]?)","type":"init"},{"path":"\/documentation\/discord\/applicationcommandoptionchoice\/init(name:value:namelocalizations:)-no7","title":"init(name: String, value: String, nameLocalizations: [Locale : String]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/applicationcommandoptionchoice\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/discord\/applicationcommandoptionchoice\/namelocalizations","title":"var nameLocalizations: [Locale : String]?","type":"property"},{"path":"\/documentation\/discord\/applicationcommandoptionchoice\/value","title":"let value: Any","type":"property"}],"path":"\/documentation\/discord\/applicationcommandoptionchoice","title":"ApplicationCommandOptionChoice","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/applicationcommandpermissions\/allowed","title":"let allowed: Bool","type":"property"},{"path":"\/documentation\/discord\/applicationcommandpermissions\/id","title":"let id: Snowflake","type":"property"},{"path":"\/documentation\/discord\/applicationcommandpermissions\/type","title":"let type: ApplicationCommandPermissionType","type":"property"}],"path":"\/documentation\/discord\/applicationcommandpermissions","title":"ApplicationCommandPermissions","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/asset\/==(_:_:)","title":"static func == (Asset, Asset) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/asset\/animated","title":"let animated: Bool","type":"property"},{"path":"\/documentation\/discord\/asset\/hash","title":"let hash: String","type":"property"},{"path":"\/documentation\/discord\/asset\/url","title":"let url: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/asset\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/asset\/download()","title":"func download() async throws -> File?","type":"method"}],"path":"\/documentation\/discord\/asset\/downloadable-implementations","title":"Downloadable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/asset\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/asset\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/asset","title":"Asset","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/asyncarchivedthreads\/makeasynciterator()","title":"func makeAsyncIterator() -> AsyncArchivedThreads","type":"method"},{"path":"\/documentation\/discord\/asyncarchivedthreads\/next()","title":"func next() async throws -> Element?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/discord\/asyncarchivedthreads\/element","title":"AsyncArchivedThreads.Element","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/asyncarchivedthreads\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/discord\/asyncarchivedthreads\/compactmap(_:)-86mjt","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/discord\/asyncarchivedthreads\/compactmap(_:)-j7wy","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/discord\/asyncarchivedthreads\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/discord\/asyncarchivedthreads\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/discord\/asyncarchivedthreads\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/discord\/asyncarchivedthreads\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/discord\/asyncarchivedthreads\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/discord\/asyncarchivedthreads\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/discord\/asyncarchivedthreads\/flatmap(_:)-6ywae","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/discord\/asyncarchivedthreads\/flatmap(_:)-98r73","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/discord\/asyncarchivedthreads\/map(_:)-2sn5h","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/discord\/asyncarchivedthreads\/map(_:)-3x595","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/discord\/asyncarchivedthreads\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/discord\/asyncarchivedthreads\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/discord\/asyncarchivedthreads\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/discord\/asyncarchivedthreads\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/discord\/asyncarchivedthreads\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/discord\/asyncarchivedthreads\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"}],"path":"\/documentation\/discord\/asyncarchivedthreads\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/discord\/asyncarchivedthreads","title":"AsyncArchivedThreads","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/auditlog\/change\/after","title":"let after: Any?","type":"property"},{"path":"\/documentation\/discord\/auditlog\/change\/before","title":"let before: Any?","type":"property"},{"path":"\/documentation\/discord\/auditlog\/change\/key","title":"let key: String","type":"property"}],"path":"\/documentation\/discord\/auditlog\/change","title":"AuditLog.Change","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/auditlog\/entry\/actiontype","title":"let actionType: Action?","type":"property"},{"path":"\/documentation\/discord\/auditlog\/entry\/changes","title":"var changes: [AuditLog.Change]","type":"property"},{"path":"\/documentation\/discord\/auditlog\/entry\/id","title":"let id: Snowflake","type":"property"},{"path":"\/documentation\/discord\/auditlog\/entry\/reason","title":"let reason: String?","type":"property"},{"path":"\/documentation\/discord\/auditlog\/entry\/targetid","title":"let targetId: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/auditlog\/entry\/userid","title":"let userId: Snowflake?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/auditlog\/entry\/created","title":"var created: Date","type":"property"}],"path":"\/documentation\/discord\/auditlog\/entry\/object-implementations","title":"Object Implementations","type":"symbol"}],"path":"\/documentation\/discord\/auditlog\/entry","title":"AuditLog.Entry","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/auditlog\/entries","title":"var entries: [AuditLog.Entry]","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/auditlog\/action\/applicationcommandpermissionupdate","title":"case applicationCommandPermissionUpdate","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/automoderationblockmessage","title":"case autoModerationBlockMessage","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/automoderationflagtochannel","title":"case autoModerationFlagToChannel","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/automoderationrulecreate","title":"case autoModerationRuleCreate","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/automoderationruledelete","title":"case autoModerationRuleDelete","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/automoderationruleupdate","title":"case autoModerationRuleUpdate","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/automoderationusercommunicationdisabled","title":"case autoModerationUserCommunicationDisabled","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/botadd","title":"case botAdd","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/channelcreate","title":"case channelCreate","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/channeldelete","title":"case channelDelete","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/channeloverwritecreate","title":"case channelOverwriteCreate","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/channeloverwritedelete","title":"case channelOverwriteDelete","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/channeloverwriteupdate","title":"case channelOverwriteUpdate","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/channelupdate","title":"case channelUpdate","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/emojicreate","title":"case emojiCreate","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/emojidelete","title":"case emojiDelete","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/emojiupdate","title":"case emojiUpdate","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/guildscheduledeventcreate","title":"case guildScheduledEventCreate","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/guildscheduledeventdelete","title":"case guildScheduledEventDelete","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/guildscheduledeventupdate","title":"case guildScheduledEventUpdate","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/guildupdate","title":"case guildUpdate","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/integrationcreate","title":"case integrationCreate","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/integrationdelete","title":"case integrationDelete","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/integrationupdate","title":"case integrationUpdate","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/invitecreate","title":"case inviteCreate","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/invitedelete","title":"case inviteDelete","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/inviteupdate","title":"case inviteUpdate","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/memberbanadd","title":"case memberBanAdd","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/memberbanremove","title":"case memberBanRemove","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/memberdisconnect","title":"case memberDisconnect","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/memberkick","title":"case memberKick","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/membermove","title":"case memberMove","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/memberprune","title":"case memberPrune","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/memberroleupdate","title":"case memberRoleUpdate","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/memberupdate","title":"case memberUpdate","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/messagebulkdelete","title":"case messageBulkDelete","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/messagedelete","title":"case messageDelete","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/messagepin","title":"case messagePin","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/messageunpin","title":"case messageUnpin","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/rolecreate","title":"case roleCreate","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/roledelete","title":"case roleDelete","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/roleupdate","title":"case roleUpdate","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/stageinstancecreate","title":"case stageInstanceCreate","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/stageinstancedelete","title":"case stageInstanceDelete","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/stageinstanceupdate","title":"case stageInstanceUpdate","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/stickercreate","title":"case stickerCreate","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/stickerdelete","title":"case stickerDelete","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/stickerupdate","title":"case stickerUpdate","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/threadcreate","title":"case threadCreate","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/threaddelete","title":"case threadDelete","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/threadupdate","title":"case threadUpdate","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/webhookcreate","title":"case webhookCreate","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/webhookdelete","title":"case webhookDelete","type":"case"},{"path":"\/documentation\/discord\/auditlog\/action\/webhookupdate","title":"case webhookUpdate","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/auditlog\/action\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/auditlog\/action\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/auditlog\/action\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/auditlog\/action\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/auditlog\/action\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/auditlog\/action\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/auditlog\/action","title":"AuditLog.Action","type":"enum"}],"path":"\/documentation\/discord\/auditlog","title":"AuditLog","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/automoderationrule\/action\/channelid","title":"let channelId: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/automoderationrule\/action\/custommessage","title":"let customMessage: String?","type":"property"},{"path":"\/documentation\/discord\/automoderationrule\/action\/duration","title":"let duration: Int?","type":"property"},{"path":"\/documentation\/discord\/automoderationrule\/action\/type","title":"let type: ActionType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/automoderationrule\/action\/blockmessage(custommessage:)","title":"static func blockMessage(customMessage: String?) -> AutoModerationRule.Action","type":"method"},{"path":"\/documentation\/discord\/automoderationrule\/action\/sendalertmessage(to:)","title":"static func sendAlertMessage(to: Snowflake) -> AutoModerationRule.Action","type":"method"},{"path":"\/documentation\/discord\/automoderationrule\/action\/timeout(duration:)","title":"static func timeout(duration: Int) -> AutoModerationRule.Action","type":"method"}],"path":"\/documentation\/discord\/automoderationrule\/action","title":"AutoModerationRule.Action","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/automoderationrule\/actionexecution\/action","title":"let action: AutoModerationRule.Action","type":"property"},{"path":"\/documentation\/discord\/automoderationrule\/actionexecution\/alertmessageid","title":"let alertMessageId: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/automoderationrule\/actionexecution\/channel","title":"let channel: GuildChannelMessageable","type":"property"},{"path":"\/documentation\/discord\/automoderationrule\/actionexecution\/content","title":"let content: String","type":"property"},{"path":"\/documentation\/discord\/automoderationrule\/actionexecution\/guild","title":"let guild: Guild","type":"property"},{"path":"\/documentation\/discord\/automoderationrule\/actionexecution\/matchedcontent","title":"let matchedContent: String?","type":"property"},{"path":"\/documentation\/discord\/automoderationrule\/actionexecution\/matchedkeyword","title":"let matchedKeyword: String?","type":"property"},{"path":"\/documentation\/discord\/automoderationrule\/actionexecution\/messageid","title":"let messageId: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/automoderationrule\/actionexecution\/ruleid","title":"let ruleId: Snowflake","type":"property"},{"path":"\/documentation\/discord\/automoderationrule\/actionexecution\/ruletriggertype","title":"let ruleTriggerType: TriggerType","type":"property"},{"path":"\/documentation\/discord\/automoderationrule\/actionexecution\/userid","title":"let userId: Snowflake","type":"property"}],"path":"\/documentation\/discord\/automoderationrule\/actionexecution","title":"AutoModerationRule.ActionExecution","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/automoderationrule\/metadata-swift.struct\/init(keywordfilter:regexpatterns:presets:allowlist:)","title":"init?(keywordFilter: Triggers?, regexPatterns: [String], presets: Set<KeywordPresetType>, allowList: Triggers?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/automoderationrule\/metadata-swift.struct\/allowlist","title":"var allowList: Triggers?","type":"property"},{"path":"\/documentation\/discord\/automoderationrule\/metadata-swift.struct\/keywordfilter","title":"var keywordFilter: Triggers?","type":"property"},{"path":"\/documentation\/discord\/automoderationrule\/metadata-swift.struct\/mentionraidprotectionenabled","title":"var mentionRaidProtectionEnabled: Bool?","type":"property"},{"path":"\/documentation\/discord\/automoderationrule\/metadata-swift.struct\/mentiontotallimit","title":"var mentionTotalLimit: Int?","type":"property"},{"path":"\/documentation\/discord\/automoderationrule\/metadata-swift.struct\/presets","title":"var presets: Set<KeywordPresetType>?","type":"property"},{"path":"\/documentation\/discord\/automoderationrule\/metadata-swift.struct\/regexpatterns","title":"var regexPatterns: [String]?","type":"property"}],"path":"\/documentation\/discord\/automoderationrule\/metadata-swift.struct","title":"AutoModerationRule.Metadata","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/automoderationrule\/triggers\/init(startswith:endswith:contains:wholeword:)","title":"init?(startsWith: [String]?, endsWith: [String]?, contains: [String]?, wholeWord: [String]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/automoderationrule\/triggers\/contains","title":"var contains: [String]","type":"property"},{"path":"\/documentation\/discord\/automoderationrule\/triggers\/endswith","title":"var endsWith: [String]","type":"property"},{"path":"\/documentation\/discord\/automoderationrule\/triggers\/startswith","title":"var startsWith: [String]","type":"property"},{"path":"\/documentation\/discord\/automoderationrule\/triggers\/wholeword","title":"var wholeWord: [String]","type":"property"},{"path":"\/documentation\/discord\/automoderationrule\/triggers\/words","title":"var words: [String]","type":"property"}],"path":"\/documentation\/discord\/automoderationrule\/triggers","title":"AutoModerationRule.Triggers","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/automoderationrule\/actions","title":"var actions: [AutoModerationRule.Action]","type":"property"},{"path":"\/documentation\/discord\/automoderationrule\/bot","title":"var bot: Discord?","type":"property"},{"path":"\/documentation\/discord\/automoderationrule\/creatorid","title":"let creatorId: Snowflake","type":"property"},{"path":"\/documentation\/discord\/automoderationrule\/enabled","title":"let enabled: Bool","type":"property"},{"path":"\/documentation\/discord\/automoderationrule\/eventtype-swift.property","title":"let eventType: EventType","type":"property"},{"path":"\/documentation\/discord\/automoderationrule\/exemptchannels","title":"var exemptChannels: [GuildChannel]","type":"property"},{"path":"\/documentation\/discord\/automoderationrule\/exemptroles","title":"var exemptRoles: [Role]","type":"property"},{"path":"\/documentation\/discord\/automoderationrule\/guild","title":"let guild: Guild","type":"property"},{"path":"\/documentation\/discord\/automoderationrule\/id","title":"let id: Snowflake","type":"property"},{"path":"\/documentation\/discord\/automoderationrule\/metadata-swift.property","title":"let metadata: Metadata","type":"property"},{"path":"\/documentation\/discord\/automoderationrule\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/discord\/automoderationrule\/triggertype-swift.property","title":"let triggerType: TriggerType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/automoderationrule\/delete(reason:)","title":"func delete(reason: String?) async throws","type":"method"},{"path":"\/documentation\/discord\/automoderationrule\/edit(_:reason:)","title":"func edit(AutoModerationRule.Edit..., reason: String?) async throws -> AutoModerationRule","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/automoderationrule\/actiontype\/blockmessage","title":"case blockMessage","type":"case"},{"path":"\/documentation\/discord\/automoderationrule\/actiontype\/sendalertmessage","title":"case sendAlertMessage","type":"case"},{"path":"\/documentation\/discord\/automoderationrule\/actiontype\/timeout","title":"case timeout","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/automoderationrule\/actiontype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/automoderationrule\/actiontype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/automoderationrule\/actiontype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/automoderationrule\/actiontype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/automoderationrule\/actiontype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/automoderationrule\/actiontype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/automoderationrule\/actiontype","title":"AutoModerationRule.ActionType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/automoderationrule\/edit\/actions(_:)","title":"case actions([AutoModerationRule.Action])","type":"case"},{"path":"\/documentation\/discord\/automoderationrule\/edit\/enabled(_:)","title":"case enabled(Bool)","type":"case"},{"path":"\/documentation\/discord\/automoderationrule\/edit\/eventtype(_:)","title":"case eventType(EventType)","type":"case"},{"path":"\/documentation\/discord\/automoderationrule\/edit\/exemptchannels(_:)","title":"case exemptChannels([GuildChannelMessageable]?)","type":"case"},{"path":"\/documentation\/discord\/automoderationrule\/edit\/exemptroles(_:)","title":"case exemptRoles([Role]?)","type":"case"},{"path":"\/documentation\/discord\/automoderationrule\/edit\/metadata(_:)","title":"case metadata(Metadata)","type":"case"},{"path":"\/documentation\/discord\/automoderationrule\/edit\/name(_:)","title":"case name(String)","type":"case"}],"path":"\/documentation\/discord\/automoderationrule\/edit","title":"AutoModerationRule.Edit","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/automoderationrule\/eventtype-swift.enum\/messagesend","title":"case messageSend","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/automoderationrule\/eventtype-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/automoderationrule\/eventtype-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/automoderationrule\/eventtype-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/automoderationrule\/eventtype-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/automoderationrule\/eventtype-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/automoderationrule\/eventtype-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/automoderationrule\/eventtype-swift.enum","title":"AutoModerationRule.EventType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/automoderationrule\/keywordpresettype\/profanity","title":"case profanity","type":"case"},{"path":"\/documentation\/discord\/automoderationrule\/keywordpresettype\/sexualcontent","title":"case sexualContent","type":"case"},{"path":"\/documentation\/discord\/automoderationrule\/keywordpresettype\/slurs","title":"case slurs","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/automoderationrule\/keywordpresettype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/automoderationrule\/keywordpresettype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/automoderationrule\/keywordpresettype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/automoderationrule\/keywordpresettype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/automoderationrule\/keywordpresettype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/automoderationrule\/keywordpresettype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/automoderationrule\/keywordpresettype","title":"AutoModerationRule.KeywordPresetType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/automoderationrule\/triggertype-swift.enum\/keyword","title":"case keyword","type":"case"},{"path":"\/documentation\/discord\/automoderationrule\/triggertype-swift.enum\/keywordpreset","title":"case keywordPreset","type":"case"},{"path":"\/documentation\/discord\/automoderationrule\/triggertype-swift.enum\/mentionspam","title":"case mentionSpam","type":"case"},{"path":"\/documentation\/discord\/automoderationrule\/triggertype-swift.enum\/spam","title":"case spam","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/automoderationrule\/triggertype-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/automoderationrule\/triggertype-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/automoderationrule\/triggertype-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/automoderationrule\/triggertype-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/automoderationrule\/triggertype-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/automoderationrule\/triggertype-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/automoderationrule\/triggertype-swift.enum","title":"AutoModerationRule.TriggerType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/automoderationrule\/created","title":"var created: Date","type":"property"}],"path":"\/documentation\/discord\/automoderationrule\/object-implementations","title":"Object Implementations","type":"symbol"}],"path":"\/documentation\/discord\/automoderationrule","title":"AutoModerationRule","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/color\/==(_:_:)","title":"static func == (Color, Color) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/color\/init(hex:)","title":"init(hex: String)","type":"init"},{"path":"\/documentation\/discord\/color\/init(r:g:b:)","title":"init(r: Int, g: Int, b: Int)","type":"init"},{"path":"\/documentation\/discord\/color\/init(value:)","title":"init(value: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/color\/ashex","title":"var asHex: String","type":"property"},{"path":"\/documentation\/discord\/color\/asrgb","title":"var asRgb: (r: Int, g: Int, b: Int)","type":"property"},{"path":"\/documentation\/discord\/color\/value","title":"var value: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/color\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/color\/black","title":"static let black: Color","type":"property"},{"path":"\/documentation\/discord\/color\/blurple","title":"static let blurple: Color","type":"property"},{"path":"\/documentation\/discord\/color\/darkblue","title":"static let darkBlue: Color","type":"property"},{"path":"\/documentation\/discord\/color\/darkgreen","title":"static let darkGreen: Color","type":"property"},{"path":"\/documentation\/discord\/color\/darktheme","title":"static let darkTheme: Color","type":"property"},{"path":"\/documentation\/discord\/color\/fuchsia","title":"static let fuchsia: Color","type":"property"},{"path":"\/documentation\/discord\/color\/gray","title":"static let gray: Color","type":"property"},{"path":"\/documentation\/discord\/color\/green","title":"static let green: Color","type":"property"},{"path":"\/documentation\/discord\/color\/orange","title":"static let orange: Color","type":"property"},{"path":"\/documentation\/discord\/color\/pink","title":"static let pink: Color","type":"property"},{"path":"\/documentation\/discord\/color\/purple","title":"static let purple: Color","type":"property"},{"path":"\/documentation\/discord\/color\/random","title":"static var random: Color","type":"property"},{"path":"\/documentation\/discord\/color\/red","title":"static let red: Color","type":"property"},{"path":"\/documentation\/discord\/color\/skyblue","title":"static let skyBlue: Color","type":"property"},{"path":"\/documentation\/discord\/color\/teal","title":"static let teal: Color","type":"property"},{"path":"\/documentation\/discord\/color\/white","title":"static let white: Color","type":"property"},{"path":"\/documentation\/discord\/color\/yellow","title":"static let yellow: Color","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/color\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/color\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/color","title":"Color","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/emoji\/==(_:_:)","title":"static func == (Emoji, Emoji) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/emoji\/animated","title":"let animated: Bool","type":"property"},{"path":"\/documentation\/discord\/emoji\/aspartial","title":"var asPartial: PartialEmoji","type":"property"},{"path":"\/documentation\/discord\/emoji\/available","title":"var available: Bool","type":"property"},{"path":"\/documentation\/discord\/emoji\/bot","title":"var bot: Discord?","type":"property"},{"path":"\/documentation\/discord\/emoji\/description","title":"let description: String","type":"property"},{"path":"\/documentation\/discord\/emoji\/guild","title":"var guild: Guild","type":"property"},{"path":"\/documentation\/discord\/emoji\/id","title":"let id: Snowflake","type":"property"},{"path":"\/documentation\/discord\/emoji\/managed","title":"let managed: Bool","type":"property"},{"path":"\/documentation\/discord\/emoji\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/discord\/emoji\/requirecolons","title":"let requireColons: Bool","type":"property"},{"path":"\/documentation\/discord\/emoji\/roles","title":"var roles: [Role]","type":"property"},{"path":"\/documentation\/discord\/emoji\/url","title":"let url: String","type":"property"},{"path":"\/documentation\/discord\/emoji\/user","title":"let user: User?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/emoji\/delete(reason:)","title":"func delete(reason: String?) async throws","type":"method"},{"path":"\/documentation\/discord\/emoji\/edit(_:reason:)","title":"func edit(Emoji.Edit..., reason: String?) async throws -> Emoji","type":"method"},{"path":"\/documentation\/discord\/emoji\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/emoji\/edit\/name(_:)","title":"case name(String)","type":"case"},{"path":"\/documentation\/discord\/emoji\/edit\/roles(_:)","title":"case roles([Role])","type":"case"}],"path":"\/documentation\/discord\/emoji\/edit","title":"Emoji.Edit","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/emoji\/download()","title":"func download() async throws -> File?","type":"method"}],"path":"\/documentation\/discord\/emoji\/downloadable-implementations","title":"Downloadable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/emoji\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/emoji\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/emoji\/created","title":"var created: Date","type":"property"}],"path":"\/documentation\/discord\/emoji\/object-implementations","title":"Object Implementations","type":"symbol"}],"path":"\/documentation\/discord\/emoji","title":"Emoji","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/file\/init(name:path:spoiler:)","title":"init(name: String, path: String, spoiler: Bool) throws","type":"init"},{"path":"\/documentation\/discord\/file\/init(name:using:spoiler:)","title":"init(name: String, using: Data, spoiler: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/file\/data","title":"let data: Data","type":"property"},{"path":"\/documentation\/discord\/file\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/discord\/file\/path","title":"let path: String","type":"property"},{"path":"\/documentation\/discord\/file\/spoiler","title":"let spoiler: Bool","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/file\/download(urls:)","title":"static func download(urls: [URL]) async throws -> [File]","type":"method"}],"path":"\/documentation\/discord\/file","title":"File","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/guildapplicationcommandpermissions\/applicationid","title":"let applicationId: Snowflake","type":"property"},{"path":"\/documentation\/discord\/guildapplicationcommandpermissions\/guildid","title":"let guildId: Snowflake","type":"property"},{"path":"\/documentation\/discord\/guildapplicationcommandpermissions\/id","title":"let id: Snowflake","type":"property"},{"path":"\/documentation\/discord\/guildapplicationcommandpermissions\/permissions","title":"let permissions: [ApplicationCommandPermissions]","type":"property"}],"path":"\/documentation\/discord\/guildapplicationcommandpermissions","title":"GuildApplicationCommandPermissions","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/guildsticker\/==(_:_:)","title":"static func == (GuildSticker, GuildSticker) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/guildsticker\/available","title":"var available: Bool","type":"property"},{"path":"\/documentation\/discord\/guildsticker\/bot","title":"var bot: Discord?","type":"property"},{"path":"\/documentation\/discord\/guildsticker\/description","title":"var description: String?","type":"property"},{"path":"\/documentation\/discord\/guildsticker\/emoji","title":"var emoji: String","type":"property"},{"path":"\/documentation\/discord\/guildsticker\/format","title":"let format: Sticker.Format","type":"property"},{"path":"\/documentation\/discord\/guildsticker\/guild","title":"var guild: Guild","type":"property"},{"path":"\/documentation\/discord\/guildsticker\/id","title":"let id: Snowflake","type":"property"},{"path":"\/documentation\/discord\/guildsticker\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/discord\/guildsticker\/user","title":"let user: User?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/guildsticker\/delete(reason:)","title":"func delete(reason: String?) async throws","type":"method"},{"path":"\/documentation\/discord\/guildsticker\/edit(_:reason:)","title":"func edit(Edit..., reason: String?) async throws -> GuildSticker","type":"method"},{"path":"\/documentation\/discord\/guildsticker\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/guildsticker\/edit\/description(_:)","title":"case description(String?)","type":"case"},{"path":"\/documentation\/discord\/guildsticker\/edit\/emoji(_:)","title":"case emoji(String)","type":"case"},{"path":"\/documentation\/discord\/guildsticker\/edit\/name(_:)","title":"case name(String)","type":"case"}],"path":"\/documentation\/discord\/guildsticker\/edit","title":"GuildSticker.Edit","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/guildsticker\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/guildsticker\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/guildsticker\/created","title":"var created: Date","type":"property"}],"path":"\/documentation\/discord\/guildsticker\/object-implementations","title":"Object Implementations","type":"symbol"}],"path":"\/documentation\/discord\/guildsticker","title":"GuildSticker","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/markdown\/blockquote(_:multiline:)","title":"static func blockQuote(String, multiline: Bool) -> String","type":"method"},{"path":"\/documentation\/discord\/markdown\/bold(_:)","title":"static func bold(String) -> String","type":"method"},{"path":"\/documentation\/discord\/markdown\/codeblock(language:_:)","title":"static func codeBlock(language: String?, String) -> String","type":"method"},{"path":"\/documentation\/discord\/markdown\/customemoji(name:id:animated:)","title":"static func customEmoji(name: String, id: Snowflake, animated: Bool) -> String","type":"method"},{"path":"\/documentation\/discord\/markdown\/escape(_:ignoreurls:)","title":"static func escape(String, ignoreUrls: Bool) -> String","type":"method"},{"path":"\/documentation\/discord\/markdown\/header(size:_:)","title":"static func header(size: Int, String) -> String","type":"method"},{"path":"\/documentation\/discord\/markdown\/inlinecode(_:)","title":"static func inlineCode(String) -> String","type":"method"},{"path":"\/documentation\/discord\/markdown\/italic(_:)","title":"static func italic(String) -> String","type":"method"},{"path":"\/documentation\/discord\/markdown\/list(_:)","title":"static func list(any Sequence<String>) -> String","type":"method"},{"path":"\/documentation\/discord\/markdown\/maskedlink(title:url:)","title":"static func maskedLink(title: String, url: String) -> String","type":"method"},{"path":"\/documentation\/discord\/markdown\/mentionchannel(id:)","title":"static func mentionChannel(id: Snowflake) -> String","type":"method"},{"path":"\/documentation\/discord\/markdown\/mentionrole(id:)","title":"static func mentionRole(id: Snowflake) -> String","type":"method"},{"path":"\/documentation\/discord\/markdown\/mentionslashcommand(name:id:)","title":"static func mentionSlashCommand(name: String, id: Snowflake) -> String","type":"method"},{"path":"\/documentation\/discord\/markdown\/mentionuser(id:)","title":"static func mentionUser(id: Snowflake) -> String","type":"method"},{"path":"\/documentation\/discord\/markdown\/spoiler(_:)","title":"static func spoiler(String) -> String","type":"method"},{"path":"\/documentation\/discord\/markdown\/strikethrough(_:)","title":"static func strikethrough(String) -> String","type":"method"},{"path":"\/documentation\/discord\/markdown\/suppresslinkembed(url:)","title":"static func suppressLinkEmbed(url: String) -> String","type":"method"},{"path":"\/documentation\/discord\/markdown\/timestamp(date:style:)","title":"static func timestamp(date: Date, style: TimestampStyle) -> String","type":"method"},{"path":"\/documentation\/discord\/markdown\/underline(_:)","title":"static func underline(String) -> String","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/markdown\/timestampstyle\/d-9n85u","title":"case D","type":"case"},{"path":"\/documentation\/discord\/markdown\/timestampstyle\/f-8o8oz","title":"case F","type":"case"},{"path":"\/documentation\/discord\/markdown\/timestampstyle\/r","title":"case R","type":"case"},{"path":"\/documentation\/discord\/markdown\/timestampstyle\/t-97sj3","title":"case T","type":"case"},{"path":"\/documentation\/discord\/markdown\/timestampstyle\/d-8km2d","title":"case d","type":"case"},{"path":"\/documentation\/discord\/markdown\/timestampstyle\/f-mx14","title":"case f","type":"case"},{"path":"\/documentation\/discord\/markdown\/timestampstyle\/t-jk0c","title":"case t","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/markdown\/timestampstyle\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/markdown\/timestampstyle\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/markdown\/timestampstyle\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/markdown\/timestampstyle\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/markdown\/timestampstyle\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/markdown\/timestampstyle\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/markdown\/timestampstyle","title":"Markdown.TimestampStyle","type":"enum"}],"path":"\/documentation\/discord\/markdown","title":"Markdown","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/messagecomponentdata\/componenttype","title":"let componentType: ComponentType","type":"property"},{"path":"\/documentation\/discord\/messagecomponentdata\/customid","title":"let customId: String","type":"property"},{"path":"\/documentation\/discord\/messagecomponentdata\/results","title":"var results: Resolved","type":"property"}],"path":"\/documentation\/discord\/messagecomponentdata","title":"MessageComponentData","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/modal\/init(title:customid:inputs:onsubmit:)","title":"init(title: String, customId: String, inputs: [TextInput], onSubmit: (Interaction) async -> Void)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/modal\/customid","title":"var customId: String","type":"property"},{"path":"\/documentation\/discord\/modal\/inputs","title":"var inputs: [TextInput]","type":"property"},{"path":"\/documentation\/discord\/modal\/onsubmit","title":"var onSubmit: (Interaction) async -> Void","type":"property"},{"path":"\/documentation\/discord\/modal\/title","title":"var title: String","type":"property"}],"path":"\/documentation\/discord\/modal","title":"Modal","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/modalsubmitdata\/customid","title":"let customId: String","type":"property"},{"path":"\/documentation\/discord\/modalsubmitdata\/results","title":"var results: [(inputId: String, value: String)]","type":"property"}],"path":"\/documentation\/discord\/modalsubmitdata","title":"ModalSubmitData","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/partialemoji\/init(_:)","title":"init(String)","type":"init"},{"path":"\/documentation\/discord\/partialemoji\/init(id:name:animated:)","title":"init(id: Snowflake, name: String, animated: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/partialemoji\/animated","title":"var animated: Bool?","type":"property"},{"path":"\/documentation\/discord\/partialemoji\/description","title":"var description: String?","type":"property"},{"path":"\/documentation\/discord\/partialemoji\/id","title":"let id: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/partialemoji\/name","title":"let name: String?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/partialemoji\/fromstring(_:)","title":"static func fromString(String) -> PartialEmoji","type":"method"}],"path":"\/documentation\/discord\/partialemoji","title":"PartialEmoji","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/partialinvitechannel\/id","title":"let id: Snowflake","type":"property"},{"path":"\/documentation\/discord\/partialinvitechannel\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/discord\/partialinvitechannel\/type","title":"let type: ChannelType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/partialinvitechannel\/created","title":"var created: Date","type":"property"}],"path":"\/documentation\/discord\/partialinvitechannel\/object-implementations","title":"Object Implementations","type":"symbol"}],"path":"\/documentation\/discord\/partialinvitechannel","title":"PartialInviteChannel","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/partialinviteguild\/banner","title":"var banner: Asset?","type":"property"},{"path":"\/documentation\/discord\/partialinviteguild\/description","title":"let description: String?","type":"property"},{"path":"\/documentation\/discord\/partialinviteguild\/features","title":"var features: [Guild.Feature]","type":"property"},{"path":"\/documentation\/discord\/partialinviteguild\/icon","title":"var icon: Asset?","type":"property"},{"path":"\/documentation\/discord\/partialinviteguild\/id","title":"let id: Snowflake","type":"property"},{"path":"\/documentation\/discord\/partialinviteguild\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/discord\/partialinviteguild\/nsfwlevel","title":"let nsfwLevel: Guild.NSFWLevel","type":"property"},{"path":"\/documentation\/discord\/partialinviteguild\/premiumsubscriptioncount","title":"let premiumSubscriptionCount: Int?","type":"property"},{"path":"\/documentation\/discord\/partialinviteguild\/splash","title":"var splash: Asset?","type":"property"},{"path":"\/documentation\/discord\/partialinviteguild\/vanityurlcode","title":"let vanityUrlCode: String?","type":"property"},{"path":"\/documentation\/discord\/partialinviteguild\/verificationlevel","title":"let verificationLevel: Guild.VerificationLevel","type":"property"},{"path":"\/documentation\/discord\/partialinviteguild\/welcomescreen","title":"var welcomeScreen: Guild.WelcomeScreen?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/partialinviteguild\/created","title":"var created: Date","type":"property"}],"path":"\/documentation\/discord\/partialinviteguild\/object-implementations","title":"Object Implementations","type":"symbol"}],"path":"\/documentation\/discord\/partialinviteguild","title":"PartialInviteGuild","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/permissionoverwrites\/init(for:id:enable:disable:)","title":"init(for: OverwriteType, id: Snowflake, enable: Set<Permission>, disable: Set<Permission>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/permissionoverwrites\/disabled","title":"let disabled: Set<Permission>","type":"property"},{"path":"\/documentation\/discord\/permissionoverwrites\/enabled","title":"let enabled: Set<Permission>","type":"property"},{"path":"\/documentation\/discord\/permissionoverwrites\/id","title":"let id: Snowflake","type":"property"},{"path":"\/documentation\/discord\/permissionoverwrites\/type","title":"let type: OverwriteType","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/permissionoverwrites\/overwritetype\/role","title":"case role","type":"case"},{"path":"\/documentation\/discord\/permissionoverwrites\/overwritetype\/user","title":"case user","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/permissionoverwrites\/overwritetype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/permissionoverwrites\/overwritetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/permissionoverwrites\/overwritetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/permissionoverwrites\/overwritetype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/permissionoverwrites\/overwritetype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/permissionoverwrites\/overwritetype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/permissionoverwrites\/overwritetype","title":"PermissionOverwrites.OverwriteType","type":"enum"}],"path":"\/documentation\/discord\/permissionoverwrites","title":"PermissionOverwrites","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/resolved\/attachments","title":"var attachments: [Message.Attachment]","type":"property"},{"path":"\/documentation\/discord\/resolved\/channels","title":"var channels: [Snowflake]","type":"property"},{"path":"\/documentation\/discord\/resolved\/roles","title":"var roles: [Snowflake]","type":"property"},{"path":"\/documentation\/discord\/resolved\/texts","title":"var texts: [String]","type":"property"},{"path":"\/documentation\/discord\/resolved\/users","title":"var users: [Snowflake]","type":"property"}],"path":"\/documentation\/discord\/resolved","title":"Resolved","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/stageinstance\/==(_:_:)","title":"static func == (StageInstance, StageInstance) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/stageinstance\/bot","title":"var bot: Discord?","type":"property"},{"path":"\/documentation\/discord\/stageinstance\/channelid","title":"let channelId: Snowflake","type":"property"},{"path":"\/documentation\/discord\/stageinstance\/guild","title":"var guild: Guild","type":"property"},{"path":"\/documentation\/discord\/stageinstance\/guildscheduledeventid","title":"let guildScheduledEventId: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/stageinstance\/id","title":"let id: Snowflake","type":"property"},{"path":"\/documentation\/discord\/stageinstance\/mention","title":"let mention: String","type":"property"},{"path":"\/documentation\/discord\/stageinstance\/privacylevel-swift.property","title":"var privacyLevel: StageInstance.PrivacyLevel","type":"property"},{"path":"\/documentation\/discord\/stageinstance\/topic","title":"var topic: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/stageinstance\/delete(reason:)","title":"func delete(reason: String?) async throws","type":"method"},{"path":"\/documentation\/discord\/stageinstance\/edit(topic:reason:)","title":"func edit(topic: String, reason: String?) async throws -> StageInstance","type":"method"},{"path":"\/documentation\/discord\/stageinstance\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/stageinstance\/privacylevel-swift.enum\/guildonly","title":"case guildOnly","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/stageinstance\/privacylevel-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/stageinstance\/privacylevel-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/stageinstance\/privacylevel-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/stageinstance\/privacylevel-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/stageinstance\/privacylevel-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/stageinstance\/privacylevel-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/stageinstance\/privacylevel-swift.enum","title":"StageInstance.PrivacyLevel","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/stageinstance\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/stageinstance\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/stageinstance","title":"StageInstance","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/sticker\/item\/format","title":"let format: Format","type":"property"},{"path":"\/documentation\/discord\/sticker\/item\/id","title":"let id: Snowflake","type":"property"},{"path":"\/documentation\/discord\/sticker\/item\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/discord\/sticker\/item\/url","title":"let url: String","type":"property"}],"path":"\/documentation\/discord\/sticker\/item","title":"Sticker.Item","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/sticker\/pack\/bannerassetid","title":"let bannerAssetId: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/sticker\/pack\/coverstickerid","title":"let coverStickerId: Snowflake?","type":"property"},{"path":"\/documentation\/discord\/sticker\/pack\/description","title":"let description: String","type":"property"},{"path":"\/documentation\/discord\/sticker\/pack\/id","title":"let id: Snowflake","type":"property"},{"path":"\/documentation\/discord\/sticker\/pack\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/discord\/sticker\/pack\/skuid","title":"let skuId: Snowflake","type":"property"},{"path":"\/documentation\/discord\/sticker\/pack\/stickers","title":"var stickers: [Sticker]","type":"property"}],"path":"\/documentation\/discord\/sticker\/pack","title":"Sticker.Pack","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/sticker\/description","title":"let description: String?","type":"property"},{"path":"\/documentation\/discord\/sticker\/format-swift.property","title":"let format: Format","type":"property"},{"path":"\/documentation\/discord\/sticker\/id","title":"let id: Snowflake","type":"property"},{"path":"\/documentation\/discord\/sticker\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/discord\/sticker\/packid","title":"let packId: Snowflake?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/sticker\/format-swift.enum\/apng","title":"case apng","type":"case"},{"path":"\/documentation\/discord\/sticker\/format-swift.enum\/lottie","title":"case lottie","type":"case"},{"path":"\/documentation\/discord\/sticker\/format-swift.enum\/png","title":"case png","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/sticker\/format-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/sticker\/format-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/sticker\/format-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/sticker\/format-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/sticker\/format-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/sticker\/format-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/sticker\/format-swift.enum","title":"Sticker.Format","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/sticker\/created","title":"var created: Date","type":"property"}],"path":"\/documentation\/discord\/sticker\/object-implementations","title":"Object Implementations","type":"symbol"}],"path":"\/documentation\/discord\/sticker","title":"Sticker","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/version\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/discord\/version\/major","title":"let major: Int","type":"property"},{"path":"\/documentation\/discord\/version\/minor","title":"let minor: Int","type":"property"},{"path":"\/documentation\/discord\/version\/patch","title":"let patch: Int","type":"property"},{"path":"\/documentation\/discord\/version\/releaselevel","title":"let releaseLevel: ReleaseLevel","type":"property"}],"path":"\/documentation\/discord\/version","title":"Version","type":"struct"},{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/discord\/discordepoch","title":"let discordEpoch: Snowflake","type":"var"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/discord\/channellink(guildid:channelid:)","title":"func channelLink(guildId: Snowflake, channelId: Snowflake) -> String","type":"func"},{"path":"\/documentation\/discord\/getvariable(_:)","title":"func getVariable(String) -> String?","type":"func"},{"path":"\/documentation\/discord\/messagelink(guildid:channelid:messageid:)","title":"func messageLink(guildId: Snowflake, channelId: Snowflake, messageId: Snowflake) -> String","type":"func"},{"path":"\/documentation\/discord\/oauth2url(botid:permissions:guildid:disableguildselect:scopes:redirecturi:state:)","title":"func oauth2Url(botId: Snowflake, permissions: Permissions, guildId: Snowflake?, disableGuildSelect: Bool, scopes: Set<OAuth2Scopes>, redirectUri: String?, state: String?) -> String","type":"func"},{"path":"\/documentation\/discord\/sleep(_:)","title":"func sleep(Int) async","type":"func"},{"path":"\/documentation\/discord\/snowflakedate(_:)","title":"func snowflakeDate(Snowflake) -> Date","type":"func"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/discord\/snowflake","title":"Snowflake","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/applicationcommandoptiontype\/attachment","title":"case attachment","type":"case"},{"path":"\/documentation\/discord\/applicationcommandoptiontype\/boolean","title":"case boolean","type":"case"},{"path":"\/documentation\/discord\/applicationcommandoptiontype\/channel","title":"case channel","type":"case"},{"path":"\/documentation\/discord\/applicationcommandoptiontype\/double","title":"case double","type":"case"},{"path":"\/documentation\/discord\/applicationcommandoptiontype\/integer","title":"case integer","type":"case"},{"path":"\/documentation\/discord\/applicationcommandoptiontype\/mentionable","title":"case mentionable","type":"case"},{"path":"\/documentation\/discord\/applicationcommandoptiontype\/role","title":"case role","type":"case"},{"path":"\/documentation\/discord\/applicationcommandoptiontype\/string","title":"case string","type":"case"},{"path":"\/documentation\/discord\/applicationcommandoptiontype\/subcommand","title":"case subCommand","type":"case"},{"path":"\/documentation\/discord\/applicationcommandoptiontype\/subcommandgroup","title":"case subCommandGroup","type":"case"},{"path":"\/documentation\/discord\/applicationcommandoptiontype\/user","title":"case user","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/applicationcommandoptiontype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/applicationcommandoptiontype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/applicationcommandoptiontype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/applicationcommandoptiontype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/applicationcommandoptiontype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/applicationcommandoptiontype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/applicationcommandoptiontype","title":"ApplicationCommandOptionType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/applicationcommandpermissiontype\/allchannels","title":"case allChannels","type":"case"},{"path":"\/documentation\/discord\/applicationcommandpermissiontype\/channel","title":"case channel","type":"case"},{"path":"\/documentation\/discord\/applicationcommandpermissiontype\/everyone","title":"case everyone","type":"case"},{"path":"\/documentation\/discord\/applicationcommandpermissiontype\/role","title":"case role","type":"case"},{"path":"\/documentation\/discord\/applicationcommandpermissiontype\/user","title":"case user","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/applicationcommandpermissiontype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/applicationcommandpermissiontype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/applicationcommandpermissiontype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/applicationcommandpermissiontype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/applicationcommandpermissiontype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/applicationcommandpermissiontype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/applicationcommandpermissiontype","title":"ApplicationCommandPermissionType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/applicationcommandtype\/message","title":"case message","type":"case"},{"path":"\/documentation\/discord\/applicationcommandtype\/slashcommand","title":"case slashCommand","type":"case"},{"path":"\/documentation\/discord\/applicationcommandtype\/user","title":"case user","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/applicationcommandtype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/applicationcommandtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/applicationcommandtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/applicationcommandtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/applicationcommandtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/applicationcommandtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/applicationcommandtype","title":"ApplicationCommandType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/channeltype\/announcementthread","title":"case announcementThread","type":"case"},{"path":"\/documentation\/discord\/channeltype\/dm","title":"case dm","type":"case"},{"path":"\/documentation\/discord\/channeltype\/guildannouncement","title":"case guildAnnouncement","type":"case"},{"path":"\/documentation\/discord\/channeltype\/guildcategory","title":"case guildCategory","type":"case"},{"path":"\/documentation\/discord\/channeltype\/guildforum","title":"case guildForum","type":"case"},{"path":"\/documentation\/discord\/channeltype\/guildmedia","title":"case guildMedia","type":"case"},{"path":"\/documentation\/discord\/channeltype\/guildstagevoice","title":"case guildStageVoice","type":"case"},{"path":"\/documentation\/discord\/channeltype\/guildtext","title":"case guildText","type":"case"},{"path":"\/documentation\/discord\/channeltype\/guildvoice","title":"case guildVoice","type":"case"},{"path":"\/documentation\/discord\/channeltype\/privatethread","title":"case privateThread","type":"case"},{"path":"\/documentation\/discord\/channeltype\/publicthread","title":"case publicThread","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/channeltype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/channeltype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/channeltype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/channeltype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/channeltype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/channeltype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/channeltype","title":"ChannelType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/componenttype\/actionrow","title":"case actionRow","type":"case"},{"path":"\/documentation\/discord\/componenttype\/button","title":"case button","type":"case"},{"path":"\/documentation\/discord\/componenttype\/channelselect","title":"case channelSelect","type":"case"},{"path":"\/documentation\/discord\/componenttype\/mentionableselect","title":"case mentionableSelect","type":"case"},{"path":"\/documentation\/discord\/componenttype\/roleselect","title":"case roleSelect","type":"case"},{"path":"\/documentation\/discord\/componenttype\/selectmenu","title":"case selectMenu","type":"case"},{"path":"\/documentation\/discord\/componenttype\/textinput","title":"case textInput","type":"case"},{"path":"\/documentation\/discord\/componenttype\/userselect","title":"case userSelect","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/componenttype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/componenttype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/componenttype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/componenttype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/componenttype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/componenttype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/componenttype","title":"ComponentType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/discorderror\/generic(_:)","title":"case generic(String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/discorderror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/discord\/discorderror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/discord\/discorderror","title":"DiscordError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/discordevent\/applicationcommandpermissionsupdate","title":"case applicationCommandPermissionsUpdate","type":"case"},{"path":"\/documentation\/discord\/discordevent\/automoderationactionexecution","title":"case autoModerationActionExecution","type":"case"},{"path":"\/documentation\/discord\/discordevent\/automoderationrulecreate","title":"case autoModerationRuleCreate","type":"case"},{"path":"\/documentation\/discord\/discordevent\/automoderationruledelete","title":"case autoModerationRuleDelete","type":"case"},{"path":"\/documentation\/discord\/discordevent\/automoderationruleupdate","title":"case autoModerationRuleUpdate","type":"case"},{"path":"\/documentation\/discord\/discordevent\/channelcreate","title":"case channelCreate","type":"case"},{"path":"\/documentation\/discord\/discordevent\/channeldelete","title":"case channelDelete","type":"case"},{"path":"\/documentation\/discord\/discordevent\/channelpinsupdate","title":"case channelPinsUpdate","type":"case"},{"path":"\/documentation\/discord\/discordevent\/channelupdate","title":"case channelUpdate","type":"case"},{"path":"\/documentation\/discord\/discordevent\/guildauditlogcreate","title":"case guildAuditLogCreate","type":"case"},{"path":"\/documentation\/discord\/discordevent\/guildban","title":"case guildBan","type":"case"},{"path":"\/documentation\/discord\/discordevent\/guildcreate","title":"case guildCreate","type":"case"},{"path":"\/documentation\/discord\/discordevent\/guilddelete","title":"case guildDelete","type":"case"},{"path":"\/documentation\/discord\/discordevent\/guildemojisupdate","title":"case guildEmojisUpdate","type":"case"},{"path":"\/documentation\/discord\/discordevent\/guildintegrationsupdate","title":"case guildIntegrationsUpdate","type":"case"},{"path":"\/documentation\/discord\/discordevent\/guildmemberjoin","title":"case guildMemberJoin","type":"case"},{"path":"\/documentation\/discord\/discordevent\/guildmemberremove","title":"case guildMemberRemove","type":"case"},{"path":"\/documentation\/discord\/discordevent\/guildmemberupdate","title":"case guildMemberUpdate","type":"case"},{"path":"\/documentation\/discord\/discordevent\/guildmemberschunk","title":"case guildMembersChunk","type":"case"},{"path":"\/documentation\/discord\/discordevent\/guildrolecreate","title":"case guildRoleCreate","type":"case"},{"path":"\/documentation\/discord\/discordevent\/guildroledelete","title":"case guildRoleDelete","type":"case"},{"path":"\/documentation\/discord\/discordevent\/guildroleupdate","title":"case guildRoleUpdate","type":"case"},{"path":"\/documentation\/discord\/discordevent\/guildscheduledeventcreate","title":"case guildScheduledEventCreate","type":"case"},{"path":"\/documentation\/discord\/discordevent\/guildscheduledeventdelete","title":"case guildScheduledEventDelete","type":"case"},{"path":"\/documentation\/discord\/discordevent\/guildscheduledeventupdate","title":"case guildScheduledEventUpdate","type":"case"},{"path":"\/documentation\/discord\/discordevent\/guildscheduledeventuseradd","title":"case guildScheduledEventUserAdd","type":"case"},{"path":"\/documentation\/discord\/discordevent\/guildscheduledeventuserremove","title":"case guildScheduledEventUserRemove","type":"case"},{"path":"\/documentation\/discord\/discordevent\/guildstickersupdate","title":"case guildStickersUpdate","type":"case"},{"path":"\/documentation\/discord\/discordevent\/guildunban","title":"case guildUnban","type":"case"},{"path":"\/documentation\/discord\/discordevent\/guildupdate","title":"case guildUpdate","type":"case"},{"path":"\/documentation\/discord\/discordevent\/integrationcreate","title":"case integrationCreate","type":"case"},{"path":"\/documentation\/discord\/discordevent\/integrationdelete","title":"case integrationDelete","type":"case"},{"path":"\/documentation\/discord\/discordevent\/integrationupdate","title":"case integrationUpdate","type":"case"},{"path":"\/documentation\/discord\/discordevent\/interactioncreate","title":"case interactionCreate","type":"case"},{"path":"\/documentation\/discord\/discordevent\/invalidsession","title":"case invalidSession","type":"case"},{"path":"\/documentation\/discord\/discordevent\/invitecreate","title":"case inviteCreate","type":"case"},{"path":"\/documentation\/discord\/discordevent\/invitedelete","title":"case inviteDelete","type":"case"},{"path":"\/documentation\/discord\/discordevent\/messagecreate","title":"case messageCreate","type":"case"},{"path":"\/documentation\/discord\/discordevent\/messagedelete","title":"case messageDelete","type":"case"},{"path":"\/documentation\/discord\/discordevent\/messagedeletebulk","title":"case messageDeleteBulk","type":"case"},{"path":"\/documentation\/discord\/discordevent\/messagereactionadd","title":"case messageReactionAdd","type":"case"},{"path":"\/documentation\/discord\/discordevent\/messagereactionremove","title":"case messageReactionRemove","type":"case"},{"path":"\/documentation\/discord\/discordevent\/messagereactionremoveall","title":"case messageReactionRemoveAll","type":"case"},{"path":"\/documentation\/discord\/discordevent\/messagereactionremoveemoji","title":"case messageReactionRemoveEmoji","type":"case"},{"path":"\/documentation\/discord\/discordevent\/messageupdate","title":"case messageUpdate","type":"case"},{"path":"\/documentation\/discord\/discordevent\/presenceupdate","title":"case presenceUpdate","type":"case"},{"path":"\/documentation\/discord\/discordevent\/ready","title":"case ready","type":"case"},{"path":"\/documentation\/discord\/discordevent\/reconnect","title":"case reconnect","type":"case"},{"path":"\/documentation\/discord\/discordevent\/resumed","title":"case resumed","type":"case"},{"path":"\/documentation\/discord\/discordevent\/stageinstancecreate","title":"case stageInstanceCreate","type":"case"},{"path":"\/documentation\/discord\/discordevent\/stageinstancedelete","title":"case stageInstanceDelete","type":"case"},{"path":"\/documentation\/discord\/discordevent\/stageinstanceupdate","title":"case stageInstanceUpdate","type":"case"},{"path":"\/documentation\/discord\/discordevent\/threadcreate","title":"case threadCreate","type":"case"},{"path":"\/documentation\/discord\/discordevent\/threaddelete","title":"case threadDelete","type":"case"},{"path":"\/documentation\/discord\/discordevent\/threadlistsync","title":"case threadListSync","type":"case"},{"path":"\/documentation\/discord\/discordevent\/threadmemberupdate","title":"case threadMemberUpdate","type":"case"},{"path":"\/documentation\/discord\/discordevent\/threadmembersupdate","title":"case threadMembersUpdate","type":"case"},{"path":"\/documentation\/discord\/discordevent\/threadupdate","title":"case threadUpdate","type":"case"},{"path":"\/documentation\/discord\/discordevent\/typingstart","title":"case typingStart","type":"case"},{"path":"\/documentation\/discord\/discordevent\/userupdate","title":"case userUpdate","type":"case"},{"path":"\/documentation\/discord\/discordevent\/voiceserverupdate","title":"case voiceServerUpdate","type":"case"},{"path":"\/documentation\/discord\/discordevent\/voicestateupdate","title":"case voiceStateUpdate","type":"case"},{"path":"\/documentation\/discord\/discordevent\/webhooksupdate","title":"case webhooksUpdate","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/discordevent\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/discordevent\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/discordevent\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/discordevent\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/discordevent\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/discordevent\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/discordevent","title":"DiscordEvent","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/fileerror\/notfound(_:)","title":"case notFound(String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/fileerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/discord\/fileerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/discord\/fileerror","title":"FileError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/gatewayerror\/alreadyauthenticated(_:)","title":"case alreadyAuthenticated(String)","type":"case"},{"path":"\/documentation\/discord\/gatewayerror\/authenticationfailed(_:)","title":"case authenticationFailed(String)","type":"case"},{"path":"\/documentation\/discord\/gatewayerror\/decodeerror(_:)","title":"case decodeError(String)","type":"case"},{"path":"\/documentation\/discord\/gatewayerror\/disallowedintents(_:)","title":"case disallowedIntents(String)","type":"case"},{"path":"\/documentation\/discord\/gatewayerror\/invalidapiversion(_:)","title":"case invalidApiVersion(String)","type":"case"},{"path":"\/documentation\/discord\/gatewayerror\/invalidintents(_:)","title":"case invalidIntents(String)","type":"case"},{"path":"\/documentation\/discord\/gatewayerror\/invalidseq(_:)","title":"case invalidSeq(String)","type":"case"},{"path":"\/documentation\/discord\/gatewayerror\/invalidshard(_:)","title":"case invalidShard(String)","type":"case"},{"path":"\/documentation\/discord\/gatewayerror\/notauthenticated(_:)","title":"case notAuthenticated(String)","type":"case"},{"path":"\/documentation\/discord\/gatewayerror\/ratelimited(_:)","title":"case rateLimited(String)","type":"case"},{"path":"\/documentation\/discord\/gatewayerror\/sessiontimedout(_:)","title":"case sessionTimedOut(String)","type":"case"},{"path":"\/documentation\/discord\/gatewayerror\/shardingrequired(_:)","title":"case shardingRequired(String)","type":"case"},{"path":"\/documentation\/discord\/gatewayerror\/unknownerror(_:)","title":"case unknownError(String)","type":"case"},{"path":"\/documentation\/discord\/gatewayerror\/unknownopcode(_:)","title":"case unknownOpcode(String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/gatewayerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/discord\/gatewayerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/discord\/gatewayerror","title":"GatewayError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/httperror\/badrequest(_:)","title":"case badRequest(String)","type":"case"},{"path":"\/documentation\/discord\/httperror\/base(_:)","title":"case base(String)","type":"case"},{"path":"\/documentation\/discord\/httperror\/forbidden(_:)","title":"case forbidden(String)","type":"case"},{"path":"\/documentation\/discord\/httperror\/gatewayunavailable(_:)","title":"case gatewayUnavailable(String)","type":"case"},{"path":"\/documentation\/discord\/httperror\/methodnotallowed(_:)","title":"case methodNotAllowed(String)","type":"case"},{"path":"\/documentation\/discord\/httperror\/notfound(_:)","title":"case notFound(String)","type":"case"},{"path":"\/documentation\/discord\/httperror\/unauthorized(_:)","title":"case unauthorized(String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/httperror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/discord\/httperror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/discord\/httperror","title":"HTTPError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/intents\/automoderationconfiguration","title":"case autoModerationConfiguration","type":"case"},{"path":"\/documentation\/discord\/intents\/automoderationexecution","title":"case autoModerationExecution","type":"case"},{"path":"\/documentation\/discord\/intents\/dmmessages","title":"case dmMessages","type":"case"},{"path":"\/documentation\/discord\/intents\/dmreactions","title":"case dmReactions","type":"case"},{"path":"\/documentation\/discord\/intents\/dmtyping","title":"case dmTyping","type":"case"},{"path":"\/documentation\/discord\/intents\/guildemojisandstickers","title":"case guildEmojisAndStickers","type":"case"},{"path":"\/documentation\/discord\/intents\/guildintegrations","title":"case guildIntegrations","type":"case"},{"path":"\/documentation\/discord\/intents\/guildinvites","title":"case guildInvites","type":"case"},{"path":"\/documentation\/discord\/intents\/guildmembers","title":"case guildMembers","type":"case"},{"path":"\/documentation\/discord\/intents\/guildmessagereactions","title":"case guildMessageReactions","type":"case"},{"path":"\/documentation\/discord\/intents\/guildmessagetyping","title":"case guildMessageTyping","type":"case"},{"path":"\/documentation\/discord\/intents\/guildmessages","title":"case guildMessages","type":"case"},{"path":"\/documentation\/discord\/intents\/guildmoderation","title":"case guildModeration","type":"case"},{"path":"\/documentation\/discord\/intents\/guildpresences","title":"case guildPresences","type":"case"},{"path":"\/documentation\/discord\/intents\/guildscheduledevents","title":"case guildScheduledEvents","type":"case"},{"path":"\/documentation\/discord\/intents\/guildvoicestates","title":"case guildVoiceStates","type":"case"},{"path":"\/documentation\/discord\/intents\/guildwebhooks","title":"case guildWebhooks","type":"case"},{"path":"\/documentation\/discord\/intents\/guilds","title":"case guilds","type":"case"},{"path":"\/documentation\/discord\/intents\/messagecontent","title":"case messageContent","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/intents\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/intents\/all","title":"static let all: Set<Intents>","type":"property"},{"path":"\/documentation\/discord\/intents\/default","title":"static let `default`: Set<Intents>","type":"property"},{"path":"\/documentation\/discord\/intents\/none","title":"static let none: Set<Intents>","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/intents\/all(except:)","title":"static func all(except: Set<Intents>) -> Set<Intents>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/intents\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/intents\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/intents\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/intents\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/intents\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/intents","title":"Intents","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/interactioncallbacktype\/applicationcommandautocompleteresult","title":"case applicationCommandAutocompleteResult","type":"case"},{"path":"\/documentation\/discord\/interactioncallbacktype\/channelmessagewithsource","title":"case channelMessageWithSource","type":"case"},{"path":"\/documentation\/discord\/interactioncallbacktype\/deferredchannelmessagewithsource","title":"case deferredChannelMessageWithSource","type":"case"},{"path":"\/documentation\/discord\/interactioncallbacktype\/deferredupdatemessage","title":"case deferredUpdateMessage","type":"case"},{"path":"\/documentation\/discord\/interactioncallbacktype\/modal","title":"case modal","type":"case"},{"path":"\/documentation\/discord\/interactioncallbacktype\/pong","title":"case pong","type":"case"},{"path":"\/documentation\/discord\/interactioncallbacktype\/updatemessage","title":"case updateMessage","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/interactioncallbacktype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/interactioncallbacktype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/interactioncallbacktype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/interactioncallbacktype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/interactioncallbacktype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/interactioncallbacktype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/interactioncallbacktype","title":"InteractionCallbackType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/interactiontype\/applicationcommand","title":"case applicationCommand","type":"case"},{"path":"\/documentation\/discord\/interactiontype\/applicationcommandautocomplete","title":"case applicationCommandAutocomplete","type":"case"},{"path":"\/documentation\/discord\/interactiontype\/messagecomponent","title":"case messageComponent","type":"case"},{"path":"\/documentation\/discord\/interactiontype\/modalsubmit","title":"case modalSubmit","type":"case"},{"path":"\/documentation\/discord\/interactiontype\/ping","title":"case ping","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/interactiontype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/interactiontype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/interactiontype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/interactiontype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/interactiontype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/interactiontype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/interactiontype","title":"InteractionType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/locale\/bulgarian","title":"case bulgarian","type":"case"},{"path":"\/documentation\/discord\/locale\/chinesechina","title":"case chineseChina","type":"case"},{"path":"\/documentation\/discord\/locale\/chinesetaiwan","title":"case chineseTaiwan","type":"case"},{"path":"\/documentation\/discord\/locale\/croatian","title":"case croatian","type":"case"},{"path":"\/documentation\/discord\/locale\/czech","title":"case czech","type":"case"},{"path":"\/documentation\/discord\/locale\/danish","title":"case danish","type":"case"},{"path":"\/documentation\/discord\/locale\/dutch","title":"case dutch","type":"case"},{"path":"\/documentation\/discord\/locale\/englishuk","title":"case englishUK","type":"case"},{"path":"\/documentation\/discord\/locale\/englishus","title":"case englishUS","type":"case"},{"path":"\/documentation\/discord\/locale\/finnish","title":"case finnish","type":"case"},{"path":"\/documentation\/discord\/locale\/french","title":"case french","type":"case"},{"path":"\/documentation\/discord\/locale\/german","title":"case german","type":"case"},{"path":"\/documentation\/discord\/locale\/greek","title":"case greek","type":"case"},{"path":"\/documentation\/discord\/locale\/hindi","title":"case hindi","type":"case"},{"path":"\/documentation\/discord\/locale\/hungarian","title":"case hungarian","type":"case"},{"path":"\/documentation\/discord\/locale\/indonesian","title":"case indonesian","type":"case"},{"path":"\/documentation\/discord\/locale\/italian","title":"case italian","type":"case"},{"path":"\/documentation\/discord\/locale\/japanese","title":"case japanese","type":"case"},{"path":"\/documentation\/discord\/locale\/korean","title":"case korean","type":"case"},{"path":"\/documentation\/discord\/locale\/lithuanian","title":"case lithuanian","type":"case"},{"path":"\/documentation\/discord\/locale\/norwegian","title":"case norwegian","type":"case"},{"path":"\/documentation\/discord\/locale\/polish","title":"case polish","type":"case"},{"path":"\/documentation\/discord\/locale\/portuguese","title":"case portuguese","type":"case"},{"path":"\/documentation\/discord\/locale\/romanian","title":"case romanian","type":"case"},{"path":"\/documentation\/discord\/locale\/russian","title":"case russian","type":"case"},{"path":"\/documentation\/discord\/locale\/spanish","title":"case spanish","type":"case"},{"path":"\/documentation\/discord\/locale\/swedish","title":"case swedish","type":"case"},{"path":"\/documentation\/discord\/locale\/thai","title":"case thai","type":"case"},{"path":"\/documentation\/discord\/locale\/turkish","title":"case turkish","type":"case"},{"path":"\/documentation\/discord\/locale\/ukrainian","title":"case ukrainian","type":"case"},{"path":"\/documentation\/discord\/locale\/vietnamese","title":"case vietnamese","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/locale\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/locale\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/locale\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/locale\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/locale\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/locale\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/locale","title":"Locale","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/oauth2scopes\/activitiesread","title":"case activitiesRead","type":"case"},{"path":"\/documentation\/discord\/oauth2scopes\/activitieswrite","title":"case activitiesWrite","type":"case"},{"path":"\/documentation\/discord\/oauth2scopes\/applicationsbuildsread","title":"case applicationsBuildsRead","type":"case"},{"path":"\/documentation\/discord\/oauth2scopes\/applicationsbuildsupload","title":"case applicationsBuildsUpload","type":"case"},{"path":"\/documentation\/discord\/oauth2scopes\/applicationscommands","title":"case applicationsCommands","type":"case"},{"path":"\/documentation\/discord\/oauth2scopes\/applicationscommandspermissionsupdate","title":"case applicationsCommandsPermissionsUpdate","type":"case"},{"path":"\/documentation\/discord\/oauth2scopes\/applicationscommandsupdate","title":"case applicationsCommandsUpdate","type":"case"},{"path":"\/documentation\/discord\/oauth2scopes\/applicationsentitlements","title":"case applicationsEntitlements","type":"case"},{"path":"\/documentation\/discord\/oauth2scopes\/applicationsstoreupdate","title":"case applicationsStoreUpdate","type":"case"},{"path":"\/documentation\/discord\/oauth2scopes\/bot","title":"case bot","type":"case"},{"path":"\/documentation\/discord\/oauth2scopes\/connections","title":"case connections","type":"case"},{"path":"\/documentation\/discord\/oauth2scopes\/dmchannelsread","title":"case dmChannelsRead","type":"case"},{"path":"\/documentation\/discord\/oauth2scopes\/email","title":"case email","type":"case"},{"path":"\/documentation\/discord\/oauth2scopes\/gdmjoin","title":"case gdmJoin","type":"case"},{"path":"\/documentation\/discord\/oauth2scopes\/guilds","title":"case guilds","type":"case"},{"path":"\/documentation\/discord\/oauth2scopes\/guildsjoin","title":"case guildsJoin","type":"case"},{"path":"\/documentation\/discord\/oauth2scopes\/guildsmembersread","title":"case guildsMembersRead","type":"case"},{"path":"\/documentation\/discord\/oauth2scopes\/identify","title":"case identify","type":"case"},{"path":"\/documentation\/discord\/oauth2scopes\/messagesread","title":"case messagesRead","type":"case"},{"path":"\/documentation\/discord\/oauth2scopes\/relationshipread","title":"case relationshipRead","type":"case"},{"path":"\/documentation\/discord\/oauth2scopes\/roleconnectionswrite","title":"case roleConnectionsWrite","type":"case"},{"path":"\/documentation\/discord\/oauth2scopes\/rpc","title":"case rpc","type":"case"},{"path":"\/documentation\/discord\/oauth2scopes\/rpcactivitieswrite","title":"case rpcActivitiesWrite","type":"case"},{"path":"\/documentation\/discord\/oauth2scopes\/rpcnotificationsread","title":"case rpcNotificationsRead","type":"case"},{"path":"\/documentation\/discord\/oauth2scopes\/rpcvoiceread","title":"case rpcVoiceRead","type":"case"},{"path":"\/documentation\/discord\/oauth2scopes\/rpcvoicewrite","title":"case rpcVoiceWrite","type":"case"},{"path":"\/documentation\/discord\/oauth2scopes\/voice","title":"case voice","type":"case"},{"path":"\/documentation\/discord\/oauth2scopes\/webhookincoming","title":"case webhookIncoming","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/oauth2scopes\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/oauth2scopes\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/oauth2scopes\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/oauth2scopes\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/oauth2scopes\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/oauth2scopes\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/oauth2scopes","title":"OAuth2Scopes","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/permission\/addreactions","title":"case addReactions","type":"case"},{"path":"\/documentation\/discord\/permission\/administrator","title":"case administrator","type":"case"},{"path":"\/documentation\/discord\/permission\/attachfiles","title":"case attachFiles","type":"case"},{"path":"\/documentation\/discord\/permission\/banmembers","title":"case banMembers","type":"case"},{"path":"\/documentation\/discord\/permission\/changenickname","title":"case changeNickname","type":"case"},{"path":"\/documentation\/discord\/permission\/connect","title":"case connect","type":"case"},{"path":"\/documentation\/discord\/permission\/createinstantinvite","title":"case createInstantInvite","type":"case"},{"path":"\/documentation\/discord\/permission\/createprivatethreads","title":"case createPrivateThreads","type":"case"},{"path":"\/documentation\/discord\/permission\/createpublicthreads","title":"case createPublicThreads","type":"case"},{"path":"\/documentation\/discord\/permission\/deafenmembers","title":"case deafenMembers","type":"case"},{"path":"\/documentation\/discord\/permission\/embedlinks","title":"case embedLinks","type":"case"},{"path":"\/documentation\/discord\/permission\/kickmembers","title":"case kickMembers","type":"case"},{"path":"\/documentation\/discord\/permission\/managechannels","title":"case manageChannels","type":"case"},{"path":"\/documentation\/discord\/permission\/manageemojisandstickers","title":"case manageEmojisAndStickers","type":"case"},{"path":"\/documentation\/discord\/permission\/manageevents","title":"case manageEvents","type":"case"},{"path":"\/documentation\/discord\/permission\/manageguild","title":"case manageGuild","type":"case"},{"path":"\/documentation\/discord\/permission\/managemessages","title":"case manageMessages","type":"case"},{"path":"\/documentation\/discord\/permission\/managenicknames","title":"case manageNicknames","type":"case"},{"path":"\/documentation\/discord\/permission\/manageroles","title":"case manageRoles","type":"case"},{"path":"\/documentation\/discord\/permission\/managethreads","title":"case manageThreads","type":"case"},{"path":"\/documentation\/discord\/permission\/managewebhooks","title":"case manageWebhooks","type":"case"},{"path":"\/documentation\/discord\/permission\/mentioneveryone","title":"case mentionEveryone","type":"case"},{"path":"\/documentation\/discord\/permission\/moderatemembers","title":"case moderateMembers","type":"case"},{"path":"\/documentation\/discord\/permission\/movemembers","title":"case moveMembers","type":"case"},{"path":"\/documentation\/discord\/permission\/mutemembers","title":"case muteMembers","type":"case"},{"path":"\/documentation\/discord\/permission\/priorityspeaker","title":"case prioritySpeaker","type":"case"},{"path":"\/documentation\/discord\/permission\/readmessagehistory","title":"case readMessageHistory","type":"case"},{"path":"\/documentation\/discord\/permission\/requesttospeak","title":"case requestToSpeak","type":"case"},{"path":"\/documentation\/discord\/permission\/sendmessages","title":"case sendMessages","type":"case"},{"path":"\/documentation\/discord\/permission\/sendmessagesinthreads","title":"case sendMessagesInThreads","type":"case"},{"path":"\/documentation\/discord\/permission\/sendttsmessages","title":"case sendTtsMessages","type":"case"},{"path":"\/documentation\/discord\/permission\/sendvoicemessages","title":"case sendVoiceMessages","type":"case"},{"path":"\/documentation\/discord\/permission\/speak","title":"case speak","type":"case"},{"path":"\/documentation\/discord\/permission\/stream","title":"case stream","type":"case"},{"path":"\/documentation\/discord\/permission\/useactivities","title":"case useActivities","type":"case"},{"path":"\/documentation\/discord\/permission\/useapplicationcommands","title":"case useApplicationCommands","type":"case"},{"path":"\/documentation\/discord\/permission\/useexternalemojis","title":"case useExternalEmojis","type":"case"},{"path":"\/documentation\/discord\/permission\/useexternalsoundboard","title":"case useExternalSoundboard","type":"case"},{"path":"\/documentation\/discord\/permission\/useexternalstickers","title":"case useExternalStickers","type":"case"},{"path":"\/documentation\/discord\/permission\/usesoundboard","title":"case useSoundboard","type":"case"},{"path":"\/documentation\/discord\/permission\/usevoiceactivitydetection","title":"case useVoiceActivityDetection","type":"case"},{"path":"\/documentation\/discord\/permission\/viewauditlog","title":"case viewAuditLog","type":"case"},{"path":"\/documentation\/discord\/permission\/viewchannel","title":"case viewChannel","type":"case"},{"path":"\/documentation\/discord\/permission\/viewcreatormonetizationanalytics","title":"case viewCreatorMonetizationAnalytics","type":"case"},{"path":"\/documentation\/discord\/permission\/viewguildinsights","title":"case viewGuildInsights","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/discord\/permission\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/permission\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/permission\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/permission\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/discord\/permission\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/discord\/permission\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/permission","title":"Permission","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/releaselevel\/alpha","title":"case alpha","type":"case"},{"path":"\/documentation\/discord\/releaselevel\/beta","title":"case beta","type":"case"},{"path":"\/documentation\/discord\/releaselevel\/final","title":"case final","type":"case"},{"path":"\/documentation\/discord\/releaselevel\/rc","title":"case rc","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/discord\/releaselevel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/discord\/releaselevel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/discord\/releaselevel","title":"ReleaseLevel","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/discord\/uierror\/invalidbutton(_:)","title":"case invalidButton(String)","type":"case"},{"path":"\/documentation\/discord\/uierror\/invalidui(_:)","title":"case invalidUI(String)","type":"case"},{"path":"\/documentation\/discord\/uierror\/noresponse(_:)","title":"case noResponse(String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/discord\/uierror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/discord\/uierror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/discord\/uierror","title":"UIError","type":"enum"}],"path":"\/documentation\/discord","title":"Discord","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}